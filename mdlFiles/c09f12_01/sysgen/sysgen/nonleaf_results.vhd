library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/Delay10"

entity delay10_entity_8181a66134 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d: in std_logic_vector(31 downto 0); 
    q: out std_logic_vector(31 downto 0)
  );
end delay10_entity_8181a66134;

architecture structural of delay10_entity_8181a66134 is
  signal ce_1_sg_x0: std_logic;
  signal clk_1_sg_x0: std_logic;
  signal register0_q_net_x1: std_logic_vector(31 downto 0);
  signal register0_q_net_x2: std_logic_vector(31 downto 0);

begin
  ce_1_sg_x0 <= ce_1;
  clk_1_sg_x0 <= clk_1;
  register0_q_net_x1 <= d;
  q <= register0_q_net_x2;

  register0: entity work.xlregister
    generic map (
      d_width => 32,
      init_value => b"00000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x0,
      clk => clk_1_sg_x0,
      d => register0_q_net_x1,
      en => "1",
      rst => "0",
      q => register0_q_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/Delay100"

entity delay100_entity_f5402d4afa is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d: in std_logic; 
    q: out std_logic
  );
end delay100_entity_f5402d4afa;

architecture structural of delay100_entity_f5402d4afa is
  signal arm8_y_net_x0: std_logic;
  signal ce_1_sg_x1: std_logic;
  signal clk_1_sg_x1: std_logic;
  signal register0_q_net: std_logic;
  signal register1_q_net_x0: std_logic;

begin
  ce_1_sg_x1 <= ce_1;
  clk_1_sg_x1 <= clk_1;
  arm8_y_net_x0 <= d;
  q <= register1_q_net_x0;

  register0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x1,
      clk => clk_1_sg_x1,
      d(0) => arm8_y_net_x0,
      en => "1",
      rst => "0",
      q(0) => register0_q_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x1,
      clk => clk_1_sg_x1,
      d(0) => register0_q_net,
      en => "1",
      rst => "0",
      q(0) => register1_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/Delay11"

entity delay11_entity_c2a06abd76 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d: in std_logic; 
    q: out std_logic
  );
end delay11_entity_c2a06abd76;

architecture structural of delay11_entity_c2a06abd76 is
  signal ce_1_sg_x2: std_logic;
  signal clk_1_sg_x2: std_logic;
  signal logical1_y_net_x0: std_logic;
  signal register0_q_net_x0: std_logic;

begin
  ce_1_sg_x2 <= ce_1;
  clk_1_sg_x2 <= clk_1;
  logical1_y_net_x0 <= d;
  q <= register0_q_net_x0;

  register0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x2,
      clk => clk_1_sg_x2,
      d(0) => logical1_y_net_x0,
      en => "1",
      rst => "0",
      q(0) => register0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/Delay3"

entity delay3_entity_1a1c4e6264 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d: in std_logic_vector(63 downto 0); 
    q: out std_logic_vector(63 downto 0)
  );
end delay3_entity_1a1c4e6264;

architecture structural of delay3_entity_1a1c4e6264 is
  signal ce_1_sg_x5: std_logic;
  signal clk_1_sg_x5: std_logic;
  signal pkt_out_x0: std_logic_vector(63 downto 0);
  signal register0_q_net_x0: std_logic_vector(63 downto 0);

begin
  ce_1_sg_x5 <= ce_1;
  clk_1_sg_x5 <= clk_1;
  pkt_out_x0 <= d;
  q <= register0_q_net_x0;

  register0: entity work.xlregister
    generic map (
      d_width => 64,
      init_value => b"0000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x5,
      clk => clk_1_sg_x5,
      d => pkt_out_x0,
      en => "1",
      rst => "0",
      q => register0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/Delay4"

entity delay4_entity_dd35b94c7d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d: in std_logic_vector(7 downto 0); 
    q: out std_logic_vector(7 downto 0)
  );
end delay4_entity_dd35b94c7d;

architecture structural of delay4_entity_dd35b94c7d is
  signal ce_1_sg_x7: std_logic;
  signal clk_1_sg_x7: std_logic;
  signal oob_out_x0: std_logic_vector(7 downto 0);
  signal register0_q_net_x0: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x7 <= ce_1;
  clk_1_sg_x7 <= clk_1;
  oob_out_x0 <= d;
  q <= register0_q_net_x0;

  register0: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x7,
      clk => clk_1_sg_x7,
      d => oob_out_x0,
      en => "1",
      rst => "0",
      q => register0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/Subsystem"

entity subsystem_entity_2a44c7d8dc is
  port (
    adc_disabled: in std_logic; 
    adcor: in std_logic; 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    clk_err: in std_logic; 
    clr: in std_logic; 
    coarse_bits: in std_logic_vector(4 downto 0); 
    coarsefftor: in std_logic; 
    ct_err: in std_logic; 
    fine_bits: in std_logic_vector(4 downto 0); 
    finefftor: in std_logic; 
    quantor: in std_logic; 
    sync_val: in std_logic_vector(1 downto 0); 
    xaui_of: in std_logic; 
    xuai_ldn: in std_logic; 
    adc0_bad_latch: out std_logic; 
    status: out std_logic_vector(31 downto 0)
  );
end subsystem_entity_2a44c7d8dc;

architecture structural of subsystem_entity_2a44c7d8dc is
  signal c09f12_01_gbe0_tx_overflow_net_x0: std_logic;
  signal c09f12_01_katadc0_user_outofrange0_net_x0: std_logic;
  signal ce_1_sg_x11: std_logic;
  signal clk_1_sg_x11: std_logic;
  signal concat13_y_net_x0: std_logic_vector(31 downto 0);
  signal constant1_op_net: std_logic_vector(8 downto 0);
  signal constant3_op_net_x0: std_logic;
  signal constant_op_net: std_logic_vector(1 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal fstatcbits0_op_net_x0: std_logic_vector(4 downto 0);
  signal fstatfbits0_op_net_x0: std_logic_vector(4 downto 0);
  signal inverter5_op_net_x0: std_logic;
  signal inverter_op_net_x0: std_logic;
  signal logical12_y_net_x0: std_logic;
  signal logical21_y_net_x0: std_logic;
  signal logical_y_net_x0: std_logic;
  signal mux_y_net_x0: std_logic_vector(1 downto 0);
  signal register10_q_net: std_logic;
  signal register1_q_net: std_logic;
  signal register2_q_net: std_logic;
  signal register3_q_net: std_logic;
  signal register4_q_net: std_logic;
  signal register6_q_net: std_logic;
  signal register7_q_net_x0: std_logic;
  signal register8_q_net: std_logic;
  signal register9_q_net: std_logic;
  signal slice1_y_net: std_logic_vector(4 downto 0);
  signal slice9_y_net: std_logic_vector(4 downto 0);

begin
  inverter5_op_net_x0 <= adc_disabled;
  c09f12_01_katadc0_user_outofrange0_net_x0 <= adcor;
  ce_1_sg_x11 <= ce_1;
  clk_1_sg_x11 <= clk_1;
  logical21_y_net_x0 <= clk_err;
  edge_op_y_net_x0 <= clr;
  fstatcbits0_op_net_x0 <= coarse_bits;
  delay2_q_net_x0 <= coarsefftor;
  logical12_y_net_x0 <= ct_err;
  fstatfbits0_op_net_x0 <= fine_bits;
  constant3_op_net_x0 <= finefftor;
  logical_y_net_x0 <= quantor;
  mux_y_net_x0 <= sync_val;
  c09f12_01_gbe0_tx_overflow_net_x0 <= xaui_of;
  inverter_op_net_x0 <= xuai_ldn;
  adc0_bad_latch <= register7_q_net_x0;
  status <= concat13_y_net_x0;

  concat13: entity work.concat_7ad576a6fc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => slice9_y_net,
      in1 => slice1_y_net,
      in10(0) => register4_q_net,
      in11(0) => register8_q_net,
      in12(0) => register6_q_net,
      in13(0) => register9_q_net,
      in2 => mux_y_net_x0,
      in3 => constant_op_net,
      in4(0) => register2_q_net,
      in5(0) => register1_q_net,
      in6 => constant1_op_net,
      in7(0) => register10_q_net,
      in8(0) => register7_q_net_x0,
      in9(0) => register3_q_net,
      y => concat13_y_net_x0
    );

  constant1: entity work.constant_fd85eb7067
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant_x0: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x11,
      clk => clk_1_sg_x11,
      d(0) => c09f12_01_gbe0_tx_overflow_net_x0,
      en(0) => c09f12_01_gbe0_tx_overflow_net_x0,
      rst(0) => edge_op_y_net_x0,
      q(0) => register1_q_net
    );

  register10: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x11,
      clk => clk_1_sg_x11,
      d(0) => logical21_y_net_x0,
      en(0) => logical21_y_net_x0,
      rst(0) => edge_op_y_net_x0,
      q(0) => register10_q_net
    );

  register2: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x11,
      clk => clk_1_sg_x11,
      d(0) => inverter_op_net_x0,
      en(0) => inverter_op_net_x0,
      rst(0) => edge_op_y_net_x0,
      q(0) => register2_q_net
    );

  register3: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x11,
      clk => clk_1_sg_x11,
      d(0) => logical12_y_net_x0,
      en(0) => logical12_y_net_x0,
      rst(0) => edge_op_y_net_x0,
      q(0) => register3_q_net
    );

  register4: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x11,
      clk => clk_1_sg_x11,
      d(0) => c09f12_01_katadc0_user_outofrange0_net_x0,
      en(0) => c09f12_01_katadc0_user_outofrange0_net_x0,
      rst(0) => edge_op_y_net_x0,
      q(0) => register4_q_net
    );

  register6: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x11,
      clk => clk_1_sg_x11,
      d(0) => delay2_q_net_x0,
      en(0) => delay2_q_net_x0,
      rst(0) => edge_op_y_net_x0,
      q(0) => register6_q_net
    );

  register7: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x11,
      clk => clk_1_sg_x11,
      d(0) => inverter5_op_net_x0,
      en(0) => inverter5_op_net_x0,
      rst(0) => edge_op_y_net_x0,
      q(0) => register7_q_net_x0
    );

  register8: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x11,
      clk => clk_1_sg_x11,
      d(0) => constant3_op_net_x0,
      en(0) => constant3_op_net_x0,
      rst(0) => edge_op_y_net_x0,
      q(0) => register8_q_net
    );

  register9: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x11,
      clk => clk_1_sg_x11,
      d(0) => logical_y_net_x0,
      en(0) => logical_y_net_x0,
      rst(0) => edge_op_y_net_x0,
      q(0) => register9_q_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 4,
      x_width => 5,
      y_width => 5
    )
    port map (
      x => fstatfbits0_op_net_x0,
      y => slice1_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 4,
      x_width => 5,
      y_width => 5
    )
    port map (
      x => fstatcbits0_op_net_x0,
      y => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/Subsystem1/bus_create11"

entity bus_create11_entity_ed14098eb6 is
  port (
    in1: in std_logic; 
    in2: in std_logic_vector(127 downto 0); 
    in3: in std_logic; 
    bus_out: out std_logic_vector(129 downto 0)
  );
end bus_create11_entity_ed14098eb6;

architecture structural of bus_create11_entity_ed14098eb6 is
  signal concatenate_y_net_x0: std_logic_vector(129 downto 0);
  signal convert7_dout_net_x0: std_logic_vector(127 downto 0);
  signal logical2_y_net_x0: std_logic;
  signal logical4_y_net_x0: std_logic;
  signal reinterpret1_output_port_net: std_logic;
  signal reinterpret2_output_port_net: std_logic_vector(127 downto 0);
  signal reinterpret3_output_port_net: std_logic;

begin
  logical4_y_net_x0 <= in1;
  convert7_dout_net_x0 <= in2;
  logical2_y_net_x0 <= in3;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_12f835c970
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2(0) => reinterpret3_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => logical4_y_net_x0,
      output_port(0) => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_28b9ecc6fc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert7_dout_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => logical2_y_net_x0,
      output_port(0) => reinterpret3_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/Subsystem1"

entity subsystem1_entity_1d30495a1f is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_in: in std_logic_vector(63 downto 0); 
    eof_in: in std_logic; 
    ip_in: in std_logic_vector(31 downto 0); 
    led_tx: in std_logic; 
    link_up: in std_logic; 
    tx_full: in std_logic; 
    tx_over: in std_logic; 
    valid_in: in std_logic; 
    debug_out: out std_logic_vector(129 downto 0)
  );
end subsystem1_entity_1d30495a1f;

architecture structural of subsystem1_entity_1d30495a1f is
  signal c09f12_01_gbe0_led_tx_net_x0: std_logic;
  signal c09f12_01_gbe0_led_up_net_x0: std_logic;
  signal c09f12_01_gbe0_tx_afull_net_x0: std_logic;
  signal c09f12_01_gbe0_tx_overflow_net_x1: std_logic;
  signal ce_1_sg_x12: std_logic;
  signal clk_1_sg_x12: std_logic;
  signal concat1_y_net: std_logic_vector(101 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(129 downto 0);
  signal convert1_dout_net: std_logic;
  signal convert2_dout_net: std_logic;
  signal convert3_dout_net: std_logic;
  signal convert4_dout_net: std_logic;
  signal convert5_dout_net: std_logic;
  signal convert6_dout_net: std_logic;
  signal convert7_dout_net_x0: std_logic_vector(127 downto 0);
  signal logical2_y_net_x1: std_logic;
  signal logical4_y_net_x0: std_logic;
  signal register0_q_net_x4: std_logic_vector(31 downto 0);
  signal register0_q_net_x5: std_logic;
  signal register0_q_net_x6: std_logic_vector(63 downto 0);

begin
  ce_1_sg_x12 <= ce_1;
  clk_1_sg_x12 <= clk_1;
  register0_q_net_x6 <= data_in;
  register0_q_net_x5 <= eof_in;
  register0_q_net_x4 <= ip_in;
  c09f12_01_gbe0_led_tx_net_x0 <= led_tx;
  c09f12_01_gbe0_led_up_net_x0 <= link_up;
  c09f12_01_gbe0_tx_afull_net_x0 <= tx_full;
  c09f12_01_gbe0_tx_overflow_net_x1 <= tx_over;
  logical2_y_net_x1 <= valid_in;
  debug_out <= concatenate_y_net_x1;

  bus_create11_ed14098eb6: entity work.bus_create11_entity_ed14098eb6
    port map (
      in1 => logical4_y_net_x0,
      in2 => convert7_dout_net_x0,
      in3 => logical2_y_net_x1,
      bus_out => concatenate_y_net_x1
    );

  concat1: entity work.concat_8d83147763
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => convert3_dout_net,
      in1(0) => convert1_dout_net,
      in2(0) => convert2_dout_net,
      in3(0) => convert4_dout_net,
      in4(0) => convert5_dout_net,
      in5(0) => convert6_dout_net,
      in6 => register0_q_net_x4,
      in7 => register0_q_net_x6,
      y => concat1_y_net
    );

  convert1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x12,
      clk => clk_1_sg_x12,
      clr => '0',
      din(0) => c09f12_01_gbe0_led_up_net_x0,
      en => "1",
      dout(0) => convert1_dout_net
    );

  convert2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x12,
      clk => clk_1_sg_x12,
      clr => '0',
      din(0) => c09f12_01_gbe0_led_tx_net_x0,
      en => "1",
      dout(0) => convert2_dout_net
    );

  convert3: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x12,
      clk => clk_1_sg_x12,
      clr => '0',
      din(0) => register0_q_net_x5,
      en => "1",
      dout(0) => convert3_dout_net
    );

  convert4: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x12,
      clk => clk_1_sg_x12,
      clr => '0',
      din(0) => c09f12_01_gbe0_tx_afull_net_x0,
      en => "1",
      dout(0) => convert4_dout_net
    );

  convert5: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x12,
      clk => clk_1_sg_x12,
      clr => '0',
      din(0) => c09f12_01_gbe0_tx_overflow_net_x1,
      en => "1",
      dout(0) => convert5_dout_net
    );

  convert6: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x12,
      clk => clk_1_sg_x12,
      clr => '0',
      din(0) => logical2_y_net_x1,
      en => "1",
      dout(0) => convert6_dout_net
    );

  convert7: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 102,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 128,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x12,
      clk => clk_1_sg_x12,
      clr => '0',
      din => concat1_y_net,
      en => "1",
      dout => convert7_dout_net_x0
    );

  logical4: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register0_q_net_x5,
      d1(0) => logical2_y_net_x1,
      y(0) => logical4_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/Subsystem2"

entity subsystem2_entity_c612b0eca6 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_in: in std_logic_vector(63 downto 0); 
    link_down: in std_logic; 
    oob_in: in std_logic_vector(7 downto 0); 
    we_in: in std_logic; 
    debug_out: out std_logic_vector(129 downto 0)
  );
end subsystem2_entity_c612b0eca6;

architecture structural of subsystem2_entity_c612b0eca6 is
  signal ce_1_sg_x13: std_logic;
  signal clk_1_sg_x13: std_logic;
  signal concat1_y_net: std_logic_vector(95 downto 0);
  signal concat2_y_net: std_logic_vector(8 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(129 downto 0);
  signal constant17_op_net_x1: std_logic;
  signal convert1_dout_net: std_logic;
  signal convert2_dout_net_x0: std_logic_vector(127 downto 0);
  signal convert_dout_net: std_logic_vector(31 downto 0);
  signal oob_out_x1: std_logic_vector(7 downto 0);
  signal pkt_out_x1: std_logic_vector(63 downto 0);
  signal slice3_y_net_x0: std_logic;
  signal valid_out_x2: std_logic;

begin
  ce_1_sg_x13 <= ce_1;
  clk_1_sg_x13 <= clk_1;
  pkt_out_x1 <= data_in;
  constant17_op_net_x1 <= link_down;
  oob_out_x1 <= oob_in;
  valid_out_x2 <= we_in;
  debug_out <= concatenate_y_net_x1;

  bus_create11_efa304fab7: entity work.bus_create11_entity_ed14098eb6
    port map (
      in1 => slice3_y_net_x0,
      in2 => convert2_dout_net_x0,
      in3 => valid_out_x2,
      bus_out => concatenate_y_net_x1
    );

  concat1: entity work.concat_0e2072f8e1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => convert_dout_net,
      in1 => pkt_out_x1,
      y => concat1_y_net
    );

  concat2: entity work.concat_1ece14600f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => convert1_dout_net,
      in1 => oob_out_x1,
      y => concat2_y_net
    );

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 9,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      din => concat2_y_net,
      en => "1",
      dout => convert_dout_net
    );

  convert1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      din(0) => constant17_op_net_x1,
      en => "1",
      dout(0) => convert1_dout_net
    );

  convert2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 96,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 128,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x13,
      clk => clk_1_sg_x13,
      clr => '0',
      din => concat1_y_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => oob_out_x1,
      y(0) => slice3_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/Subsystem4/bus_expand1"

entity bus_expand1_entity_33d7318597 is
  port (
    bus_in: in std_logic_vector(73 downto 0); 
    lsb_out1: out std_logic; 
    msb_out3: out std_logic; 
    out2: out std_logic_vector(71 downto 0)
  );
end bus_expand1_entity_33d7318597;

architecture structural of bus_expand1_entity_33d7318597 is
  signal concatenate_y_net_x0: std_logic_vector(73 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(71 downto 0);
  signal slice1_y_net_x1: std_logic;
  signal slice2_y_net: std_logic_vector(71 downto 0);
  signal slice3_y_net_x1: std_logic;

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= slice1_y_net_x1;
  msb_out3 <= slice3_y_net_x1;
  out2 <= reinterpret2_output_port_net_x0;

  reinterpret2: entity work.reinterpret_8b4279cdc5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 74,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice1_y_net_x1
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 72,
      x_width => 74,
      y_width => 72
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 73,
      new_msb => 73,
      x_width => 74,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice3_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/Subsystem4/bus_expand2"

entity bus_expand2_entity_5a9cb2578d is
  port (
    bus_in: in std_logic_vector(129 downto 0); 
    lsb_out1: out std_logic; 
    msb_out3: out std_logic; 
    out2: out std_logic_vector(127 downto 0)
  );
end bus_expand2_entity_5a9cb2578d;

architecture structural of bus_expand2_entity_5a9cb2578d is
  signal mux2_y_net_x0: std_logic_vector(129 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(127 downto 0);
  signal slice1_y_net_x0: std_logic;
  signal slice2_y_net: std_logic_vector(127 downto 0);
  signal slice3_y_net_x0: std_logic;

begin
  mux2_y_net_x0 <= bus_in;
  lsb_out1 <= slice1_y_net_x0;
  msb_out3 <= slice3_y_net_x0;
  out2 <= reinterpret2_output_port_net_x0;

  reinterpret2: entity work.reinterpret_28b9ecc6fc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 130,
      y_width => 1
    )
    port map (
      x => mux2_y_net_x0,
      y(0) => slice1_y_net_x0
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 128,
      x_width => 130,
      y_width => 128
    )
    port map (
      x => mux2_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 129,
      new_msb => 129,
      x_width => 130,
      y_width => 1
    )
    port map (
      x => mux2_y_net_x0,
      y(0) => slice3_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/Subsystem4/bus_expand3"

entity bus_expand3_entity_a1c48a8f8e is
  port (
    bus_in: in std_logic_vector(17 downto 0); 
    lsb_out1: out std_logic; 
    msb_out3: out std_logic; 
    out2: out std_logic_vector(15 downto 0)
  );
end bus_expand3_entity_a1c48a8f8e;

architecture structural of bus_expand3_entity_a1c48a8f8e is
  signal concatenate_y_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(15 downto 0);
  signal slice1_y_net_x1: std_logic;
  signal slice2_y_net: std_logic_vector(15 downto 0);
  signal slice3_y_net_x1: std_logic;

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= slice1_y_net_x1;
  msb_out3 <= slice3_y_net_x1;
  out2 <= reinterpret2_output_port_net_x0;

  reinterpret2: entity work.reinterpret_ddc3ebdd7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 18,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice1_y_net_x1
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 16,
      x_width => 18,
      y_width => 16
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 17,
      new_msb => 17,
      x_width => 18,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice3_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/Subsystem4/bus_expand4"

entity bus_expand4_entity_a97abe62cc is
  port (
    bus_in: in std_logic_vector(65 downto 0); 
    lsb_out1: out std_logic; 
    msb_out3: out std_logic; 
    out2: out std_logic_vector(63 downto 0)
  );
end bus_expand4_entity_a97abe62cc;

architecture structural of bus_expand4_entity_a97abe62cc is
  signal concatenate_y_net_x0: std_logic_vector(65 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(63 downto 0);
  signal slice1_y_net_x1: std_logic;
  signal slice2_y_net: std_logic_vector(63 downto 0);
  signal slice3_y_net_x1: std_logic;

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= slice1_y_net_x1;
  msb_out3 <= slice3_y_net_x1;
  out2 <= reinterpret2_output_port_net_x0;

  reinterpret2: entity work.reinterpret_9a13f6a2a0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 66,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice1_y_net_x1
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 64,
      x_width => 66,
      y_width => 64
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 65,
      new_msb => 65,
      x_width => 66,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice3_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/Subsystem4"

entity subsystem4_entity_878b3c265c is
  port (
    buffer_72: in std_logic_vector(73 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coarse_72: in std_logic_vector(73 downto 0); 
    ct_64: in std_logic_vector(65 downto 0); 
    fine_128: in std_logic_vector(129 downto 0); 
    finepfb_72: in std_logic_vector(73 downto 0); 
    gbetx0_128: in std_logic_vector(129 downto 0); 
    quant_16: in std_logic_vector(17 downto 0); 
    select_x0: in std_logic_vector(2 downto 0); 
    xaui_128: in std_logic_vector(129 downto 0); 
    data: out std_logic_vector(127 downto 0); 
    sync: out std_logic; 
    valid: out std_logic
  );
end subsystem4_entity_878b3c265c;

architecture structural of subsystem4_entity_878b3c265c is
  signal arm14_y_net_x0: std_logic_vector(2 downto 0);
  signal ce_1_sg_x15: std_logic;
  signal clk_1_sg_x15: std_logic;
  signal concatenate_y_net_x0: std_logic_vector(129 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(129 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(129 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(73 downto 0);
  signal concatenate_y_net_x15: std_logic_vector(73 downto 0);
  signal concatenate_y_net_x16: std_logic_vector(73 downto 0);
  signal concatenate_y_net_x17: std_logic_vector(129 downto 0);
  signal concatenate_y_net_x18: std_logic_vector(65 downto 0);
  signal concatenate_y_net_x19: std_logic_vector(17 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(129 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(129 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(129 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(129 downto 0);
  signal convert1_dout_net_x0: std_logic_vector(127 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(127 downto 0);
  signal convert3_dout_net_x0: std_logic_vector(127 downto 0);
  signal convert4_dout_net_x0: std_logic_vector(127 downto 0);
  signal convert5_dout_net_x0: std_logic_vector(127 downto 0);
  signal mux2_y_net_x0: std_logic_vector(129 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(15 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(63 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(127 downto 0);
  signal slice1_y_net_x1: std_logic;
  signal slice1_y_net_x2: std_logic;
  signal slice1_y_net_x3: std_logic;
  signal slice1_y_net_x4: std_logic;
  signal slice1_y_net_x5: std_logic;
  signal slice1_y_net_x6: std_logic;
  signal slice3_y_net_x1: std_logic;
  signal slice3_y_net_x2: std_logic;
  signal slice3_y_net_x3: std_logic;
  signal slice3_y_net_x4: std_logic;
  signal slice3_y_net_x5: std_logic;
  signal slice3_y_net_x6: std_logic;

begin
  concatenate_y_net_x15 <= buffer_72;
  ce_1_sg_x15 <= ce_1;
  clk_1_sg_x15 <= clk_1;
  concatenate_y_net_x14 <= coarse_72;
  concatenate_y_net_x18 <= ct_64;
  concatenate_y_net_x17 <= fine_128;
  concatenate_y_net_x16 <= finepfb_72;
  concatenate_y_net_x12 <= gbetx0_128;
  concatenate_y_net_x19 <= quant_16;
  arm14_y_net_x0 <= select_x0;
  concatenate_y_net_x13 <= xaui_128;
  data <= reinterpret2_output_port_net_x6;
  sync <= slice3_y_net_x6;
  valid <= slice1_y_net_x6;

  bus_create1_f4b521561d: entity work.bus_create11_entity_ed14098eb6
    port map (
      in1 => slice3_y_net_x2,
      in2 => convert1_dout_net_x0,
      in3 => slice1_y_net_x2,
      bus_out => concatenate_y_net_x0
    );

  bus_create2_3e4973ce35: entity work.bus_create11_entity_ed14098eb6
    port map (
      in1 => slice3_y_net_x3,
      in2 => convert2_dout_net_x0,
      in3 => slice1_y_net_x3,
      bus_out => concatenate_y_net_x3
    );

  bus_create3_8efa364422: entity work.bus_create11_entity_ed14098eb6
    port map (
      in1 => slice3_y_net_x1,
      in2 => convert3_dout_net_x0,
      in3 => slice1_y_net_x1,
      bus_out => concatenate_y_net_x4
    );

  bus_create4_4c9de69d41: entity work.bus_create11_entity_ed14098eb6
    port map (
      in1 => slice3_y_net_x4,
      in2 => convert4_dout_net_x0,
      in3 => slice1_y_net_x4,
      bus_out => concatenate_y_net_x5
    );

  bus_create5_5d7bb20f26: entity work.bus_create11_entity_ed14098eb6
    port map (
      in1 => slice3_y_net_x5,
      in2 => convert5_dout_net_x0,
      in3 => slice1_y_net_x5,
      bus_out => concatenate_y_net_x6
    );

  bus_expand1_33d7318597: entity work.bus_expand1_entity_33d7318597
    port map (
      bus_in => concatenate_y_net_x14,
      lsb_out1 => slice1_y_net_x1,
      msb_out3 => slice3_y_net_x1,
      out2 => reinterpret2_output_port_net_x0
    );

  bus_expand2_5a9cb2578d: entity work.bus_expand2_entity_5a9cb2578d
    port map (
      bus_in => mux2_y_net_x0,
      lsb_out1 => slice1_y_net_x6,
      msb_out3 => slice3_y_net_x6,
      out2 => reinterpret2_output_port_net_x6
    );

  bus_expand3_a1c48a8f8e: entity work.bus_expand3_entity_a1c48a8f8e
    port map (
      bus_in => concatenate_y_net_x19,
      lsb_out1 => slice1_y_net_x2,
      msb_out3 => slice3_y_net_x2,
      out2 => reinterpret2_output_port_net_x2
    );

  bus_expand4_a97abe62cc: entity work.bus_expand4_entity_a97abe62cc
    port map (
      bus_in => concatenate_y_net_x18,
      lsb_out1 => slice1_y_net_x3,
      msb_out3 => slice3_y_net_x3,
      out2 => reinterpret2_output_port_net_x3
    );

  bus_expand5_43932c57c9: entity work.bus_expand1_entity_33d7318597
    port map (
      bus_in => concatenate_y_net_x15,
      lsb_out1 => slice1_y_net_x4,
      msb_out3 => slice3_y_net_x4,
      out2 => reinterpret2_output_port_net_x4
    );

  bus_expand6_e60898021a: entity work.bus_expand1_entity_33d7318597
    port map (
      bus_in => concatenate_y_net_x16,
      lsb_out1 => slice1_y_net_x5,
      msb_out3 => slice3_y_net_x5,
      out2 => reinterpret2_output_port_net_x5
    );

  convert1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 16,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 128,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x15,
      clk => clk_1_sg_x15,
      clr => '0',
      din => reinterpret2_output_port_net_x2,
      en => "1",
      dout => convert1_dout_net_x0
    );

  convert2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 64,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 128,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x15,
      clk => clk_1_sg_x15,
      clr => '0',
      din => reinterpret2_output_port_net_x3,
      en => "1",
      dout => convert2_dout_net_x0
    );

  convert3: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 72,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 128,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x15,
      clk => clk_1_sg_x15,
      clr => '0',
      din => reinterpret2_output_port_net_x0,
      en => "1",
      dout => convert3_dout_net_x0
    );

  convert4: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 72,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 128,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x15,
      clk => clk_1_sg_x15,
      clr => '0',
      din => reinterpret2_output_port_net_x4,
      en => "1",
      dout => convert4_dout_net_x0
    );

  convert5: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 72,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 128,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x15,
      clk => clk_1_sg_x15,
      clr => '0',
      din => reinterpret2_output_port_net_x5,
      en => "1",
      dout => convert5_dout_net_x0
    );

  mux2: entity work.mux_c42b9c1ff1
    port map (
      ce => ce_1_sg_x15,
      clk => clk_1_sg_x15,
      clr => '0',
      d0 => concatenate_y_net_x4,
      d1 => concatenate_y_net_x17,
      d2 => concatenate_y_net_x0,
      d3 => concatenate_y_net_x3,
      d4 => concatenate_y_net_x13,
      d5 => concatenate_y_net_x12,
      d6 => concatenate_y_net_x5,
      d7 => concatenate_y_net_x6,
      sel => arm14_y_net_x0,
      y => mux2_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/adc_snap0/add_gen/edge_detect"

entity edge_detect_entity_773f207806 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end edge_detect_entity_773f207806;

architecture structural of edge_detect_entity_773f207806 is
  signal ce_1_sg_x16: std_logic;
  signal clk_1_sg_x16: std_logic;
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal inverter_op_net: std_logic;
  signal slice3_y_net_x0: std_logic;

begin
  ce_1_sg_x16 <= ce_1;
  clk_1_sg_x16 <= clk_1;
  slice3_y_net_x0 <= in_x0;
  out_x0 <= edge_op_y_net_x0;

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x16,
      clk => clk_1_sg_x16,
      d(0) => slice3_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_q_net
    );

  edge_op: entity work.logical_f6397bdee1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay_q_net,
      y(0) => edge_op_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x16,
      clk => clk_1_sg_x16,
      clr => '0',
      ip(0) => slice3_y_net_x0,
      op(0) => inverter_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/adc_snap0/add_gen"

entity add_gen_entity_dd9e933c0e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    cont: in std_logic; 
    go: in std_logic; 
    init: in std_logic; 
    vin: in std_logic_vector(31 downto 0); 
    we: in std_logic; 
    add: out std_logic_vector(9 downto 0); 
    en_cnt: out std_logic_vector(31 downto 0); 
    status: out std_logic_vector(31 downto 0); 
    vout: out std_logic_vector(31 downto 0); 
    we_o: out std_logic
  );
end add_gen_entity_dd9e933c0e;

architecture structural of add_gen_entity_dd9e933c0e is
  signal add_gen_op_net: std_logic_vector(31 downto 0);
  signal ce_1_sg_x17: std_logic;
  signal clk_1_sg_x17: std_logic;
  signal concat_y_net_x0: std_logic_vector(31 downto 0);
  signal convert_dout_net: std_logic_vector(18 downto 0);
  signal delay1_q_net: std_logic_vector(11 downto 0);
  signal delay1_q_net_x1: std_logic;
  signal delay2_q_net_x0: std_logic_vector(31 downto 0);
  signal delay3_q_net_x0: std_logic_vector(31 downto 0);
  signal delay4_q_net_x0: std_logic;
  signal delay_q_net: std_logic;
  signal delay_q_net_x1: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal inverter1_op_net: std_logic;
  signal inverter_op_net: std_logic;
  signal logical2_y_net: std_logic;
  signal logical4_y_net: std_logic;
  signal logical4_y_net_x1: std_logic;
  signal logical6_y_net_x0: std_logic;
  signal register3_q_net: std_logic;
  signal register4_q_net_x0: std_logic_vector(31 downto 0);
  signal register5_q_net: std_logic;
  signal shift_op_net: std_logic_vector(18 downto 0);
  signal slice1_y_net: std_logic_vector(11 downto 0);
  signal slice2_y_net_x0: std_logic_vector(9 downto 0);
  signal slice3_y_net_x0: std_logic;

begin
  ce_1_sg_x17 <= ce_1;
  clk_1_sg_x17 <= clk_1;
  logical4_y_net_x1 <= cont;
  delay_q_net_x1 <= go;
  delay4_q_net_x0 <= init;
  delay3_q_net_x0 <= vin;
  delay1_q_net_x1 <= we;
  add <= slice2_y_net_x0;
  en_cnt <= delay2_q_net_x0;
  status <= concat_y_net_x0;
  vout <= register4_q_net_x0;
  we_o <= logical6_y_net_x0;

  add_gen: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_047d617e0a3da9e0",
      op_arith => xlUnsigned,
      op_width => 32
    )
    port map (
      ce => ce_1_sg_x17,
      clk => clk_1_sg_x17,
      clr => '0',
      en(0) => logical6_y_net_x0,
      rst(0) => delay4_q_net_x0,
      op => add_gen_op_net
    );

  concat: entity work.concat_1d665a7331
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => shift_op_net,
      in1(0) => inverter_op_net,
      in2 => delay1_q_net,
      y => concat_y_net_x0
    );

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 19,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x17,
      clk => clk_1_sg_x17,
      clr => '0',
      din(0) => register5_q_net,
      en => "1",
      dout => convert_dout_net
    );

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x17,
      clk => clk_1_sg_x17,
      d(0) => delay4_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_q_net
    );

  delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 12
    )
    port map (
      ce => ce_1_sg_x17,
      clk => clk_1_sg_x17,
      d => slice1_y_net,
      en => '1',
      rst => '1',
      q => delay1_q_net
    );

  delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 32
    )
    port map (
      ce => ce_1_sg_x17,
      clk => clk_1_sg_x17,
      d => add_gen_op_net,
      en => '1',
      rst => '1',
      q => delay2_q_net_x0
    );

  edge_detect_773f207806: entity work.edge_detect_entity_773f207806
    port map (
      ce_1 => ce_1_sg_x17,
      clk_1 => clk_1_sg_x17,
      in_x0 => slice3_y_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x17,
      clk => clk_1_sg_x17,
      clr => '0',
      ip(0) => register5_q_net,
      op(0) => inverter_op_net
    );

  inverter1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x17,
      clk => clk_1_sg_x17,
      clr => '0',
      ip(0) => edge_op_y_net_x0,
      op(0) => inverter1_op_net
    );

  logical2: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical6_y_net_x0,
      d1(0) => register3_q_net,
      y(0) => logical2_y_net
    );

  logical4: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical4_y_net_x1,
      d1(0) => inverter1_op_net,
      y(0) => logical4_y_net
    );

  logical6: entity work.logical_3640e86e6c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay1_q_net_x1,
      d1(0) => delay_q_net_x1,
      d2(0) => register5_q_net,
      d3(0) => logical4_y_net,
      y(0) => logical6_y_net_x0
    );

  register3: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x17,
      clk => clk_1_sg_x17,
      d(0) => delay4_q_net_x0,
      en(0) => delay4_q_net_x0,
      rst(0) => logical6_y_net_x0,
      q(0) => register3_q_net
    );

  register4: entity work.xlregister
    generic map (
      d_width => 32,
      init_value => b"00000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x17,
      clk => clk_1_sg_x17,
      d => delay3_q_net_x0,
      en(0) => logical2_y_net,
      rst => "0",
      q => register4_q_net_x0
    );

  register5: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"1"
    )
    port map (
      ce => ce_1_sg_x17,
      clk => clk_1_sg_x17,
      d(0) => logical4_y_net_x1,
      en(0) => edge_op_y_net_x0,
      rst(0) => delay_q_net,
      q(0) => register5_q_net
    );

  shift: entity work.shift_892c2104f7
    port map (
      ce => ce_1_sg_x17,
      clk => clk_1_sg_x17,
      clr => '0',
      ip => convert_dout_net,
      op => shift_op_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 11,
      x_width => 32,
      y_width => 12
    )
    port map (
      x => add_gen_op_net,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 11,
      x_width => 32,
      y_width => 10
    )
    port map (
      x => add_gen_op_net,
      y => slice2_y_net_x0
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 12,
      new_msb => 12,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => add_gen_op_net,
      y(0) => slice3_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/adc_snap0/basic_ctrl/dram_munge"

entity dram_munge_entity_d55c467a7c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(31 downto 0); 
    init: in std_logic; 
    vin: in std_logic_vector(31 downto 0); 
    we: in std_logic; 
    dout: out std_logic_vector(31 downto 0); 
    vout: out std_logic_vector(31 downto 0); 
    we_o: out std_logic
  );
end dram_munge_entity_d55c467a7c;

architecture structural of dram_munge_entity_d55c467a7c is
  signal cast_dout_net_x0: std_logic_vector(31 downto 0);
  signal ce_1_sg_x18: std_logic;
  signal clk_1_sg_x18: std_logic;
  signal con0_op_net: std_logic_vector(1 downto 0);
  signal con1_op_net: std_logic_vector(1 downto 0);
  signal con2_op_net: std_logic_vector(1 downto 0);
  signal con3_op_net: std_logic_vector(1 downto 0);
  signal concat1_y_net: std_logic_vector(79 downto 0);
  signal concat_y_net: std_logic_vector(79 downto 0);
  signal constant_op_net: std_logic_vector(7 downto 0);
  signal data_choice_y_net_x0: std_logic_vector(31 downto 0);
  signal delay1_q_net: std_logic;
  signal delay_q_net: std_logic;
  signal dout_count_op_net: std_logic;
  signal dram_op_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal input_count_op_net: std_logic_vector(1 downto 0);
  signal logical1_y_net: std_logic;
  signal logical2_y_net: std_logic;
  signal logical_y_net: std_logic;
  signal mux1_y_net_x0: std_logic_vector(79 downto 0);
  signal mux1_y_net_x1: std_logic;
  signal register1_q_net: std_logic_vector(31 downto 0);
  signal register2_q_net: std_logic_vector(31 downto 0);
  signal register3_q_net: std_logic_vector(31 downto 0);
  signal register4_q_net: std_logic;
  signal register5_q_net: std_logic_vector(31 downto 0);
  signal register_q_net: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal relational1_op_net: std_logic;
  signal relational2_op_net: std_logic;
  signal relational3_op_net: std_logic;
  signal relational_op_net: std_logic;
  signal vout_choice_y_net_x0: std_logic_vector(31 downto 0);
  signal we_choice_y_net_x0: std_logic;

begin
  ce_1_sg_x18 <= ce_1;
  clk_1_sg_x18 <= clk_1;
  cast_dout_net_x0 <= din;
  edge_op_y_net_x0 <= init;
  reinterpret1_output_port_net_x0 <= vin;
  mux1_y_net_x1 <= we;
  dout <= data_choice_y_net_x0;
  vout <= vout_choice_y_net_x0;
  we_o <= we_choice_y_net_x0;

  con0: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => con0_op_net
    );

  con1: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => con1_op_net
    );

  con2: entity work.constant_e8ddc079e9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => con2_op_net
    );

  con3: entity work.constant_3a9a3daeb9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => con3_op_net
    );

  concat: entity work.concat_762608f33d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => constant_op_net,
      in1 => register_q_net,
      in2 => constant_op_net,
      in3 => register1_q_net,
      y => concat_y_net
    );

  concat1: entity work.concat_762608f33d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => constant_op_net,
      in1 => register2_q_net,
      in2 => constant_op_net,
      in3 => register3_q_net,
      y => concat1_y_net
    );

  constant_x0: entity work.constant_91ef1678ca
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  data_choice: entity work.mux_b4a3823c60
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => cast_dout_net_x0,
      d1 => mux1_y_net_x0,
      sel(0) => dram_op_net,
      y => data_choice_y_net_x0
    );

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x18,
      clk => clk_1_sg_x18,
      d(0) => logical_y_net,
      en => '1',
      rst => '1',
      q(0) => delay_q_net
    );

  delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x18,
      clk => clk_1_sg_x18,
      d(0) => logical1_y_net,
      en => '1',
      rst => '1',
      q(0) => delay1_q_net
    );

  dout_count: entity work.counter_41314d726b
    port map (
      ce => ce_1_sg_x18,
      clk => clk_1_sg_x18,
      clr => '0',
      en(0) => logical1_y_net,
      rst(0) => edge_op_y_net_x0,
      op(0) => dout_count_op_net
    );

  dram: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => dram_op_net
    );

  input_count: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_263175d139d7ac6d",
      op_arith => xlUnsigned,
      op_width => 2
    )
    port map (
      ce => ce_1_sg_x18,
      clk => clk_1_sg_x18,
      clr => '0',
      en(0) => mux1_y_net_x1,
      rst(0) => edge_op_y_net_x0,
      op => input_count_op_net
    );

  logical: entity work.logical_799f62af22
    port map (
      ce => ce_1_sg_x18,
      clk => clk_1_sg_x18,
      clr => '0',
      d0(0) => relational3_op_net,
      d1(0) => mux1_y_net_x1,
      y(0) => logical_y_net
    );

  logical1: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical_y_net,
      d1(0) => delay_q_net,
      y(0) => logical1_y_net
    );

  logical2: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register4_q_net,
      d1(0) => mux1_y_net_x1,
      y(0) => logical2_y_net
    );

  mux1: entity work.mux_a575c74b27
    port map (
      ce => ce_1_sg_x18,
      clk => clk_1_sg_x18,
      clr => '0',
      d0 => concat_y_net,
      d1 => concat1_y_net,
      sel(0) => dout_count_op_net,
      y => mux1_y_net_x0
    );

  register1: entity work.xlregister
    generic map (
      d_width => 32,
      init_value => b"00000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x18,
      clk => clk_1_sg_x18,
      d => cast_dout_net_x0,
      en(0) => relational1_op_net,
      rst => "0",
      q => register1_q_net
    );

  register2: entity work.xlregister
    generic map (
      d_width => 32,
      init_value => b"00000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x18,
      clk => clk_1_sg_x18,
      d => cast_dout_net_x0,
      en(0) => relational2_op_net,
      rst => "0",
      q => register2_q_net
    );

  register3: entity work.xlregister
    generic map (
      d_width => 32,
      init_value => b"00000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x18,
      clk => clk_1_sg_x18,
      d => cast_dout_net_x0,
      en(0) => relational3_op_net,
      rst => "0",
      q => register3_q_net
    );

  register4: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x18,
      clk => clk_1_sg_x18,
      d(0) => edge_op_y_net_x0,
      en(0) => edge_op_y_net_x0,
      rst(0) => mux1_y_net_x1,
      q(0) => register4_q_net
    );

  register5: entity work.xlregister
    generic map (
      d_width => 32,
      init_value => b"00000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x18,
      clk => clk_1_sg_x18,
      d => reinterpret1_output_port_net_x0,
      en(0) => logical2_y_net,
      rst => "0",
      q => register5_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 32,
      init_value => b"00000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x18,
      clk => clk_1_sg_x18,
      d => cast_dout_net_x0,
      en(0) => relational_op_net,
      rst => "0",
      q => register_q_net
    );

  relational: entity work.relational_5f1eb17108
    port map (
      a => input_count_op_net,
      b => con0_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_5f1eb17108
    port map (
      a => input_count_op_net,
      b => con1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

  relational2: entity work.relational_5f1eb17108
    port map (
      a => input_count_op_net,
      b => con2_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational2_op_net
    );

  relational3: entity work.relational_5f1eb17108
    port map (
      a => input_count_op_net,
      b => con3_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational3_op_net
    );

  vout_choice: entity work.mux_286b77e019
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => reinterpret1_output_port_net_x0,
      d1 => register5_q_net,
      sel(0) => dram_op_net,
      y => vout_choice_y_net_x0
    );

  we_choice: entity work.mux_d99e59b6d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => mux1_y_net_x1,
      d1(0) => delay1_q_net,
      sel(0) => dram_op_net,
      y(0) => we_choice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/adc_snap0/basic_ctrl/edge_detect"

entity edge_detect_entity_cb656284f4 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end edge_detect_entity_cb656284f4;

architecture structural of edge_detect_entity_cb656284f4 is
  signal ce_1_sg_x19: std_logic;
  signal clk_1_sg_x19: std_logic;
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x1: std_logic;
  signal enable_y_net_x0: std_logic;
  signal inverter_op_net: std_logic;

begin
  ce_1_sg_x19 <= ce_1;
  clk_1_sg_x19 <= clk_1;
  enable_y_net_x0 <= in_x0;
  out_x0 <= edge_op_y_net_x1;

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x19,
      clk => clk_1_sg_x19,
      d(0) => enable_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_q_net
    );

  edge_op: entity work.logical_dfe2dded7f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay_q_net,
      y(0) => edge_op_y_net_x1
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x19,
      clk => clk_1_sg_x19,
      clr => '0',
      ip(0) => enable_y_net_x0,
      op(0) => inverter_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/adc_snap0/basic_ctrl"

entity basic_ctrl_entity_6742ed5eb1 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    ctrl: in std_logic_vector(31 downto 0); 
    din: in std_logic_vector(31 downto 0); 
    trig: in std_logic; 
    vin: in std_logic_vector(31 downto 0); 
    we: in std_logic; 
    dout: out std_logic_vector(31 downto 0); 
    go: out std_logic; 
    init: out std_logic; 
    vout: out std_logic_vector(31 downto 0); 
    we_o: out std_logic
  );
end basic_ctrl_entity_6742ed5eb1;

architecture structural of basic_ctrl_entity_6742ed5eb1 is
  signal c09f12_01_adc_snap0_ctrl_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal cast_dout_net_x1: std_logic_vector(31 downto 0);
  signal ce_1_sg_x20: std_logic;
  signal clk_1_sg_x20: std_logic;
  signal constant1_op_net: std_logic;
  signal constant23_op_net_x0: std_logic;
  signal constant2_op_net: std_logic;
  signal constant_op_net: std_logic;
  signal data_choice_y_net_x1: std_logic_vector(31 downto 0);
  signal edge_op_y_net_x2: std_logic;
  signal enable_y_net_x0: std_logic;
  signal inverter_op_net: std_logic;
  signal logical_y_net: std_logic;
  signal mux1_y_net_x1: std_logic;
  signal mux2_y_net: std_logic;
  signal register1_q_net: std_logic;
  signal register6_q_net_x0: std_logic;
  signal reinterpret1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal slice2_y_net_x0: std_logic;
  signal trig_src_y_net: std_logic;
  signal valid_src_y_net: std_logic;
  signal vout_choice_y_net_x1: std_logic_vector(31 downto 0);
  signal we_choice_y_net_x1: std_logic;

begin
  ce_1_sg_x20 <= ce_1;
  clk_1_sg_x20 <= clk_1;
  c09f12_01_adc_snap0_ctrl_user_data_out_net_x0 <= ctrl;
  cast_dout_net_x1 <= din;
  slice2_y_net_x0 <= trig;
  reinterpret1_output_port_net_x1 <= vin;
  constant23_op_net_x0 <= we;
  dout <= data_choice_y_net_x1;
  go <= register6_q_net_x0;
  init <= edge_op_y_net_x2;
  vout <= vout_choice_y_net_x1;
  we_o <= we_choice_y_net_x1;

  constant1: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant1_op_net
    );

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  dram_munge_d55c467a7c: entity work.dram_munge_entity_d55c467a7c
    port map (
      ce_1 => ce_1_sg_x20,
      clk_1 => clk_1_sg_x20,
      din => cast_dout_net_x1,
      init => edge_op_y_net_x2,
      vin => reinterpret1_output_port_net_x1,
      we => mux1_y_net_x1,
      dout => data_choice_y_net_x1,
      vout => vout_choice_y_net_x1,
      we_o => we_choice_y_net_x1
    );

  edge_detect_cb656284f4: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x20,
      clk_1 => clk_1_sg_x20,
      in_x0 => enable_y_net_x0,
      out_x0 => edge_op_y_net_x2
    );

  enable: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => c09f12_01_adc_snap0_ctrl_user_data_out_net_x0,
      y(0) => enable_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x20,
      clk => clk_1_sg_x20,
      clr => '0',
      ip(0) => edge_op_y_net_x2,
      op(0) => inverter_op_net
    );

  logical: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => mux2_y_net,
      d1(0) => inverter_op_net,
      y(0) => logical_y_net
    );

  mux1: entity work.mux_d99e59b6d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => constant23_op_net_x0,
      d1(0) => constant2_op_net,
      sel(0) => valid_src_y_net,
      y(0) => mux1_y_net_x1
    );

  mux2: entity work.mux_d99e59b6d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => slice2_y_net_x0,
      d1(0) => constant1_op_net,
      sel(0) => trig_src_y_net,
      y(0) => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x20,
      clk => clk_1_sg_x20,
      d(0) => constant_op_net,
      en(0) => edge_op_y_net_x2,
      rst(0) => logical_y_net,
      q(0) => register1_q_net
    );

  register6: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x20,
      clk => clk_1_sg_x20,
      d(0) => mux2_y_net,
      en(0) => register1_q_net,
      rst(0) => edge_op_y_net_x2,
      q(0) => register6_q_net_x0
    );

  trig_src: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => c09f12_01_adc_snap0_ctrl_user_data_out_net_x0,
      y(0) => trig_src_y_net
    );

  valid_src: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => c09f12_01_adc_snap0_ctrl_user_data_out_net_x0,
      y(0) => valid_src_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/adc_snap0/bram/calc_add"

entity calc_add_entity_3e925ff36b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(9 downto 0); 
    out_x0: out std_logic_vector(9 downto 0)
  );
end calc_add_entity_3e925ff36b;

architecture structural of calc_add_entity_3e925ff36b is
  signal add_del_q_net_x0: std_logic_vector(9 downto 0);
  signal add_sub_s_net: std_logic;
  signal ce_1_sg_x21: std_logic;
  signal clk_1_sg_x21: std_logic;
  signal concat_y_net: std_logic_vector(9 downto 0);
  signal const_op_net: std_logic;
  signal convert_addr_dout_net: std_logic_vector(9 downto 0);
  signal lsw_y_net: std_logic;
  signal manipulate_op_net: std_logic;
  signal msw_y_net: std_logic_vector(8 downto 0);
  signal mux_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x21 <= ce_1;
  clk_1_sg_x21 <= clk_1;
  add_del_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x0;

  add_sub: entity work.addsub_c13097e33e
    port map (
      a(0) => const_op_net,
      b(0) => lsw_y_net,
      ce => ce_1_sg_x21,
      clk => clk_1_sg_x21,
      clr => '0',
      s(0) => add_sub_s_net
    );

  concat: entity work.concat_1d98d96b58
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => msw_y_net,
      in1(0) => add_sub_s_net,
      y => concat_y_net
    );

  const: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => const_op_net
    );

  convert_addr: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 10,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 10,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x21,
      clk => clk_1_sg_x21,
      clr => '0',
      din => add_del_q_net_x0,
      en => "1",
      dout => convert_addr_dout_net
    );

  lsw: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 10,
      y_width => 1
    )
    port map (
      x => convert_addr_dout_net,
      y(0) => lsw_y_net
    );

  manipulate: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => manipulate_op_net
    );

  msw: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 9,
      x_width => 10,
      y_width => 9
    )
    port map (
      x => convert_addr_dout_net,
      y => msw_y_net
    );

  mux: entity work.mux_4fe5face7f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => convert_addr_dout_net,
      d1 => concat_y_net,
      sel(0) => manipulate_op_net,
      y => mux_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/adc_snap0/bram"

entity bram_entity_6f024610ff is
  port (
    addr: in std_logic_vector(9 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_in: in std_logic_vector(31 downto 0); 
    we: in std_logic; 
    convert_addr_x0: out std_logic_vector(9 downto 0); 
    convert_din1_x0: out std_logic_vector(31 downto 0); 
    convert_we_x0: out std_logic
  );
end bram_entity_6f024610ff;

architecture structural of bram_entity_6f024610ff is
  signal add_del_q_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x22: std_logic;
  signal clk_1_sg_x22: std_logic;
  signal convert_addr_dout_net_x0: std_logic_vector(9 downto 0);
  signal convert_din1_dout_net_x0: std_logic_vector(31 downto 0);
  signal convert_din_dout_net: std_logic_vector(31 downto 0);
  signal convert_we_dout_net_x0: std_logic;
  signal dat_del_q_net_x0: std_logic_vector(31 downto 0);
  signal mux_y_net_x0: std_logic_vector(9 downto 0);
  signal we_del_q_net_x0: std_logic;

begin
  add_del_q_net_x1 <= addr;
  ce_1_sg_x22 <= ce_1;
  clk_1_sg_x22 <= clk_1;
  dat_del_q_net_x0 <= data_in;
  we_del_q_net_x0 <= we;
  convert_addr_x0 <= convert_addr_dout_net_x0;
  convert_din1_x0 <= convert_din1_dout_net_x0;
  convert_we_x0 <= convert_we_dout_net_x0;

  calc_add_3e925ff36b: entity work.calc_add_entity_3e925ff36b
    port map (
      ce_1 => ce_1_sg_x22,
      clk_1 => clk_1_sg_x22,
      in_x0 => add_del_q_net_x1,
      out_x0 => mux_y_net_x0
    );

  convert_addr: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 10,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 10,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x22,
      clk => clk_1_sg_x22,
      clr => '0',
      din => mux_y_net_x0,
      en => "1",
      dout => convert_addr_dout_net_x0
    );

  convert_din: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 32,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x22,
      clk => clk_1_sg_x22,
      clr => '0',
      din => dat_del_q_net_x0,
      en => "1",
      dout => convert_din_dout_net
    );

  convert_din1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 32,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x22,
      clk => clk_1_sg_x22,
      clr => '0',
      din => convert_din_dout_net,
      en => "1",
      dout => convert_din1_dout_net_x0
    );

  convert_we: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x22,
      clk => clk_1_sg_x22,
      clr => '0',
      din(0) => we_del_q_net_x0,
      en => "1",
      dout(0) => convert_we_dout_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/adc_snap0/delay"

entity delay_entity_61fe49f948 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    delay: in std_logic_vector(31 downto 0); 
    din: in std_logic_vector(31 downto 0); 
    go: in std_logic; 
    init: in std_logic; 
    stopi: in std_logic; 
    vin: in std_logic_vector(31 downto 0); 
    we: in std_logic; 
    del_go: out std_logic; 
    del_init: out std_logic; 
    dout: out std_logic_vector(31 downto 0); 
    stop: out std_logic; 
    vout: out std_logic_vector(31 downto 0); 
    we_o: out std_logic
  );
end delay_entity_61fe49f948;

architecture structural of delay_entity_61fe49f948 is
  signal c09f12_01_adc_snap0_trig_offset_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal ce_1_sg_x23: std_logic;
  signal clk_1_sg_x23: std_logic;
  signal constant_op_net: std_logic;
  signal counter_op_net: std_logic_vector(31 downto 0);
  signal data_choice_y_net_x2: std_logic_vector(31 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay16_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(31 downto 0);
  signal delay2_q_net: std_logic;
  signal delay3_q_net_x0: std_logic;
  signal delay9_q_net_x0: std_logic_vector(31 downto 0);
  signal edge_op_y_net_x3: std_logic;
  signal logical1_y_net_x0: std_logic;
  signal logical5_y_net: std_logic;
  signal register6_q_net_x1: std_logic;
  signal register_q_net_x0: std_logic;
  signal relational_op_net: std_logic;
  signal vout_choice_y_net_x2: std_logic_vector(31 downto 0);
  signal we_choice_y_net_x2: std_logic;

begin
  ce_1_sg_x23 <= ce_1;
  clk_1_sg_x23 <= clk_1;
  c09f12_01_adc_snap0_trig_offset_user_data_out_net_x0 <= delay;
  data_choice_y_net_x2 <= din;
  register6_q_net_x1 <= go;
  edge_op_y_net_x3 <= init;
  logical1_y_net_x0 <= stopi;
  vout_choice_y_net_x2 <= vin;
  we_choice_y_net_x2 <= we;
  del_go <= register_q_net_x0;
  del_init <= delay3_q_net_x0;
  dout <= delay9_q_net_x0;
  stop <= delay10_q_net_x0;
  vout <= delay1_q_net_x0;
  we_o <= delay16_q_net_x0;

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_047d617e0a3da9e0",
      op_arith => xlUnsigned,
      op_width => 32
    )
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      clr => '0',
      en(0) => logical5_y_net,
      rst(0) => edge_op_y_net_x3,
      op => counter_op_net
    );

  delay1: entity work.delay_920dce5cac
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      clr => '0',
      d => vout_choice_y_net_x2,
      q => delay1_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      clr => '0',
      d(0) => logical1_y_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay16: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      clr => '0',
      d(0) => we_choice_y_net_x2,
      q(0) => delay16_q_net_x0
    );

  delay2: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      clr => '0',
      d(0) => edge_op_y_net_x3,
      q(0) => delay2_q_net
    );

  delay3: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      clr => '0',
      d(0) => delay2_q_net,
      q(0) => delay3_q_net_x0
    );

  delay9: entity work.delay_920dce5cac
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      clr => '0',
      d => data_choice_y_net_x2,
      q => delay9_q_net_x0
    );

  logical5: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register6_q_net_x1,
      d1(0) => we_choice_y_net_x2,
      y(0) => logical5_y_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      d(0) => constant_op_net,
      en(0) => relational_op_net,
      rst(0) => delay2_q_net,
      q(0) => register_q_net_x0
    );

  relational: entity work.relational_34fc311f5b
    port map (
      a => counter_op_net,
      b => c09f12_01_adc_snap0_trig_offset_user_data_out_net_x0,
      ce => ce_1_sg_x23,
      clk => clk_1_sg_x23,
      clr => '0',
      op(0) => relational_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/adc_snap0/status"

entity status_entity_7b6169195a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    reg_out: in std_logic_vector(31 downto 0); 
    convert_x0: out std_logic_vector(31 downto 0)
  );
end status_entity_7b6169195a;

architecture structural of status_entity_7b6169195a is
  signal ce_1_sg_x24: std_logic;
  signal clk_1_sg_x24: std_logic;
  signal concat_y_net_x1: std_logic_vector(31 downto 0);
  signal convert_dout_net_x0: std_logic_vector(31 downto 0);

begin
  ce_1_sg_x24 <= ce_1;
  clk_1_sg_x24 <= clk_1;
  concat_y_net_x1 <= reg_out;
  convert_x0 <= convert_dout_net_x0;

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 32,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x24,
      clk => clk_1_sg_x24,
      clr => '0',
      din => concat_y_net_x1,
      en => "1",
      dout => convert_dout_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/adc_snap0/stop_gen"

entity stop_gen_entity_cb472c065b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    ctrl: in std_logic_vector(31 downto 0); 
    din: in std_logic_vector(31 downto 0); 
    goi: in std_logic; 
    init: in std_logic; 
    stop: in std_logic; 
    vin: in std_logic_vector(31 downto 0); 
    wei: in std_logic; 
    cont: out std_logic; 
    dout: out std_logic_vector(31 downto 0); 
    go: out std_logic; 
    inito: out std_logic; 
    vout: out std_logic_vector(31 downto 0); 
    weo: out std_logic
  );
end stop_gen_entity_cb472c065b;

architecture structural of stop_gen_entity_cb472c065b is
  signal c09f12_01_adc_snap0_ctrl_user_data_out_net_x1: std_logic_vector(31 downto 0);
  signal ce_1_sg_x25: std_logic;
  signal circ_cap_y_net: std_logic;
  signal clk_1_sg_x25: std_logic;
  signal constant_op_net: std_logic;
  signal delay10_q_net_x1: std_logic;
  signal delay16_q_net_x1: std_logic;
  signal delay1_q_net_x2: std_logic_vector(31 downto 0);
  signal delay1_q_net_x3: std_logic;
  signal delay2_q_net_x0: std_logic_vector(31 downto 0);
  signal delay3_q_net_x2: std_logic;
  signal delay3_q_net_x3: std_logic_vector(31 downto 0);
  signal delay4_q_net_x1: std_logic;
  signal delay9_q_net_x1: std_logic_vector(31 downto 0);
  signal delay_q_net_x2: std_logic;
  signal inverter4_op_net: std_logic;
  signal logical1_y_net: std_logic;
  signal logical4_y_net_x2: std_logic;
  signal register2_q_net: std_logic;
  signal register3_q_net: std_logic;
  signal register_q_net_x1: std_logic;

begin
  ce_1_sg_x25 <= ce_1;
  clk_1_sg_x25 <= clk_1;
  c09f12_01_adc_snap0_ctrl_user_data_out_net_x1 <= ctrl;
  delay9_q_net_x1 <= din;
  register_q_net_x1 <= goi;
  delay3_q_net_x2 <= init;
  delay10_q_net_x1 <= stop;
  delay1_q_net_x2 <= vin;
  delay16_q_net_x1 <= wei;
  cont <= logical4_y_net_x2;
  dout <= delay2_q_net_x0;
  go <= delay_q_net_x2;
  inito <= delay4_q_net_x1;
  vout <= delay3_q_net_x3;
  weo <= delay1_q_net_x3;

  circ_cap: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => c09f12_01_adc_snap0_ctrl_user_data_out_net_x1,
      y(0) => circ_cap_y_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x25,
      clk => clk_1_sg_x25,
      d(0) => register_q_net_x1,
      en => '1',
      rst => '1',
      q(0) => delay_q_net_x2
    );

  delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x25,
      clk => clk_1_sg_x25,
      d(0) => delay16_q_net_x1,
      en => '1',
      rst => '1',
      q(0) => delay1_q_net_x3
    );

  delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 32
    )
    port map (
      ce => ce_1_sg_x25,
      clk => clk_1_sg_x25,
      d => delay9_q_net_x1,
      en => '1',
      rst => '1',
      q => delay2_q_net_x0
    );

  delay3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 32
    )
    port map (
      ce => ce_1_sg_x25,
      clk => clk_1_sg_x25,
      d => delay1_q_net_x2,
      en => '1',
      rst => '1',
      q => delay3_q_net_x3
    );

  delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x25,
      clk => clk_1_sg_x25,
      d(0) => delay3_q_net_x2,
      en => '1',
      rst => '1',
      q(0) => delay4_q_net_x1
    );

  inverter4: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x25,
      clk => clk_1_sg_x25,
      clr => '0',
      ip(0) => register3_q_net,
      op(0) => inverter4_op_net
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register_q_net_x1,
      d1(0) => delay10_q_net_x1,
      y(0) => logical1_y_net
    );

  logical4: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter4_op_net,
      d1(0) => register2_q_net,
      y(0) => logical4_y_net_x2
    );

  register2: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x25,
      clk => clk_1_sg_x25,
      d(0) => circ_cap_y_net,
      en(0) => delay3_q_net_x2,
      rst => "0",
      q(0) => register2_q_net
    );

  register3: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x25,
      clk => clk_1_sg_x25,
      d(0) => constant_op_net,
      en(0) => logical1_y_net,
      rst(0) => delay3_q_net_x2,
      q(0) => register3_q_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/adc_snap0"

entity adc_snap0_entity_e5d722f3d9 is
  port (
    c09f12_01_adc_snap0_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_adc_snap0_trig_offset_user_data_out: in std_logic_vector(31 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(31 downto 0); 
    stop: in std_logic; 
    trig: in std_logic; 
    vin: in std_logic_vector(31 downto 0); 
    we: in std_logic; 
    bram: out std_logic_vector(9 downto 0); 
    bram_x0: out std_logic_vector(31 downto 0); 
    bram_x1: out std_logic; 
    status: out std_logic_vector(31 downto 0); 
    tr_en_cnt: out std_logic_vector(31 downto 0); 
    val: out std_logic_vector(31 downto 0)
  );
end adc_snap0_entity_e5d722f3d9;

architecture structural of adc_snap0_entity_e5d722f3d9 is
  signal add_del_q_net_x1: std_logic_vector(9 downto 0);
  signal c09f12_01_adc_snap0_ctrl_user_data_out_net_x2: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_snap0_trig_offset_user_data_out_net_x1: std_logic_vector(31 downto 0);
  signal cast_dout_net_x1: std_logic_vector(31 downto 0);
  signal ce_1_sg_x28: std_logic;
  signal clk_1_sg_x28: std_logic;
  signal concat_y_net_x1: std_logic_vector(31 downto 0);
  signal constant23_op_net_x1: std_logic;
  signal convert_addr_dout_net_x1: std_logic_vector(9 downto 0);
  signal convert_din1_dout_net_x1: std_logic_vector(31 downto 0);
  signal convert_dout_net_x3: std_logic_vector(31 downto 0);
  signal convert_dout_net_x4: std_logic_vector(31 downto 0);
  signal convert_dout_net_x5: std_logic_vector(31 downto 0);
  signal convert_we_dout_net_x1: std_logic;
  signal dat_del_q_net_x0: std_logic_vector(31 downto 0);
  signal data_choice_y_net_x2: std_logic_vector(31 downto 0);
  signal delay10_q_net_x1: std_logic;
  signal delay16_q_net_x1: std_logic;
  signal delay1_q_net_x0: std_logic_vector(31 downto 0);
  signal delay1_q_net_x2: std_logic_vector(31 downto 0);
  signal delay1_q_net_x3: std_logic;
  signal delay2_q_net_x0: std_logic_vector(31 downto 0);
  signal delay2_q_net_x1: std_logic_vector(31 downto 0);
  signal delay3_q_net_x2: std_logic;
  signal delay3_q_net_x3: std_logic_vector(31 downto 0);
  signal delay4_q_net_x1: std_logic;
  signal delay9_q_net_x1: std_logic_vector(31 downto 0);
  signal delay_q_net_x2: std_logic;
  signal edge_op_y_net_x3: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical4_y_net_x2: std_logic;
  signal logical6_y_net_x0: std_logic;
  signal register4_q_net_x1: std_logic_vector(31 downto 0);
  signal register6_q_net_x1: std_logic;
  signal register_q_net_x1: std_logic;
  signal reinterpret1_output_port_net_x2: std_logic_vector(31 downto 0);
  signal ri_output_port_net: std_logic_vector(31 downto 0);
  signal slice2_y_net_x0: std_logic_vector(9 downto 0);
  signal slice2_y_net_x2: std_logic;
  signal vout_choice_y_net_x2: std_logic_vector(31 downto 0);
  signal we_choice_y_net_x2: std_logic;
  signal we_del_q_net_x0: std_logic;

begin
  c09f12_01_adc_snap0_ctrl_user_data_out_net_x2 <= c09f12_01_adc_snap0_ctrl_user_data_out;
  c09f12_01_adc_snap0_trig_offset_user_data_out_net_x1 <= c09f12_01_adc_snap0_trig_offset_user_data_out;
  ce_1_sg_x28 <= ce_1;
  clk_1_sg_x28 <= clk_1;
  delay1_q_net_x0 <= din;
  logical1_y_net_x1 <= stop;
  slice2_y_net_x2 <= trig;
  reinterpret1_output_port_net_x2 <= vin;
  constant23_op_net_x1 <= we;
  bram <= convert_addr_dout_net_x1;
  bram_x0 <= convert_din1_dout_net_x1;
  bram_x1 <= convert_we_dout_net_x1;
  status <= convert_dout_net_x3;
  tr_en_cnt <= convert_dout_net_x4;
  val <= convert_dout_net_x5;

  add_del: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x28,
      clk => clk_1_sg_x28,
      d => slice2_y_net_x0,
      en => '1',
      rst => '1',
      q => add_del_q_net_x1
    );

  add_gen_dd9e933c0e: entity work.add_gen_entity_dd9e933c0e
    port map (
      ce_1 => ce_1_sg_x28,
      clk_1 => clk_1_sg_x28,
      cont => logical4_y_net_x2,
      go => delay_q_net_x2,
      init => delay4_q_net_x1,
      vin => delay3_q_net_x3,
      we => delay1_q_net_x3,
      add => slice2_y_net_x0,
      en_cnt => delay2_q_net_x1,
      status => concat_y_net_x1,
      vout => register4_q_net_x1,
      we_o => logical6_y_net_x0
    );

  basic_ctrl_6742ed5eb1: entity work.basic_ctrl_entity_6742ed5eb1
    port map (
      ce_1 => ce_1_sg_x28,
      clk_1 => clk_1_sg_x28,
      ctrl => c09f12_01_adc_snap0_ctrl_user_data_out_net_x2,
      din => cast_dout_net_x1,
      trig => slice2_y_net_x2,
      vin => reinterpret1_output_port_net_x2,
      we => constant23_op_net_x1,
      dout => data_choice_y_net_x2,
      go => register6_q_net_x1,
      init => edge_op_y_net_x3,
      vout => vout_choice_y_net_x2,
      we_o => we_choice_y_net_x2
    );

  bram_6f024610ff: entity work.bram_entity_6f024610ff
    port map (
      addr => add_del_q_net_x1,
      ce_1 => ce_1_sg_x28,
      clk_1 => clk_1_sg_x28,
      data_in => dat_del_q_net_x0,
      we => we_del_q_net_x0,
      convert_addr_x0 => convert_addr_dout_net_x1,
      convert_din1_x0 => convert_din1_dout_net_x1,
      convert_we_x0 => convert_we_dout_net_x1
    );

  cast: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 32,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x28,
      clk => clk_1_sg_x28,
      clr => '0',
      din => ri_output_port_net,
      en => "1",
      dout => cast_dout_net_x1
    );

  dat_del: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 32
    )
    port map (
      ce => ce_1_sg_x28,
      clk => clk_1_sg_x28,
      d => delay2_q_net_x0,
      en => '1',
      rst => '1',
      q => dat_del_q_net_x0
    );

  delay_61fe49f948: entity work.delay_entity_61fe49f948
    port map (
      ce_1 => ce_1_sg_x28,
      clk_1 => clk_1_sg_x28,
      delay => c09f12_01_adc_snap0_trig_offset_user_data_out_net_x1,
      din => data_choice_y_net_x2,
      go => register6_q_net_x1,
      init => edge_op_y_net_x3,
      stopi => logical1_y_net_x1,
      vin => vout_choice_y_net_x2,
      we => we_choice_y_net_x2,
      del_go => register_q_net_x1,
      del_init => delay3_q_net_x2,
      dout => delay9_q_net_x1,
      stop => delay10_q_net_x1,
      vout => delay1_q_net_x2,
      we_o => delay16_q_net_x1
    );

  ri: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => delay1_q_net_x0,
      output_port => ri_output_port_net
    );

  status_7b6169195a: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x28,
      clk_1 => clk_1_sg_x28,
      reg_out => concat_y_net_x1,
      convert_x0 => convert_dout_net_x3
    );

  stop_gen_cb472c065b: entity work.stop_gen_entity_cb472c065b
    port map (
      ce_1 => ce_1_sg_x28,
      clk_1 => clk_1_sg_x28,
      ctrl => c09f12_01_adc_snap0_ctrl_user_data_out_net_x2,
      din => delay9_q_net_x1,
      goi => register_q_net_x1,
      init => delay3_q_net_x2,
      stop => delay10_q_net_x1,
      vin => delay1_q_net_x2,
      wei => delay16_q_net_x1,
      cont => logical4_y_net_x2,
      dout => delay2_q_net_x0,
      go => delay_q_net_x2,
      inito => delay4_q_net_x1,
      vout => delay3_q_net_x3,
      weo => delay1_q_net_x3
    );

  tr_en_cnt_45084595e6: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x28,
      clk_1 => clk_1_sg_x28,
      reg_out => delay2_q_net_x1,
      convert_x0 => convert_dout_net_x4
    );

  val_26ca39bb83: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x28,
      clk_1 => clk_1_sg_x28,
      reg_out => register4_q_net_x1,
      convert_x0 => convert_dout_net_x5
    );

  we_del: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x28,
      clk => clk_1_sg_x28,
      d(0) => logical6_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => we_del_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/adc_snap1"

entity adc_snap1_entity_3fff712eed is
  port (
    c09f12_01_adc_snap1_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_adc_snap1_trig_offset_user_data_out: in std_logic_vector(31 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(31 downto 0); 
    stop: in std_logic; 
    trig: in std_logic; 
    vin: in std_logic_vector(31 downto 0); 
    we: in std_logic; 
    bram: out std_logic_vector(9 downto 0); 
    bram_x0: out std_logic_vector(31 downto 0); 
    bram_x1: out std_logic; 
    status: out std_logic_vector(31 downto 0); 
    tr_en_cnt: out std_logic_vector(31 downto 0); 
    val: out std_logic_vector(31 downto 0)
  );
end adc_snap1_entity_3fff712eed;

architecture structural of adc_snap1_entity_3fff712eed is
  signal add_del_q_net_x1: std_logic_vector(9 downto 0);
  signal c09f12_01_adc_snap1_ctrl_user_data_out_net_x2: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_snap1_trig_offset_user_data_out_net_x1: std_logic_vector(31 downto 0);
  signal cast_dout_net_x1: std_logic_vector(31 downto 0);
  signal ce_1_sg_x41: std_logic;
  signal clk_1_sg_x41: std_logic;
  signal concat_y_net_x1: std_logic_vector(31 downto 0);
  signal constant15_op_net_x1: std_logic;
  signal convert_addr_dout_net_x1: std_logic_vector(9 downto 0);
  signal convert_din1_dout_net_x1: std_logic_vector(31 downto 0);
  signal convert_dout_net_x3: std_logic_vector(31 downto 0);
  signal convert_dout_net_x4: std_logic_vector(31 downto 0);
  signal convert_dout_net_x5: std_logic_vector(31 downto 0);
  signal convert_we_dout_net_x1: std_logic;
  signal dat_del_q_net_x0: std_logic_vector(31 downto 0);
  signal data_choice_y_net_x2: std_logic_vector(31 downto 0);
  signal delay10_q_net_x1: std_logic;
  signal delay16_q_net_x1: std_logic;
  signal delay1_q_net_x0: std_logic_vector(31 downto 0);
  signal delay1_q_net_x2: std_logic_vector(31 downto 0);
  signal delay1_q_net_x3: std_logic;
  signal delay2_q_net_x0: std_logic_vector(31 downto 0);
  signal delay2_q_net_x1: std_logic_vector(31 downto 0);
  signal delay3_q_net_x2: std_logic;
  signal delay3_q_net_x3: std_logic_vector(31 downto 0);
  signal delay4_q_net_x1: std_logic;
  signal delay9_q_net_x1: std_logic_vector(31 downto 0);
  signal delay_q_net_x2: std_logic;
  signal edge_op_y_net_x3: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical4_y_net_x2: std_logic;
  signal logical6_y_net_x0: std_logic;
  signal register4_q_net_x1: std_logic_vector(31 downto 0);
  signal register6_q_net_x1: std_logic;
  signal register_q_net_x1: std_logic;
  signal reinterpret1_output_port_net_x5: std_logic_vector(31 downto 0);
  signal ri_output_port_net: std_logic_vector(31 downto 0);
  signal slice2_y_net_x0: std_logic_vector(9 downto 0);
  signal slice2_y_net_x4: std_logic;
  signal vout_choice_y_net_x2: std_logic_vector(31 downto 0);
  signal we_choice_y_net_x2: std_logic;
  signal we_del_q_net_x0: std_logic;

begin
  c09f12_01_adc_snap1_ctrl_user_data_out_net_x2 <= c09f12_01_adc_snap1_ctrl_user_data_out;
  c09f12_01_adc_snap1_trig_offset_user_data_out_net_x1 <= c09f12_01_adc_snap1_trig_offset_user_data_out;
  ce_1_sg_x41 <= ce_1;
  clk_1_sg_x41 <= clk_1;
  delay1_q_net_x0 <= din;
  logical1_y_net_x1 <= stop;
  slice2_y_net_x4 <= trig;
  reinterpret1_output_port_net_x5 <= vin;
  constant15_op_net_x1 <= we;
  bram <= convert_addr_dout_net_x1;
  bram_x0 <= convert_din1_dout_net_x1;
  bram_x1 <= convert_we_dout_net_x1;
  status <= convert_dout_net_x3;
  tr_en_cnt <= convert_dout_net_x4;
  val <= convert_dout_net_x5;

  add_del: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x41,
      clk => clk_1_sg_x41,
      d => slice2_y_net_x0,
      en => '1',
      rst => '1',
      q => add_del_q_net_x1
    );

  add_gen_cec6911516: entity work.add_gen_entity_dd9e933c0e
    port map (
      ce_1 => ce_1_sg_x41,
      clk_1 => clk_1_sg_x41,
      cont => logical4_y_net_x2,
      go => delay_q_net_x2,
      init => delay4_q_net_x1,
      vin => delay3_q_net_x3,
      we => delay1_q_net_x3,
      add => slice2_y_net_x0,
      en_cnt => delay2_q_net_x1,
      status => concat_y_net_x1,
      vout => register4_q_net_x1,
      we_o => logical6_y_net_x0
    );

  basic_ctrl_109868d05a: entity work.basic_ctrl_entity_6742ed5eb1
    port map (
      ce_1 => ce_1_sg_x41,
      clk_1 => clk_1_sg_x41,
      ctrl => c09f12_01_adc_snap1_ctrl_user_data_out_net_x2,
      din => cast_dout_net_x1,
      trig => slice2_y_net_x4,
      vin => reinterpret1_output_port_net_x5,
      we => constant15_op_net_x1,
      dout => data_choice_y_net_x2,
      go => register6_q_net_x1,
      init => edge_op_y_net_x3,
      vout => vout_choice_y_net_x2,
      we_o => we_choice_y_net_x2
    );

  bram_7b373dc0dd: entity work.bram_entity_6f024610ff
    port map (
      addr => add_del_q_net_x1,
      ce_1 => ce_1_sg_x41,
      clk_1 => clk_1_sg_x41,
      data_in => dat_del_q_net_x0,
      we => we_del_q_net_x0,
      convert_addr_x0 => convert_addr_dout_net_x1,
      convert_din1_x0 => convert_din1_dout_net_x1,
      convert_we_x0 => convert_we_dout_net_x1
    );

  cast: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 32,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x41,
      clk => clk_1_sg_x41,
      clr => '0',
      din => ri_output_port_net,
      en => "1",
      dout => cast_dout_net_x1
    );

  dat_del: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 32
    )
    port map (
      ce => ce_1_sg_x41,
      clk => clk_1_sg_x41,
      d => delay2_q_net_x0,
      en => '1',
      rst => '1',
      q => dat_del_q_net_x0
    );

  delay_80f9baa744: entity work.delay_entity_61fe49f948
    port map (
      ce_1 => ce_1_sg_x41,
      clk_1 => clk_1_sg_x41,
      delay => c09f12_01_adc_snap1_trig_offset_user_data_out_net_x1,
      din => data_choice_y_net_x2,
      go => register6_q_net_x1,
      init => edge_op_y_net_x3,
      stopi => logical1_y_net_x1,
      vin => vout_choice_y_net_x2,
      we => we_choice_y_net_x2,
      del_go => register_q_net_x1,
      del_init => delay3_q_net_x2,
      dout => delay9_q_net_x1,
      stop => delay10_q_net_x1,
      vout => delay1_q_net_x2,
      we_o => delay16_q_net_x1
    );

  ri: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => delay1_q_net_x0,
      output_port => ri_output_port_net
    );

  status_5eabf837e7: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x41,
      clk_1 => clk_1_sg_x41,
      reg_out => concat_y_net_x1,
      convert_x0 => convert_dout_net_x3
    );

  stop_gen_cd7e6ae51a: entity work.stop_gen_entity_cb472c065b
    port map (
      ce_1 => ce_1_sg_x41,
      clk_1 => clk_1_sg_x41,
      ctrl => c09f12_01_adc_snap1_ctrl_user_data_out_net_x2,
      din => delay9_q_net_x1,
      goi => register_q_net_x1,
      init => delay3_q_net_x2,
      stop => delay10_q_net_x1,
      vin => delay1_q_net_x2,
      wei => delay16_q_net_x1,
      cont => logical4_y_net_x2,
      dout => delay2_q_net_x0,
      go => delay_q_net_x2,
      inito => delay4_q_net_x1,
      vout => delay3_q_net_x3,
      weo => delay1_q_net_x3
    );

  tr_en_cnt_5a7cf047ee: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x41,
      clk_1 => clk_1_sg_x41,
      reg_out => delay2_q_net_x1,
      convert_x0 => convert_dout_net_x4
    );

  val_462f2ebf27: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x41,
      clk_1 => clk_1_sg_x41,
      reg_out => register4_q_net_x1,
      convert_x0 => convert_dout_net_x5
    );

  we_del: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x41,
      clk => clk_1_sg_x41,
      d(0) => logical6_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => we_del_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/bus_create11"

entity bus_create11_entity_ca7f9dbf2e is
  port (
    in1: in std_logic_vector(31 downto 0); 
    in2: in std_logic_vector(31 downto 0); 
    bus_out: out std_logic_vector(63 downto 0)
  );
end bus_create11_entity_ca7f9dbf2e;

architecture structural of bus_create11_entity_ca7f9dbf2e is
  signal c09f12_01_eq0_data_out_net_x0: std_logic_vector(31 downto 0);
  signal c09f12_01_eq1_data_out_net_x0: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x0: std_logic_vector(63 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(31 downto 0);

begin
  c09f12_01_eq0_data_out_net_x0 <= in1;
  c09f12_01_eq1_data_out_net_x0 <= in2;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_62c4475a80
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => c09f12_01_eq0_data_out_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => c09f12_01_eq1_data_out_net_x0,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/bus_create2"

entity bus_create2_entity_26f43c2bb1 is
  port (
    in1: in std_logic_vector(7 downto 0); 
    in2: in std_logic_vector(7 downto 0); 
    in3: in std_logic_vector(7 downto 0); 
    in4: in std_logic_vector(7 downto 0); 
    bus_out: out std_logic_vector(31 downto 0)
  );
end bus_create2_entity_26f43c2bb1;

architecture structural of bus_create2_entity_26f43c2bb1 is
  signal concatenate_y_net_x0: std_logic_vector(31 downto 0);
  signal reinterpret1_0_output_port_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret1_1_output_port_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret1_2_output_port_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret1_3_output_port_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(7 downto 0);

begin
  reinterpret1_0_output_port_net_x0 <= in1;
  reinterpret1_1_output_port_net_x0 <= in2;
  reinterpret1_2_output_port_net_x0 <= in3;
  reinterpret1_3_output_port_net_x0 <= in4;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_a1e126f11c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret1_0_output_port_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret1_1_output_port_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret1_2_output_port_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret1_3_output_port_net_x0,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/bus_create7"

entity bus_create7_entity_57af54f9e5 is
  port (
    in1: in std_logic; 
    in2: in std_logic; 
    in3: in std_logic; 
    in4: in std_logic; 
    bus_out: out std_logic_vector(3 downto 0)
  );
end bus_create7_entity_57af54f9e5;

architecture structural of bus_create7_entity_57af54f9e5 is
  signal c09f12_01_katadc0_user_sync0_net_x0: std_logic;
  signal c09f12_01_katadc0_user_sync1_net_x0: std_logic;
  signal c09f12_01_katadc0_user_sync2_net_x0: std_logic;
  signal c09f12_01_katadc0_user_sync3_net_x0: std_logic;
  signal concatenate_y_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net: std_logic;
  signal reinterpret2_output_port_net: std_logic;
  signal reinterpret3_output_port_net: std_logic;
  signal reinterpret4_output_port_net: std_logic;

begin
  c09f12_01_katadc0_user_sync0_net_x0 <= in1;
  c09f12_01_katadc0_user_sync1_net_x0 <= in2;
  c09f12_01_katadc0_user_sync2_net_x0 <= in3;
  c09f12_01_katadc0_user_sync3_net_x0 <= in4;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_a0c7cd7a34
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => reinterpret1_output_port_net,
      in1(0) => reinterpret2_output_port_net,
      in2(0) => reinterpret3_output_port_net,
      in3(0) => reinterpret4_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => c09f12_01_katadc0_user_sync0_net_x0,
      output_port(0) => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => c09f12_01_katadc0_user_sync1_net_x0,
      output_port(0) => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => c09f12_01_katadc0_user_sync2_net_x0,
      output_port(0) => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => c09f12_01_katadc0_user_sync3_net_x0,
      output_port(0) => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/bus_expand"

entity bus_expand_entity_42329a104d is
  port (
    bus_in: in std_logic_vector(32 downto 0); 
    lsb_out1: out std_logic_vector(31 downto 0); 
    msb_out2: out std_logic
  );
end bus_expand_entity_42329a104d;

architecture structural of bus_expand_entity_42329a104d is
  signal delay2_q_net_x0: std_logic_vector(32 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic_vector(31 downto 0);
  signal slice1_y_net: std_logic_vector(31 downto 0);
  signal slice2_y_net_x5: std_logic;

begin
  delay2_q_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x6;
  msb_out2 <= slice2_y_net_x5;

  reinterpret1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x6
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 33,
      y_width => 32
    )
    port map (
      x => delay2_q_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 32,
      new_msb => 32,
      x_width => 33,
      y_width => 1
    )
    port map (
      x => delay2_q_net_x0,
      y(0) => slice2_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/bus_expand6"

entity bus_expand6_entity_289d91e26d is
  port (
    bus_in: in std_logic_vector(64 downto 0); 
    lsb_out1: out std_logic_vector(31 downto 0); 
    msb_out3: out std_logic; 
    out2: out std_logic_vector(31 downto 0)
  );
end bus_expand6_entity_289d91e26d;

architecture structural of bus_expand6_entity_289d91e26d is
  signal delay2_q_net_x0: std_logic_vector(64 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice1_y_net: std_logic_vector(31 downto 0);
  signal slice2_y_net: std_logic_vector(31 downto 0);
  signal slice3_y_net_x0: std_logic;

begin
  delay2_q_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out3 <= slice3_y_net_x0;
  out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 65,
      y_width => 32
    )
    port map (
      x => delay2_q_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 32,
      new_msb => 63,
      x_width => 65,
      y_width => 32
    )
    port map (
      x => delay2_q_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 64,
      new_msb => 64,
      x_width => 65,
      y_width => 1
    )
    port map (
      x => delay2_q_net_x0,
      y(0) => slice3_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/calc_adc_sum_sq/edge_detect1"

entity edge_detect1_entity_75cedd2450 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end edge_detect1_entity_75cedd2450;

architecture structural of edge_detect1_entity_75cedd2450 is
  signal ce_1_sg_x44: std_logic;
  signal clk_1_sg_x44: std_logic;
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal inverter_op_net: std_logic;
  signal slice_y_net_x0: std_logic;

begin
  ce_1_sg_x44 <= ce_1;
  clk_1_sg_x44 <= clk_1;
  slice_y_net_x0 <= in_x0;
  out_x0 <= edge_op_y_net_x0;

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x44,
      clk => clk_1_sg_x44,
      d(0) => slice_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_q_net
    );

  edge_op: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay_q_net,
      y(0) => edge_op_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x44,
      clk => clk_1_sg_x44,
      clr => '0',
      ip(0) => slice_y_net_x0,
      op(0) => inverter_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/calc_adc_sum_sq"

entity calc_adc_sum_sq_entity_6e70db58e3 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(7 downto 0); 
    in2: in std_logic_vector(7 downto 0); 
    in3: in std_logic_vector(7 downto 0); 
    in4: in std_logic_vector(7 downto 0); 
    sum_sq: out std_logic_vector(31 downto 0)
  );
end calc_adc_sum_sq_entity_6e70db58e3;

architecture structural of calc_adc_sum_sq_entity_6e70db58e3 is
  signal accumulator_q_net: std_logic_vector(31 downto 0);
  signal ce_1_sg_x45: std_logic;
  signal clk_1_sg_x45: std_logic;
  signal convert1_dout_net_x1: std_logic_vector(31 downto 0);
  signal counter1_op_net: std_logic_vector(15 downto 0);
  signal counter_op_net: std_logic_vector(1 downto 0);
  signal delay1_q_net: std_logic;
  signal delay_q_net: std_logic_vector(15 downto 0);
  signal edge_op_y_net_x0: std_logic;
  signal mult_p_net: std_logic_vector(15 downto 0);
  signal mux_y_net: std_logic_vector(7 downto 0);
  signal register_q_net: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(7 downto 0);
  signal slice_y_net_x0: std_logic;

begin
  ce_1_sg_x45 <= ce_1;
  clk_1_sg_x45 <= clk_1;
  reinterpret2_output_port_net_x0 <= in1;
  reinterpret1_output_port_net_x0 <= in2;
  reinterpret3_output_port_net_x0 <= in3;
  reinterpret4_output_port_net_x0 <= in4;
  sum_sq <= convert1_dout_net_x1;

  accumulator: entity work.xlaccum_c09f12_01
    generic map (
      b_arith => xlSigned,
      b_bin_pt => 0,
      b_width => 16,
      core_name0 => "accm_11_0_8f8edad76401ddd0",
      q_arith => xlSigned,
      q_bin_pt => 0,
      q_width => 32
    )
    port map (
      b => delay_q_net,
      ce => ce_1_sg_x45,
      clk => clk_1_sg_x45,
      clr => '0',
      en => "1",
      rst(0) => delay1_q_net,
      q => accumulator_q_net
    );

  convert1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 0,
      din_width => 32,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x45,
      clk => clk_1_sg_x45,
      clr => '0',
      din => register_q_net,
      en => "1",
      dout => convert1_dout_net_x1
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_263175d139d7ac6d",
      op_arith => xlUnsigned,
      op_width => 2
    )
    port map (
      ce => ce_1_sg_x45,
      clk => clk_1_sg_x45,
      clr => '0',
      en => "1",
      rst => "0",
      op => counter_op_net
    );

  counter1: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_e22be57ef6aab3d8",
      op_arith => xlUnsigned,
      op_width => 16
    )
    port map (
      ce => ce_1_sg_x45,
      clk => clk_1_sg_x45,
      clr => '0',
      en => "1",
      rst => "0",
      op => counter1_op_net
    );

  delay: entity work.delay_4246ea65a9
    port map (
      ce => ce_1_sg_x45,
      clk => clk_1_sg_x45,
      clr => '0',
      d => mult_p_net,
      q => delay_q_net
    );

  delay1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x45,
      clk => clk_1_sg_x45,
      clr => '0',
      d(0) => edge_op_y_net_x0,
      q(0) => delay1_q_net
    );

  edge_detect1_75cedd2450: entity work.edge_detect1_entity_75cedd2450
    port map (
      ce_1 => ce_1_sg_x45,
      clk_1 => clk_1_sg_x45,
      in_x0 => slice_y_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  mult: entity work.mult_98e3c7048f
    port map (
      a => mux_y_net,
      b => mux_y_net,
      ce => ce_1_sg_x45,
      clk => clk_1_sg_x45,
      clr => '0',
      p => mult_p_net
    );

  mux: entity work.mux_81f00cece7
    port map (
      ce => ce_1_sg_x45,
      clk => clk_1_sg_x45,
      clr => '0',
      d0 => reinterpret2_output_port_net_x0,
      d1 => reinterpret3_output_port_net_x0,
      d2 => reinterpret1_output_port_net_x0,
      d3 => reinterpret4_output_port_net_x0,
      sel => counter_op_net,
      y => mux_y_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 32,
      init_value => b"00000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x45,
      clk => clk_1_sg_x45,
      d => accumulator_q_net,
      en(0) => delay1_q_net,
      rst => "0",
      q => register_q_net
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 15,
      new_msb => 15,
      x_width => 16,
      y_width => 1
    )
    port map (
      x => counter1_op_net,
      y(0) => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/cd_local_time"

entity cd_local_time_entity_9ff6e19688 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    reset: in std_logic; 
    sync: in std_logic; 
    time_x0: out std_logic_vector(63 downto 0)
  );
end cd_local_time_entity_9ff6e19688;

architecture structural of cd_local_time_entity_9ff6e19688 is
  signal ce_1_sg_x49: std_logic;
  signal clk_1_sg_x49: std_logic;
  signal clock_op_net_x0: std_logic_vector(63 downto 0);
  signal delay1_q_net_x0: std_logic;
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal logical14_y_net_x1: std_logic;
  signal register_q_net: std_logic;

begin
  ce_1_sg_x49 <= ce_1;
  clk_1_sg_x49 <= clk_1;
  logical14_y_net_x1 <= reset;
  delay1_q_net_x0 <= sync;
  time_x0 <= clock_op_net_x0;

  clock: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_68c512538c59954a",
      op_arith => xlUnsigned,
      op_width => 64
    )
    port map (
      ce => ce_1_sg_x49,
      clk => clk_1_sg_x49,
      clr => '0',
      en(0) => register_q_net,
      rst(0) => delay_q_net,
      op => clock_op_net_x0
    );

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x49,
      clk => clk_1_sg_x49,
      clr => '0',
      d(0) => edge_op_y_net_x0,
      q(0) => delay_q_net
    );

  edge_detect1_5ab3eb1478: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x49,
      clk_1 => clk_1_sg_x49,
      in_x0 => logical14_y_net_x1,
      out_x0 => edge_op_y_net_x0
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x49,
      clk => clk_1_sg_x49,
      d(0) => delay1_q_net_x0,
      en(0) => delay1_q_net_x0,
      rst(0) => logical14_y_net_x1,
      q(0) => register_q_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/1st_shift"

entity x1st_shift_entity_9909f3ebcd is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din1: in std_logic_vector(17 downto 0); 
    din2: in std_logic_vector(17 downto 0); 
    din3: in std_logic_vector(17 downto 0); 
    din4: in std_logic_vector(17 downto 0); 
    sync_in: in std_logic; 
    dout1: out std_logic_vector(17 downto 0); 
    dout2: out std_logic_vector(17 downto 0); 
    dout3: out std_logic_vector(17 downto 0); 
    dout4: out std_logic_vector(17 downto 0); 
    sync_out: out std_logic
  );
end x1st_shift_entity_9909f3ebcd;

architecture structural of x1st_shift_entity_9909f3ebcd is
  signal ce_1_sg_x51: std_logic;
  signal clk_1_sg_x51: std_logic;
  signal convert_1_1_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_2_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_3_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_4_dout_net_x0: std_logic_vector(17 downto 0);
  signal delay1_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic;
  signal shift1_op_net_x0: std_logic_vector(17 downto 0);
  signal shift2_op_net_x0: std_logic_vector(17 downto 0);
  signal shift3_op_net_x0: std_logic_vector(17 downto 0);
  signal shift4_op_net_x0: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x51 <= ce_1;
  clk_1_sg_x51 <= clk_1;
  convert_1_1_dout_net_x0 <= din1;
  convert_1_2_dout_net_x0 <= din2;
  convert_1_3_dout_net_x0 <= din3;
  convert_1_4_dout_net_x0 <= din4;
  delay1_q_net_x0 <= sync_in;
  dout1 <= shift3_op_net_x0;
  dout2 <= shift1_op_net_x0;
  dout3 <= shift2_op_net_x0;
  dout4 <= shift4_op_net_x0;
  sync_out <= delay_q_net_x0;

  delay: entity work.delay_0341f7be44
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d(0) => delay1_q_net_x0,
      q(0) => delay_q_net_x0
    );

  shift1: entity work.shift_01a2ba5449
    port map (
      ce => ce_1_sg_x51,
      clk => clk_1_sg_x51,
      clr => '0',
      ip => convert_1_2_dout_net_x0,
      op => shift1_op_net_x0
    );

  shift2: entity work.shift_01a2ba5449
    port map (
      ce => ce_1_sg_x51,
      clk => clk_1_sg_x51,
      clr => '0',
      ip => convert_1_3_dout_net_x0,
      op => shift2_op_net_x0
    );

  shift3: entity work.shift_01a2ba5449
    port map (
      ce => ce_1_sg_x51,
      clk => clk_1_sg_x51,
      clr => '0',
      ip => convert_1_1_dout_net_x0,
      op => shift3_op_net_x0
    );

  shift4: entity work.shift_01a2ba5449
    port map (
      ce => ce_1_sg_x51,
      clk => clk_1_sg_x51,
      clr => '0',
      ip => convert_1_4_dout_net_x0,
      op => shift4_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/bus_create1"

entity bus_create1_entity_3f464d45e8 is
  port (
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    bus_out: out std_logic_vector(71 downto 0)
  );
end bus_create1_entity_3f464d45e8;

architecture structural of bus_create1_entity_3f464d45e8 is
  signal bram0_data_out_net_x0: std_logic_vector(35 downto 0);
  signal bram1_data_out_net_x0: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(35 downto 0);

begin
  bram0_data_out_net_x0 <= in1;
  bram1_data_out_net_x0 <= in2;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_c3ccc04d1a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => bram0_data_out_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => bram1_data_out_net_x0,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/bus_expand1"

entity bus_expand1_entity_4a80f53028 is
  port (
    bus_in: in std_logic_vector(31 downto 0); 
    lsb_out1: out std_logic_vector(7 downto 0); 
    msb_out4: out std_logic_vector(7 downto 0); 
    out2: out std_logic_vector(7 downto 0); 
    out3: out std_logic_vector(7 downto 0)
  );
end bus_expand1_entity_4a80f53028;

architecture structural of bus_expand1_entity_4a80f53028 is
  signal concatenate_y_net_x0: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(7 downto 0);
  signal slice1_y_net: std_logic_vector(7 downto 0);
  signal slice2_y_net: std_logic_vector(7 downto 0);
  signal slice3_y_net: std_logic_vector(7 downto 0);
  signal slice4_y_net: std_logic_vector(7 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out4 <= reinterpret4_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;

  reinterpret1: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 7,
      x_width => 32,
      y_width => 8
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 15,
      x_width => 32,
      y_width => 8
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 23,
      x_width => 32,
      y_width => 8
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 24,
      new_msb => 31,
      x_width => 32,
      y_width => 8
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/crs_snap/bus_create2"

entity bus_create2_entity_4e455bb1b3 is
  port (
    in1: in std_logic; 
    in2: in std_logic_vector(71 downto 0); 
    in3: in std_logic; 
    bus_out: out std_logic_vector(73 downto 0)
  );
end bus_create2_entity_4e455bb1b3;

architecture structural of bus_create2_entity_4e455bb1b3 is
  signal concatenate_y_net_x15: std_logic_vector(73 downto 0);
  signal delay1_q_net_x0: std_logic;
  signal delay2_q_net_x0: std_logic_vector(71 downto 0);
  signal mux_y_net_x0: std_logic;
  signal reinterpret1_output_port_net: std_logic;
  signal reinterpret2_output_port_net: std_logic_vector(71 downto 0);
  signal reinterpret3_output_port_net: std_logic;

begin
  delay1_q_net_x0 <= in1;
  delay2_q_net_x0 <= in2;
  mux_y_net_x0 <= in3;
  bus_out <= concatenate_y_net_x15;

  concatenate: entity work.concat_7995541f2a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2(0) => reinterpret3_output_port_net,
      y => concatenate_y_net_x15
    );

  reinterpret1: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => delay1_q_net_x0,
      output_port(0) => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_8b4279cdc5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => delay2_q_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => mux_y_net_x0,
      output_port(0) => reinterpret3_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/crs_snap"

entity crs_snap_entity_70bbc1e976 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_pol0: in std_logic_vector(71 downto 0); 
    data_pol1: in std_logic_vector(71 downto 0); 
    pol_select: in std_logic; 
    select_chan: in std_logic; 
    selected_chan: in std_logic_vector(5 downto 0); 
    sync: in std_logic; 
    coarse_debug: out std_logic_vector(73 downto 0)
  );
end crs_snap_entity_70bbc1e976;

architecture structural of crs_snap_entity_70bbc1e976 is
  signal ce_1_sg_x53: std_logic;
  signal chan_ctr_op_net: std_logic_vector(5 downto 0);
  signal clk_1_sg_x53: std_logic;
  signal concatenate_y_net_x16: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x17: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x18: std_logic_vector(73 downto 0);
  signal constant2_op_net: std_logic;
  signal delay1_q_net_x0: std_logic;
  signal delay27_q_net: std_logic;
  signal delay2_q_net_x0: std_logic_vector(71 downto 0);
  signal mux2_y_net: std_logic_vector(71 downto 0);
  signal mux_y_net_x0: std_logic;
  signal post_sync_delay_q_net_x0: std_logic;
  signal relational_op_net: std_logic;
  signal slice17_y_net_x0: std_logic;
  signal slice18_y_net_x0: std_logic;
  signal slice19_y_net_x0: std_logic_vector(5 downto 0);

begin
  ce_1_sg_x53 <= ce_1;
  clk_1_sg_x53 <= clk_1;
  concatenate_y_net_x17 <= data_pol0;
  concatenate_y_net_x16 <= data_pol1;
  slice17_y_net_x0 <= pol_select;
  slice18_y_net_x0 <= select_chan;
  slice19_y_net_x0 <= selected_chan;
  post_sync_delay_q_net_x0 <= sync;
  coarse_debug <= concatenate_y_net_x18;

  bus_create2_4e455bb1b3: entity work.bus_create2_entity_4e455bb1b3
    port map (
      in1 => delay1_q_net_x0,
      in2 => delay2_q_net_x0,
      in3 => mux_y_net_x0,
      bus_out => concatenate_y_net_x18
    );

  chan_ctr: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_50ef766046ea9bf4",
      op_arith => xlUnsigned,
      op_width => 6
    )
    port map (
      ce => ce_1_sg_x53,
      clk => clk_1_sg_x53,
      clr => '0',
      en => "1",
      rst(0) => delay27_q_net,
      op => chan_ctr_op_net
    );

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  delay1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x53,
      clk => clk_1_sg_x53,
      clr => '0',
      d(0) => delay27_q_net,
      q(0) => delay1_q_net_x0
    );

  delay2: entity work.delay_a8953e790b
    port map (
      ce => ce_1_sg_x53,
      clk => clk_1_sg_x53,
      clr => '0',
      d => mux2_y_net,
      q => delay2_q_net_x0
    );

  delay27: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x53,
      clk => clk_1_sg_x53,
      clr => '0',
      d(0) => post_sync_delay_q_net_x0,
      q(0) => delay27_q_net
    );

  mux: entity work.mux_d99e59b6d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => constant2_op_net,
      d1(0) => relational_op_net,
      sel(0) => slice18_y_net_x0,
      y(0) => mux_y_net_x0
    );

  mux2: entity work.mux_c9cee7d6bf
    port map (
      ce => ce_1_sg_x53,
      clk => clk_1_sg_x53,
      clr => '0',
      d0 => concatenate_y_net_x17,
      d1 => concatenate_y_net_x16,
      sel(0) => slice17_y_net_x0,
      y => mux2_y_net
    );

  relational: entity work.relational_db6796afe7
    port map (
      a => chan_ctr_op_net,
      b => slice19_y_net_x0,
      ce => ce_1_sg_x53,
      clk => clk_1_sg_x53,
      clr => '0',
      op(0) => relational_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/del_4x0_pol1"

entity del_4x0_pol1_entity_49de411777 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d: in std_logic_vector(35 downto 0); 
    q: out std_logic_vector(35 downto 0)
  );
end del_4x0_pol1_entity_49de411777;

architecture structural of del_4x0_pol1_entity_49de411777 is
  signal ce_1_sg_x54: std_logic;
  signal clk_1_sg_x54: std_logic;
  signal mux_y_net_x0: std_logic_vector(35 downto 0);
  signal register0_q_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x54 <= ce_1;
  clk_1_sg_x54 <= clk_1;
  mux_y_net_x0 <= d;
  q <= register0_q_net_x0;

  register0: entity work.xlregister
    generic map (
      d_width => 36,
      init_value => b"000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x54,
      clk => clk_1_sg_x54,
      d => mux_y_net_x0,
      en => "1",
      rst => "0",
      q => register0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/bi_real_unscr_4x/delay_bram0"

entity delay_bram0_entity_132f1fc19a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    out1: out std_logic_vector(35 downto 0)
  );
end delay_bram0_entity_132f1fc19a;

architecture structural of delay_bram0_entity_132f1fc19a is
  signal ce_1_sg_x59: std_logic;
  signal clk_1_sg_x59: std_logic;
  signal concat_y_net_x0: std_logic_vector(35 downto 0);
  signal constant2_op_net: std_logic;
  signal counter_op_net: std_logic_vector(5 downto 0);
  signal single_port_ram_data_out_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x59 <= ce_1;
  clk_1_sg_x59 <= clk_1;
  concat_y_net_x0 <= in1;
  out1 <= single_port_ram_data_out_net_x0;

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  counter: entity work.xlcounter_limit_c09f12_01
    generic map (
      cnt_15_0 => 60,
      cnt_31_16 => 0,
      cnt_47_32 => 0,
      cnt_63_48 => 0,
      core_name0 => "cntr_11_0_50ef766046ea9bf4",
      count_limited => 1,
      op_arith => xlUnsigned,
      op_width => 6
    )
    port map (
      ce => ce_1_sg_x59,
      clk => clk_1_sg_x59,
      clr => '0',
      en => "1",
      rst => "0",
      op => counter_op_net
    );

  single_port_ram: entity work.xlspram_c09f12_01
    generic map (
      c_address_width => 6,
      c_width => 36,
      core_name0 => "bmg_72_47e00fa602868a13",
      latency => 2
    )
    port map (
      addr => counter_op_net,
      ce => ce_1_sg_x59,
      clk => clk_1_sg_x59,
      data_in => concat_y_net_x0,
      en => "1",
      rst => "0",
      we(0) => constant2_op_net,
      data_out => single_port_ram_data_out_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/bi_real_unscr_4x/hilbert_dsp48e0/c_to_ri0"

entity c_to_ri0_entity_ac3e6eb705 is
  port (
    c: in std_logic_vector(35 downto 0); 
    im: out std_logic_vector(17 downto 0); 
    re: out std_logic_vector(17 downto 0)
  );
end c_to_ri0_entity_ac3e6eb705;

architecture structural of c_to_ri0_entity_ac3e6eb705 is
  signal force_im_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(17 downto 0);
  signal mux0_y_net_x0: std_logic_vector(35 downto 0);
  signal slice_im_y_net: std_logic_vector(17 downto 0);
  signal slice_re_y_net: std_logic_vector(17 downto 0);

begin
  mux0_y_net_x0 <= c;
  im <= force_im_output_port_net_x0;
  re <= force_re_output_port_net_x0;

  force_im: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_im_y_net,
      output_port => force_im_output_port_net_x0
    );

  force_re: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_re_y_net,
      output_port => force_re_output_port_net_x0
    );

  slice_im: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => mux0_y_net_x0,
      y => slice_im_y_net
    );

  slice_re: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 35,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => mux0_y_net_x0,
      y => slice_re_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/bi_real_unscr_4x/hilbert_dsp48e0/cadd"

entity cadd_entity_af6191b102 is
  port (
    a_im: in std_logic_vector(17 downto 0); 
    a_re: in std_logic_vector(17 downto 0); 
    b_im: in std_logic_vector(17 downto 0); 
    b_re: in std_logic_vector(17 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    c_im: out std_logic_vector(18 downto 0); 
    c_re: out std_logic_vector(18 downto 0)
  );
end cadd_entity_af6191b102;

architecture structural of cadd_entity_af6191b102 is
  signal alumode_op_net: std_logic_vector(3 downto 0);
  signal carryin_op_net: std_logic;
  signal carryinsel_op_net: std_logic_vector(2 downto 0);
  signal cast_c_im_dout_net_x0: std_logic_vector(18 downto 0);
  signal cast_c_re_dout_net_x0: std_logic_vector(18 downto 0);
  signal ce_1_sg_x61: std_logic;
  signal clk_1_sg_x61: std_logic;
  signal concat_a_y_net: std_logic_vector(47 downto 0);
  signal concat_b_y_net: std_logic_vector(47 downto 0);
  signal dsp48e_p_net: std_logic_vector(47 downto 0);
  signal force_im_output_port_net_x2: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x2: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal opmode_op_net: std_logic_vector(6 downto 0);
  signal realign_a_im_dout_net: std_logic_vector(23 downto 0);
  signal realign_a_re_dout_net: std_logic_vector(23 downto 0);
  signal realign_b_im_dout_net: std_logic_vector(23 downto 0);
  signal realign_b_re_dout_net: std_logic_vector(23 downto 0);
  signal reinterp_a_im_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_a_re_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_b_im_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_b_re_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_c_im_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_c_re_output_port_net: std_logic_vector(23 downto 0);
  signal reinterpret_a_output_port_net: std_logic_vector(29 downto 0);
  signal reinterpret_b_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret_c_output_port_net: std_logic_vector(47 downto 0);
  signal slice_a_y_net: std_logic_vector(29 downto 0);
  signal slice_b_y_net: std_logic_vector(17 downto 0);
  signal slice_c_im_y_net: std_logic_vector(23 downto 0);
  signal slice_c_re_y_net: std_logic_vector(23 downto 0);

begin
  force_im_output_port_net_x2 <= a_im;
  force_re_output_port_net_x2 <= a_re;
  force_im_output_port_net_x3 <= b_im;
  force_re_output_port_net_x3 <= b_re;
  ce_1_sg_x61 <= ce_1;
  clk_1_sg_x61 <= clk_1;
  c_im <= cast_c_im_dout_net_x0;
  c_re <= cast_c_re_dout_net_x0;

  alumode: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => alumode_op_net
    );

  carryin: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => carryin_op_net
    );

  carryinsel: entity work.constant_822933f89b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => carryinsel_op_net
    );

  cast_c_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 22,
      din_width => 24,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 19,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x61,
      clk => clk_1_sg_x61,
      clr => '0',
      din => reinterp_c_im_output_port_net,
      en => "1",
      dout => cast_c_im_dout_net_x0
    );

  cast_c_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 22,
      din_width => 24,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 19,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x61,
      clk => clk_1_sg_x61,
      clr => '0',
      din => reinterp_c_re_output_port_net,
      en => "1",
      dout => cast_c_re_dout_net_x0
    );

  concat_a: entity work.concat_b57c4be2de
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterp_a_re_output_port_net,
      in1 => reinterp_a_im_output_port_net,
      y => concat_a_y_net
    );

  concat_b: entity work.concat_b57c4be2de
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterp_b_re_output_port_net,
      in1 => reinterp_b_im_output_port_net,
      y => concat_b_y_net
    );

  dsp48e: entity work.xldsp48e
    generic map (
      a_input => "DIRECT",
      acascreg => 1,
      alumodereg => 1,
      areg => 1,
      autoreset_pattern_detect => FALSE,
      autoreset_pattern_detect_optinv => "MATCH",
      b_input => "DIRECT",
      bcascreg => 1,
      breg => 1,
      carryinreg => 1,
      carryinselreg => 1,
      carryout_width => 4,
      creg => 1,
      mreg => 1,
      opmodereg => 1,
      preg => 1,
      sel_mask => "MASK",
      sel_pattern => "PATTERN",
      use_c_port => 1,
      use_mult => "MULT_S",
      use_op => 0,
      use_pattern_detect => "NO_PATDET",
      use_simd => "TWO24"
    )
    port map (
      a => reinterpret_a_output_port_net,
      alumode => alumode_op_net,
      b => reinterpret_b_output_port_net,
      c => reinterpret_c_output_port_net,
      carryin(0) => carryin_op_net,
      carryinsel => carryinsel_op_net,
      ce => ce_1_sg_x61,
      cea1 => "1",
      cea2 => "1",
      cealumode => "1",
      ceb1 => "1",
      ceb2 => "1",
      cec => "1",
      cecarryin => "1",
      cectrl => "1",
      cem => "1",
      cemultcarryin => "1",
      cep => "1",
      clk => clk_1_sg_x61,
      en => "1",
      opmode => opmode_op_net,
      rst => "0",
      rsta => "0",
      rstalumode => "0",
      rstb => "0",
      rstc => "0",
      rstcarryin => "0",
      rstctrl => "0",
      rstm => "0",
      rstp => "0",
      p => dsp48e_p_net
    );

  opmode: entity work.constant_270746ab47
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => opmode_op_net
    );

  realign_a_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 22,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x61,
      clk => clk_1_sg_x61,
      clr => '0',
      din => force_im_output_port_net_x2,
      en => "1",
      dout => realign_a_im_dout_net
    );

  realign_a_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 22,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x61,
      clk => clk_1_sg_x61,
      clr => '0',
      din => force_re_output_port_net_x2,
      en => "1",
      dout => realign_a_re_dout_net
    );

  realign_b_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 22,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x61,
      clk => clk_1_sg_x61,
      clr => '0',
      din => force_im_output_port_net_x3,
      en => "1",
      dout => realign_b_im_dout_net
    );

  realign_b_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 22,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x61,
      clk => clk_1_sg_x61,
      clr => '0',
      din => force_re_output_port_net_x3,
      en => "1",
      dout => realign_b_re_dout_net
    );

  reinterp_a_im: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_a_im_dout_net,
      output_port => reinterp_a_im_output_port_net
    );

  reinterp_a_re: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_a_re_dout_net,
      output_port => reinterp_a_re_output_port_net
    );

  reinterp_b_im: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_b_im_dout_net,
      output_port => reinterp_b_im_output_port_net
    );

  reinterp_b_re: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_b_re_dout_net,
      output_port => reinterp_b_re_output_port_net
    );

  reinterp_c_im: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_c_im_y_net,
      output_port => reinterp_c_im_output_port_net
    );

  reinterp_c_re: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_c_re_y_net,
      output_port => reinterp_c_re_output_port_net
    );

  reinterpret_a: entity work.reinterpret_eb03bc3377
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_a_y_net,
      output_port => reinterpret_a_output_port_net
    );

  reinterpret_b: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_b_y_net,
      output_port => reinterpret_b_output_port_net
    );

  reinterpret_c: entity work.reinterpret_7ea107432a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_a_y_net,
      output_port => reinterpret_c_output_port_net
    );

  slice_a: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 47,
      x_width => 48,
      y_width => 30
    )
    port map (
      x => concat_b_y_net,
      y => slice_a_y_net
    );

  slice_b: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 48,
      y_width => 18
    )
    port map (
      x => concat_b_y_net,
      y => slice_b_y_net
    );

  slice_c_im: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 23,
      x_width => 48,
      y_width => 24
    )
    port map (
      x => dsp48e_p_net,
      y => slice_c_im_y_net
    );

  slice_c_re: entity work.xlslice
    generic map (
      new_lsb => 24,
      new_msb => 47,
      x_width => 48,
      y_width => 24
    )
    port map (
      x => dsp48e_p_net,
      y => slice_c_re_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/bi_real_unscr_4x/hilbert_dsp48e0/csub"

entity csub_entity_c8fe90de98 is
  port (
    a_im: in std_logic_vector(17 downto 0); 
    a_re: in std_logic_vector(17 downto 0); 
    b_im: in std_logic_vector(17 downto 0); 
    b_re: in std_logic_vector(17 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    c_im: out std_logic_vector(18 downto 0); 
    c_re: out std_logic_vector(18 downto 0)
  );
end csub_entity_c8fe90de98;

architecture structural of csub_entity_c8fe90de98 is
  signal alumode_op_net: std_logic_vector(3 downto 0);
  signal carryin_op_net: std_logic;
  signal carryinsel_op_net: std_logic_vector(2 downto 0);
  signal cast_c_im_dout_net_x0: std_logic_vector(18 downto 0);
  signal cast_c_re_dout_net_x0: std_logic_vector(18 downto 0);
  signal ce_1_sg_x62: std_logic;
  signal clk_1_sg_x62: std_logic;
  signal concat_a_y_net: std_logic_vector(47 downto 0);
  signal concat_b_y_net: std_logic_vector(47 downto 0);
  signal dsp48e_p_net: std_logic_vector(47 downto 0);
  signal force_im_output_port_net_x4: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x5: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x4: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x5: std_logic_vector(17 downto 0);
  signal opmode_op_net: std_logic_vector(6 downto 0);
  signal realign_a_im_dout_net: std_logic_vector(23 downto 0);
  signal realign_a_re_dout_net: std_logic_vector(23 downto 0);
  signal realign_b_im_dout_net: std_logic_vector(23 downto 0);
  signal realign_b_re_dout_net: std_logic_vector(23 downto 0);
  signal reinterp_a_im_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_a_re_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_b_im_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_b_re_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_c_im_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_c_re_output_port_net: std_logic_vector(23 downto 0);
  signal reinterpret_a_output_port_net: std_logic_vector(29 downto 0);
  signal reinterpret_b_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret_c_output_port_net: std_logic_vector(47 downto 0);
  signal slice_a_y_net: std_logic_vector(29 downto 0);
  signal slice_b_y_net: std_logic_vector(17 downto 0);
  signal slice_c_im_y_net: std_logic_vector(23 downto 0);
  signal slice_c_re_y_net: std_logic_vector(23 downto 0);

begin
  force_re_output_port_net_x5 <= a_im;
  force_im_output_port_net_x4 <= a_re;
  force_re_output_port_net_x4 <= b_im;
  force_im_output_port_net_x5 <= b_re;
  ce_1_sg_x62 <= ce_1;
  clk_1_sg_x62 <= clk_1;
  c_im <= cast_c_im_dout_net_x0;
  c_re <= cast_c_re_dout_net_x0;

  alumode: entity work.constant_8038205d89
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => alumode_op_net
    );

  carryin: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => carryin_op_net
    );

  carryinsel: entity work.constant_822933f89b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => carryinsel_op_net
    );

  cast_c_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 22,
      din_width => 24,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 19,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x62,
      clk => clk_1_sg_x62,
      clr => '0',
      din => reinterp_c_im_output_port_net,
      en => "1",
      dout => cast_c_im_dout_net_x0
    );

  cast_c_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 22,
      din_width => 24,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 19,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x62,
      clk => clk_1_sg_x62,
      clr => '0',
      din => reinterp_c_re_output_port_net,
      en => "1",
      dout => cast_c_re_dout_net_x0
    );

  concat_a: entity work.concat_b57c4be2de
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterp_a_re_output_port_net,
      in1 => reinterp_a_im_output_port_net,
      y => concat_a_y_net
    );

  concat_b: entity work.concat_b57c4be2de
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterp_b_re_output_port_net,
      in1 => reinterp_b_im_output_port_net,
      y => concat_b_y_net
    );

  dsp48e: entity work.xldsp48e
    generic map (
      a_input => "DIRECT",
      acascreg => 1,
      alumodereg => 1,
      areg => 1,
      autoreset_pattern_detect => FALSE,
      autoreset_pattern_detect_optinv => "MATCH",
      b_input => "DIRECT",
      bcascreg => 1,
      breg => 1,
      carryinreg => 1,
      carryinselreg => 1,
      carryout_width => 4,
      creg => 1,
      mreg => 1,
      opmodereg => 1,
      preg => 1,
      sel_mask => "MASK",
      sel_pattern => "PATTERN",
      use_c_port => 1,
      use_mult => "MULT_S",
      use_op => 0,
      use_pattern_detect => "NO_PATDET",
      use_simd => "TWO24"
    )
    port map (
      a => reinterpret_a_output_port_net,
      alumode => alumode_op_net,
      b => reinterpret_b_output_port_net,
      c => reinterpret_c_output_port_net,
      carryin(0) => carryin_op_net,
      carryinsel => carryinsel_op_net,
      ce => ce_1_sg_x62,
      cea1 => "1",
      cea2 => "1",
      cealumode => "1",
      ceb1 => "1",
      ceb2 => "1",
      cec => "1",
      cecarryin => "1",
      cectrl => "1",
      cem => "1",
      cemultcarryin => "1",
      cep => "1",
      clk => clk_1_sg_x62,
      en => "1",
      opmode => opmode_op_net,
      rst => "0",
      rsta => "0",
      rstalumode => "0",
      rstb => "0",
      rstc => "0",
      rstcarryin => "0",
      rstctrl => "0",
      rstm => "0",
      rstp => "0",
      p => dsp48e_p_net
    );

  opmode: entity work.constant_270746ab47
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => opmode_op_net
    );

  realign_a_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 22,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x62,
      clk => clk_1_sg_x62,
      clr => '0',
      din => force_re_output_port_net_x5,
      en => "1",
      dout => realign_a_im_dout_net
    );

  realign_a_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 22,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x62,
      clk => clk_1_sg_x62,
      clr => '0',
      din => force_im_output_port_net_x4,
      en => "1",
      dout => realign_a_re_dout_net
    );

  realign_b_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 22,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x62,
      clk => clk_1_sg_x62,
      clr => '0',
      din => force_re_output_port_net_x4,
      en => "1",
      dout => realign_b_im_dout_net
    );

  realign_b_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 22,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x62,
      clk => clk_1_sg_x62,
      clr => '0',
      din => force_im_output_port_net_x5,
      en => "1",
      dout => realign_b_re_dout_net
    );

  reinterp_a_im: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_a_im_dout_net,
      output_port => reinterp_a_im_output_port_net
    );

  reinterp_a_re: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_a_re_dout_net,
      output_port => reinterp_a_re_output_port_net
    );

  reinterp_b_im: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_b_im_dout_net,
      output_port => reinterp_b_im_output_port_net
    );

  reinterp_b_re: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_b_re_dout_net,
      output_port => reinterp_b_re_output_port_net
    );

  reinterp_c_im: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_c_im_y_net,
      output_port => reinterp_c_im_output_port_net
    );

  reinterp_c_re: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_c_re_y_net,
      output_port => reinterp_c_re_output_port_net
    );

  reinterpret_a: entity work.reinterpret_eb03bc3377
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_a_y_net,
      output_port => reinterpret_a_output_port_net
    );

  reinterpret_b: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_b_y_net,
      output_port => reinterpret_b_output_port_net
    );

  reinterpret_c: entity work.reinterpret_7ea107432a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_a_y_net,
      output_port => reinterpret_c_output_port_net
    );

  slice_a: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 47,
      x_width => 48,
      y_width => 30
    )
    port map (
      x => concat_b_y_net,
      y => slice_a_y_net
    );

  slice_b: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 48,
      y_width => 18
    )
    port map (
      x => concat_b_y_net,
      y => slice_b_y_net
    );

  slice_c_im: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 23,
      x_width => 48,
      y_width => 24
    )
    port map (
      x => dsp48e_p_net,
      y => slice_c_im_y_net
    );

  slice_c_re: entity work.xlslice
    generic map (
      new_lsb => 24,
      new_msb => 47,
      x_width => 48,
      y_width => 24
    )
    port map (
      x => dsp48e_p_net,
      y => slice_c_re_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/bi_real_unscr_4x/hilbert_dsp48e0/ri_to_c0"

entity ri_to_c0_entity_724b130d6e is
  port (
    im: in std_logic_vector(17 downto 0); 
    re: in std_logic_vector(17 downto 0); 
    c: out std_logic_vector(35 downto 0)
  );
end ri_to_c0_entity_724b130d6e;

architecture structural of ri_to_c0_entity_724b130d6e is
  signal concat_y_net_x1: std_logic_vector(35 downto 0);
  signal convert0_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(17 downto 0);
  signal force_im_output_port_net: std_logic_vector(17 downto 0);
  signal force_re_output_port_net: std_logic_vector(17 downto 0);

begin
  convert2_dout_net_x0 <= im;
  convert0_dout_net_x0 <= re;
  c <= concat_y_net_x1;

  concat: entity work.concat_b198bd62b0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => force_re_output_port_net,
      in1 => force_im_output_port_net,
      y => concat_y_net_x1
    );

  force_im: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert2_dout_net_x0,
      output_port => force_im_output_port_net
    );

  force_re: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert0_dout_net_x0,
      output_port => force_re_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/bi_real_unscr_4x/hilbert_dsp48e0"

entity hilbert_dsp48e0_entity_06dac88fd7 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    even: out std_logic_vector(35 downto 0); 
    odd: out std_logic_vector(35 downto 0)
  );
end hilbert_dsp48e0_entity_06dac88fd7;

architecture structural of hilbert_dsp48e0_entity_06dac88fd7 is
  signal cast_c_im_dout_net_x0: std_logic_vector(18 downto 0);
  signal cast_c_im_dout_net_x1: std_logic_vector(18 downto 0);
  signal cast_c_re_dout_net_x0: std_logic_vector(18 downto 0);
  signal cast_c_re_dout_net_x1: std_logic_vector(18 downto 0);
  signal ce_1_sg_x63: std_logic;
  signal clk_1_sg_x63: std_logic;
  signal concat_y_net_x3: std_logic_vector(35 downto 0);
  signal concat_y_net_x4: std_logic_vector(35 downto 0);
  signal convert0_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert1_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert3_dout_net_x0: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x4: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x5: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x4: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x5: std_logic_vector(17 downto 0);
  signal mux0_y_net_x1: std_logic_vector(35 downto 0);
  signal mux1_y_net_x1: std_logic_vector(35 downto 0);
  signal scale0_op_net: std_logic_vector(18 downto 0);
  signal scale1_op_net: std_logic_vector(18 downto 0);
  signal scale2_op_net: std_logic_vector(18 downto 0);
  signal scale3_op_net: std_logic_vector(18 downto 0);

begin
  mux0_y_net_x1 <= a;
  mux1_y_net_x1 <= b;
  ce_1_sg_x63 <= ce_1;
  clk_1_sg_x63 <= clk_1;
  even <= concat_y_net_x3;
  odd <= concat_y_net_x4;

  c_to_ri0_ac3e6eb705: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => mux0_y_net_x1,
      im => force_im_output_port_net_x4,
      re => force_re_output_port_net_x4
    );

  c_to_ri1_942149d935: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => mux1_y_net_x1,
      im => force_im_output_port_net_x5,
      re => force_re_output_port_net_x5
    );

  cadd_af6191b102: entity work.cadd_entity_af6191b102
    port map (
      a_im => force_im_output_port_net_x4,
      a_re => force_re_output_port_net_x4,
      b_im => force_im_output_port_net_x5,
      b_re => force_re_output_port_net_x5,
      ce_1 => ce_1_sg_x63,
      clk_1 => clk_1_sg_x63,
      c_im => cast_c_im_dout_net_x0,
      c_re => cast_c_re_dout_net_x0
    );

  convert0: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 18,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x63,
      clk => clk_1_sg_x63,
      clr => '0',
      din => scale0_op_net,
      en => "1",
      dout => convert0_dout_net_x0
    );

  convert1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 18,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x63,
      clk => clk_1_sg_x63,
      clr => '0',
      din => scale1_op_net,
      en => "1",
      dout => convert1_dout_net_x0
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 18,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x63,
      clk => clk_1_sg_x63,
      clr => '0',
      din => scale2_op_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  convert3: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 18,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x63,
      clk => clk_1_sg_x63,
      clr => '0',
      din => scale3_op_net,
      en => "1",
      dout => convert3_dout_net_x0
    );

  csub_c8fe90de98: entity work.csub_entity_c8fe90de98
    port map (
      a_im => force_re_output_port_net_x5,
      a_re => force_im_output_port_net_x4,
      b_im => force_re_output_port_net_x4,
      b_re => force_im_output_port_net_x5,
      ce_1 => ce_1_sg_x63,
      clk_1 => clk_1_sg_x63,
      c_im => cast_c_im_dout_net_x1,
      c_re => cast_c_re_dout_net_x1
    );

  ri_to_c0_724b130d6e: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => convert2_dout_net_x0,
      re => convert0_dout_net_x0,
      c => concat_y_net_x3
    );

  ri_to_c1_d9fb3dc167: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => convert3_dout_net_x0,
      re => convert1_dout_net_x0,
      c => concat_y_net_x4
    );

  scale0: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x0,
      op => scale0_op_net
    );

  scale1: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x0,
      op => scale1_op_net
    );

  scale2: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x1,
      op => scale2_op_net
    );

  scale3: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x1,
      op => scale3_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/bi_real_unscr_4x/mirror_spectrum/ri_to_c0"

entity ri_to_c0_entity_e8c0051634 is
  port (
    im: in std_logic_vector(17 downto 0); 
    re: in std_logic_vector(17 downto 0); 
    c: out std_logic_vector(35 downto 0)
  );
end ri_to_c0_entity_e8c0051634;

architecture structural of ri_to_c0_entity_e8c0051634 is
  signal concat_y_net_x0: std_logic_vector(35 downto 0);
  signal force_im_output_port_net: std_logic_vector(17 downto 0);
  signal force_re_output_port_net: std_logic_vector(17 downto 0);
  signal neg_delay0_q_net_x0: std_logic_vector(17 downto 0);
  signal negate0_op_net_x0: std_logic_vector(17 downto 0);

begin
  negate0_op_net_x0 <= im;
  neg_delay0_q_net_x0 <= re;
  c <= concat_y_net_x0;

  concat: entity work.concat_b198bd62b0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => force_re_output_port_net,
      in1 => force_im_output_port_net,
      y => concat_y_net_x0
    );

  force_im: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => negate0_op_net_x0,
      output_port => force_im_output_port_net
    );

  force_re: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => neg_delay0_q_net_x0,
      output_port => force_re_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/bi_real_unscr_4x/mirror_spectrum"

entity mirror_spectrum_entity_42d1e77f31 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din0: in std_logic_vector(35 downto 0); 
    din1: in std_logic_vector(35 downto 0); 
    din2: in std_logic_vector(35 downto 0); 
    din3: in std_logic_vector(35 downto 0); 
    reo_in0: in std_logic_vector(35 downto 0); 
    reo_in1: in std_logic_vector(35 downto 0); 
    reo_in2: in std_logic_vector(35 downto 0); 
    reo_in3: in std_logic_vector(35 downto 0); 
    sync: in std_logic; 
    dout0: out std_logic_vector(35 downto 0); 
    dout1: out std_logic_vector(35 downto 0); 
    dout2: out std_logic_vector(35 downto 0); 
    dout3: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end mirror_spectrum_entity_42d1e77f31;

architecture structural of mirror_spectrum_entity_42d1e77f31 is
  signal ce_1_sg_x67: std_logic;
  signal clk_1_sg_x67: std_logic;
  signal concat_y_net_x0: std_logic_vector(35 downto 0);
  signal concat_y_net_x1: std_logic_vector(35 downto 0);
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal concat_y_net_x3: std_logic_vector(35 downto 0);
  signal constant3_op_net: std_logic_vector(6 downto 0);
  signal counter_op_net: std_logic_vector(6 downto 0);
  signal delay1_q_net: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay3_q_net: std_logic_vector(35 downto 0);
  signal delay4_q_net: std_logic_vector(35 downto 0);
  signal delay5_q_net: std_logic_vector(35 downto 0);
  signal delay6_q_net: std_logic_vector(35 downto 0);
  signal delay_ms1_q_net_x0: std_logic;
  signal delay_ms2_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_ms3_q_net_x1: std_logic_vector(35 downto 0);
  signal delay_ms4_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_ms5_q_net_x1: std_logic_vector(35 downto 0);
  signal delay_ms6_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_ms7_q_net_x1: std_logic_vector(35 downto 0);
  signal delay_ms8_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_ms9_q_net_x1: std_logic_vector(35 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x2: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x2: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal mux1_y_net_x1: std_logic_vector(35 downto 0);
  signal mux2_y_net_x1: std_logic_vector(35 downto 0);
  signal mux3_y_net_x1: std_logic_vector(35 downto 0);
  signal mux_y_net_x1: std_logic_vector(35 downto 0);
  signal neg_delay0_q_net_x0: std_logic_vector(17 downto 0);
  signal neg_delay1_q_net_x0: std_logic_vector(17 downto 0);
  signal neg_delay2_q_net_x0: std_logic_vector(17 downto 0);
  signal neg_delay3_q_net_x0: std_logic_vector(17 downto 0);
  signal negate0_op_net_x0: std_logic_vector(17 downto 0);
  signal negate1_op_net_x0: std_logic_vector(17 downto 0);
  signal negate2_op_net_x0: std_logic_vector(17 downto 0);
  signal negate3_op_net_x0: std_logic_vector(17 downto 0);
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x67 <= ce_1;
  clk_1_sg_x67 <= clk_1;
  delay_ms2_q_net_x0 <= din0;
  delay_ms4_q_net_x0 <= din1;
  delay_ms6_q_net_x0 <= din2;
  delay_ms8_q_net_x0 <= din3;
  delay_ms3_q_net_x1 <= reo_in0;
  delay_ms5_q_net_x1 <= reo_in1;
  delay_ms7_q_net_x1 <= reo_in2;
  delay_ms9_q_net_x1 <= reo_in3;
  delay_ms1_q_net_x0 <= sync;
  dout0 <= mux_y_net_x1;
  dout1 <= mux1_y_net_x1;
  dout2 <= mux2_y_net_x1;
  dout3 <= mux3_y_net_x1;
  sync_out <= delay2_q_net_x1;

  c_to_ri0_5173760d5c: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay_ms3_q_net_x1,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  c_to_ri1_743e7943f3: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay_ms5_q_net_x1,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  c_to_ri2_5911909418: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay_ms7_q_net_x1,
      im => force_im_output_port_net_x2,
      re => force_re_output_port_net_x2
    );

  c_to_ri3_641779e326: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay_ms9_q_net_x1,
      im => force_im_output_port_net_x3,
      re => force_re_output_port_net_x3
    );

  constant3: entity work.constant_7b07120b87
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant3_op_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_aeada998ec385fcd",
      op_arith => xlUnsigned,
      op_width => 7
    )
    port map (
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      clr => '0',
      en => "1",
      rst(0) => delay1_q_net,
      op => counter_op_net
    );

  delay1: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      d(0) => delay_ms1_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay1_q_net
    );

  delay2: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      d(0) => delay1_q_net,
      en => '1',
      rst => '1',
      q(0) => delay2_q_net_x1
    );

  delay3: entity work.xldelay
    generic map (
      latency => 4,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      d => delay_ms2_q_net_x0,
      en => '1',
      rst => '1',
      q => delay3_q_net
    );

  delay4: entity work.xldelay
    generic map (
      latency => 4,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      d => delay_ms4_q_net_x0,
      en => '1',
      rst => '1',
      q => delay4_q_net
    );

  delay5: entity work.xldelay
    generic map (
      latency => 4,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      d => delay_ms6_q_net_x0,
      en => '1',
      rst => '1',
      q => delay5_q_net
    );

  delay6: entity work.xldelay
    generic map (
      latency => 4,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      d => delay_ms8_q_net_x0,
      en => '1',
      rst => '1',
      q => delay6_q_net
    );

  mux: entity work.mux_fca786f2ff
    port map (
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      clr => '0',
      d0 => delay3_q_net,
      d1 => concat_y_net_x0,
      sel(0) => relational_op_net,
      y => mux_y_net_x1
    );

  mux1: entity work.mux_fca786f2ff
    port map (
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      clr => '0',
      d0 => delay4_q_net,
      d1 => concat_y_net_x1,
      sel(0) => relational_op_net,
      y => mux1_y_net_x1
    );

  mux2: entity work.mux_fca786f2ff
    port map (
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      clr => '0',
      d0 => delay5_q_net,
      d1 => concat_y_net_x2,
      sel(0) => relational_op_net,
      y => mux2_y_net_x1
    );

  mux3: entity work.mux_fca786f2ff
    port map (
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      clr => '0',
      d0 => delay6_q_net,
      d1 => concat_y_net_x3,
      sel(0) => relational_op_net,
      y => mux3_y_net_x1
    );

  neg_delay0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 18
    )
    port map (
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      d => force_re_output_port_net_x0,
      en => '1',
      rst => '1',
      q => neg_delay0_q_net_x0
    );

  neg_delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 18
    )
    port map (
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      d => force_re_output_port_net_x1,
      en => '1',
      rst => '1',
      q => neg_delay1_q_net_x0
    );

  neg_delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 18
    )
    port map (
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      d => force_re_output_port_net_x2,
      en => '1',
      rst => '1',
      q => neg_delay2_q_net_x0
    );

  neg_delay3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 18
    )
    port map (
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      d => force_re_output_port_net_x3,
      en => '1',
      rst => '1',
      q => neg_delay3_q_net_x0
    );

  negate0: entity work.negate_06f4d445bc
    port map (
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      clr => '0',
      ip => force_im_output_port_net_x0,
      op => negate0_op_net_x0
    );

  negate1: entity work.negate_06f4d445bc
    port map (
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      clr => '0',
      ip => force_im_output_port_net_x1,
      op => negate1_op_net_x0
    );

  negate2: entity work.negate_06f4d445bc
    port map (
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      clr => '0',
      ip => force_im_output_port_net_x2,
      op => negate2_op_net_x0
    );

  negate3: entity work.negate_06f4d445bc
    port map (
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      clr => '0',
      ip => force_im_output_port_net_x3,
      op => negate3_op_net_x0
    );

  relational: entity work.relational_cd73dde7d1
    port map (
      a => counter_op_net,
      b => constant3_op_net,
      ce => ce_1_sg_x67,
      clk => clk_1_sg_x67,
      clr => '0',
      op(0) => relational_op_net
    );

  ri_to_c0_e8c0051634: entity work.ri_to_c0_entity_e8c0051634
    port map (
      im => negate0_op_net_x0,
      re => neg_delay0_q_net_x0,
      c => concat_y_net_x0
    );

  ri_to_c1_a819e4f5f3: entity work.ri_to_c0_entity_e8c0051634
    port map (
      im => negate1_op_net_x0,
      re => neg_delay1_q_net_x0,
      c => concat_y_net_x1
    );

  ri_to_c2_1de08b59ab: entity work.ri_to_c0_entity_e8c0051634
    port map (
      im => negate2_op_net_x0,
      re => neg_delay2_q_net_x0,
      c => concat_y_net_x2
    );

  ri_to_c3_476d0cbf51: entity work.ri_to_c0_entity_e8c0051634
    port map (
      im => negate3_op_net_x0,
      re => neg_delay3_q_net_x0,
      c => concat_y_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/bi_real_unscr_4x/reorder_even/sync_delay_en"

entity sync_delay_en_entity_71ca922226 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    en: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_en_entity_71ca922226;

architecture structural of sync_delay_en_entity_71ca922226 is
  signal ce_1_sg_x68: std_logic;
  signal clk_1_sg_x68: std_logic;
  signal constant1_op_net: std_logic_vector(6 downto 0);
  signal constant2_op_net: std_logic_vector(6 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(6 downto 0);
  signal counter_op_net: std_logic_vector(6 downto 0);
  signal logical1_y_net: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x0: std_logic;
  signal or_y_net_x0: std_logic;
  signal pre_sync_delay_q_net_x0: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x68 <= ce_1;
  clk_1_sg_x68 <= clk_1;
  or_y_net_x0 <= en;
  pre_sync_delay_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x0;

  constant1: entity work.constant_7244cd602b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_7b07120b87
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_180df391de
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_3ad9dc21603f5ae0",
      op_arith => xlUnsigned,
      op_width => 7
    )
    port map (
      ce => ce_1_sg_x68,
      clk => clk_1_sg_x68,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical1_y_net,
      load(0) => pre_sync_delay_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => pre_sync_delay_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical_y_net,
      d1(0) => or_y_net_x0,
      y(0) => logical1_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => pre_sync_delay_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x0
    );

  relational: entity work.relational_9a3978c602
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_23065a6aa3
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/bi_real_unscr_4x/reorder_even"

entity reorder_even_entity_358a71e958 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din0: in std_logic_vector(35 downto 0); 
    en: in std_logic; 
    sync: in std_logic; 
    dout0: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end reorder_even_entity_358a71e958;

architecture structural of reorder_even_entity_358a71e958 is
  signal bram0_data_out_net_x0: std_logic_vector(35 downto 0);
  signal ce_1_sg_x69: std_logic;
  signal clk_1_sg_x69: std_logic;
  signal concat_y_net_x0: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(6 downto 0);
  signal delay_d0_q_net: std_logic_vector(5 downto 0);
  signal delay_din0_q_net: std_logic_vector(35 downto 0);
  signal delay_map1_q_net: std_logic_vector(5 downto 0);
  signal delay_sel_q_net: std_logic;
  signal delay_we_q_net: std_logic;
  signal en_even_op_net_x0: std_logic;
  signal map1_data_net: std_logic_vector(5 downto 0);
  signal mux_y_net: std_logic_vector(5 downto 0);
  signal mux_y_net_x0: std_logic;
  signal or_y_net_x0: std_logic;
  signal post_sync_delay_q_net_x0: std_logic;
  signal pre_sync_delay_q_net_x0: std_logic;
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic_vector(5 downto 0);
  signal sync_delay_q_net_x0: std_logic;

begin
  ce_1_sg_x69 <= ce_1;
  clk_1_sg_x69 <= clk_1;
  concat_y_net_x0 <= din0;
  en_even_op_net_x0 <= en;
  sync_delay_q_net_x0 <= sync;
  dout0 <= bram0_data_out_net_x0;
  sync_out <= post_sync_delay_q_net_x0;

  bram0: entity work.xlspram_c09f12_01
    generic map (
      c_address_width => 6,
      c_width => 36,
      core_name0 => "bmg_72_1853928182002eb1",
      latency => 2
    )
    port map (
      addr => mux_y_net,
      ce => ce_1_sg_x69,
      clk => clk_1_sg_x69,
      data_in => delay_din0_q_net,
      en => "1",
      rst => "0",
      we(0) => delay_we_q_net,
      data_out => bram0_data_out_net_x0
    );

  counter: entity work.xlcounter_limit_c09f12_01
    generic map (
      cnt_15_0 => 127,
      cnt_31_16 => 0,
      cnt_47_32 => 0,
      cnt_63_48 => 0,
      core_name0 => "cntr_11_0_aeada998ec385fcd",
      count_limited => 0,
      op_arith => xlUnsigned,
      op_width => 7
    )
    port map (
      ce => ce_1_sg_x69,
      clk => clk_1_sg_x69,
      clr => '0',
      en(0) => en_even_op_net_x0,
      rst(0) => sync_delay_q_net_x0,
      op => counter_op_net
    );

  delay_d0: entity work.delay_0abb1eedfd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => slice2_y_net,
      q => delay_d0_q_net
    );

  delay_din0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x69,
      clk => clk_1_sg_x69,
      d => concat_y_net_x0,
      en => '1',
      rst => '1',
      q => delay_din0_q_net
    );

  delay_map1: entity work.delay_0abb1eedfd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => map1_data_net,
      q => delay_map1_q_net
    );

  delay_sel: entity work.delay_21355083c1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d(0) => slice1_y_net,
      q(0) => delay_sel_q_net
    );

  delay_we: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x69,
      clk => clk_1_sg_x69,
      d(0) => en_even_op_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_we_q_net
    );

  map1: entity work.xlsprom_dist_c09f12_01
    generic map (
      addr_width => 6,
      c_address_width => 6,
      c_width => 6,
      core_name0 => "dmg_72_9ddb0dccfe86828e",
      latency => 0
    )
    port map (
      addr => slice2_y_net,
      ce => ce_1_sg_x69,
      clk => clk_1_sg_x69,
      en => "1",
      data => map1_data_net
    );

  mux: entity work.mux_6f25c73c33
    port map (
      ce => ce_1_sg_x69,
      clk => clk_1_sg_x69,
      clr => '0',
      d0 => delay_d0_q_net,
      d1 => delay_map1_q_net,
      sel(0) => delay_sel_q_net,
      y => mux_y_net
    );

  or_x0: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => pre_sync_delay_q_net_x0,
      d1(0) => delay_we_q_net,
      y(0) => or_y_net_x0
    );

  post_sync_delay: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x69,
      clk => clk_1_sg_x69,
      d(0) => mux_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => post_sync_delay_q_net_x0
    );

  pre_sync_delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x69,
      clk => clk_1_sg_x69,
      d(0) => sync_delay_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => pre_sync_delay_q_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 6,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 5,
      x_width => 7,
      y_width => 6
    )
    port map (
      x => counter_op_net,
      y => slice2_y_net
    );

  sync_delay_en_71ca922226: entity work.sync_delay_en_entity_71ca922226
    port map (
      ce_1 => ce_1_sg_x69,
      clk_1 => clk_1_sg_x69,
      en => or_y_net_x0,
      in_x0 => pre_sync_delay_q_net_x0,
      out_x0 => mux_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/bi_real_unscr_4x/reorder_odd"

entity reorder_odd_entity_b977752d33 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din0: in std_logic_vector(35 downto 0); 
    en: in std_logic; 
    sync: in std_logic; 
    dout0: out std_logic_vector(35 downto 0)
  );
end reorder_odd_entity_b977752d33;

architecture structural of reorder_odd_entity_b977752d33 is
  signal bram0_data_out_net_x0: std_logic_vector(35 downto 0);
  signal ce_1_sg_x70: std_logic;
  signal clk_1_sg_x70: std_logic;
  signal concat_y_net_x0: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(6 downto 0);
  signal delay_d0_q_net: std_logic_vector(5 downto 0);
  signal delay_din0_q_net: std_logic_vector(35 downto 0);
  signal delay_map1_q_net: std_logic_vector(5 downto 0);
  signal delay_sel_q_net: std_logic;
  signal delay_we_q_net: std_logic;
  signal en_odd_op_net_x0: std_logic;
  signal map1_data_net: std_logic_vector(5 downto 0);
  signal mux_y_net: std_logic_vector(5 downto 0);
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic_vector(5 downto 0);
  signal sync_delay_q_net_x1: std_logic;

begin
  ce_1_sg_x70 <= ce_1;
  clk_1_sg_x70 <= clk_1;
  concat_y_net_x0 <= din0;
  en_odd_op_net_x0 <= en;
  sync_delay_q_net_x1 <= sync;
  dout0 <= bram0_data_out_net_x0;

  bram0: entity work.xlspram_c09f12_01
    generic map (
      c_address_width => 6,
      c_width => 36,
      core_name0 => "bmg_72_1853928182002eb1",
      latency => 2
    )
    port map (
      addr => mux_y_net,
      ce => ce_1_sg_x70,
      clk => clk_1_sg_x70,
      data_in => delay_din0_q_net,
      en => "1",
      rst => "0",
      we(0) => delay_we_q_net,
      data_out => bram0_data_out_net_x0
    );

  counter: entity work.xlcounter_limit_c09f12_01
    generic map (
      cnt_15_0 => 127,
      cnt_31_16 => 0,
      cnt_47_32 => 0,
      cnt_63_48 => 0,
      core_name0 => "cntr_11_0_aeada998ec385fcd",
      count_limited => 0,
      op_arith => xlUnsigned,
      op_width => 7
    )
    port map (
      ce => ce_1_sg_x70,
      clk => clk_1_sg_x70,
      clr => '0',
      en(0) => en_odd_op_net_x0,
      rst(0) => sync_delay_q_net_x1,
      op => counter_op_net
    );

  delay_d0: entity work.delay_0abb1eedfd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => slice2_y_net,
      q => delay_d0_q_net
    );

  delay_din0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x70,
      clk => clk_1_sg_x70,
      d => concat_y_net_x0,
      en => '1',
      rst => '1',
      q => delay_din0_q_net
    );

  delay_map1: entity work.delay_0abb1eedfd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => map1_data_net,
      q => delay_map1_q_net
    );

  delay_sel: entity work.delay_21355083c1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d(0) => slice1_y_net,
      q(0) => delay_sel_q_net
    );

  delay_we: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x70,
      clk => clk_1_sg_x70,
      d(0) => en_odd_op_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_we_q_net
    );

  map1: entity work.xlsprom_dist_c09f12_01
    generic map (
      addr_width => 6,
      c_address_width => 6,
      c_width => 6,
      core_name0 => "dmg_72_60b1d930b1392bee",
      latency => 0
    )
    port map (
      addr => slice2_y_net,
      ce => ce_1_sg_x70,
      clk => clk_1_sg_x70,
      en => "1",
      data => map1_data_net
    );

  mux: entity work.mux_6f25c73c33
    port map (
      ce => ce_1_sg_x70,
      clk => clk_1_sg_x70,
      clr => '0',
      d0 => delay_d0_q_net,
      d1 => delay_map1_q_net,
      sel(0) => delay_sel_q_net,
      y => mux_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 6,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 5,
      x_width => 7,
      y_width => 6
    )
    port map (
      x => counter_op_net,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/bi_real_unscr_4x/reorder_out"

entity reorder_out_entity_bd82154bca is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din0: in std_logic_vector(35 downto 0); 
    din1: in std_logic_vector(35 downto 0); 
    din2: in std_logic_vector(35 downto 0); 
    din3: in std_logic_vector(35 downto 0); 
    en: in std_logic; 
    sync: in std_logic; 
    dout0: out std_logic_vector(35 downto 0); 
    dout1: out std_logic_vector(35 downto 0); 
    dout2: out std_logic_vector(35 downto 0); 
    dout3: out std_logic_vector(35 downto 0)
  );
end reorder_out_entity_bd82154bca;

architecture structural of reorder_out_entity_bd82154bca is
  signal bram0_data_out_net_x0: std_logic_vector(35 downto 0);
  signal bram1_data_out_net_x0: std_logic_vector(35 downto 0);
  signal bram2_data_out_net_x0: std_logic_vector(35 downto 0);
  signal bram3_data_out_net_x0: std_logic_vector(35 downto 0);
  signal ce_1_sg_x71: std_logic;
  signal clk_1_sg_x71: std_logic;
  signal concat_y_net_x4: std_logic_vector(35 downto 0);
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(6 downto 0);
  signal delay_d0_q_net: std_logic_vector(5 downto 0);
  signal delay_din0_q_net: std_logic_vector(35 downto 0);
  signal delay_din1_q_net: std_logic_vector(35 downto 0);
  signal delay_din2_q_net: std_logic_vector(35 downto 0);
  signal delay_din3_q_net: std_logic_vector(35 downto 0);
  signal delay_map1_q_net: std_logic_vector(5 downto 0);
  signal delay_sel_q_net: std_logic;
  signal delay_we_q_net: std_logic;
  signal en_out_op_net_x0: std_logic;
  signal map1_data_net: std_logic_vector(5 downto 0);
  signal mux_y_net: std_logic_vector(5 downto 0);
  signal mux_y_net_x1: std_logic;
  signal single_port_ram_data_out_net_x2: std_logic_vector(35 downto 0);
  signal single_port_ram_data_out_net_x3: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic_vector(5 downto 0);

begin
  ce_1_sg_x71 <= ce_1;
  clk_1_sg_x71 <= clk_1;
  single_port_ram_data_out_net_x2 <= din0;
  single_port_ram_data_out_net_x3 <= din1;
  concat_y_net_x4 <= din2;
  concat_y_net_x5 <= din3;
  en_out_op_net_x0 <= en;
  mux_y_net_x1 <= sync;
  dout0 <= bram0_data_out_net_x0;
  dout1 <= bram1_data_out_net_x0;
  dout2 <= bram2_data_out_net_x0;
  dout3 <= bram3_data_out_net_x0;

  bram0: entity work.xlspram_c09f12_01
    generic map (
      c_address_width => 6,
      c_width => 36,
      core_name0 => "bmg_72_1853928182002eb1",
      latency => 2
    )
    port map (
      addr => mux_y_net,
      ce => ce_1_sg_x71,
      clk => clk_1_sg_x71,
      data_in => delay_din0_q_net,
      en => "1",
      rst => "0",
      we(0) => delay_we_q_net,
      data_out => bram0_data_out_net_x0
    );

  bram1: entity work.xlspram_c09f12_01
    generic map (
      c_address_width => 6,
      c_width => 36,
      core_name0 => "bmg_72_1853928182002eb1",
      latency => 2
    )
    port map (
      addr => mux_y_net,
      ce => ce_1_sg_x71,
      clk => clk_1_sg_x71,
      data_in => delay_din1_q_net,
      en => "1",
      rst => "0",
      we(0) => delay_we_q_net,
      data_out => bram1_data_out_net_x0
    );

  bram2: entity work.xlspram_c09f12_01
    generic map (
      c_address_width => 6,
      c_width => 36,
      core_name0 => "bmg_72_1853928182002eb1",
      latency => 2
    )
    port map (
      addr => mux_y_net,
      ce => ce_1_sg_x71,
      clk => clk_1_sg_x71,
      data_in => delay_din2_q_net,
      en => "1",
      rst => "0",
      we(0) => delay_we_q_net,
      data_out => bram2_data_out_net_x0
    );

  bram3: entity work.xlspram_c09f12_01
    generic map (
      c_address_width => 6,
      c_width => 36,
      core_name0 => "bmg_72_1853928182002eb1",
      latency => 2
    )
    port map (
      addr => mux_y_net,
      ce => ce_1_sg_x71,
      clk => clk_1_sg_x71,
      data_in => delay_din3_q_net,
      en => "1",
      rst => "0",
      we(0) => delay_we_q_net,
      data_out => bram3_data_out_net_x0
    );

  counter: entity work.xlcounter_limit_c09f12_01
    generic map (
      cnt_15_0 => 127,
      cnt_31_16 => 0,
      cnt_47_32 => 0,
      cnt_63_48 => 0,
      core_name0 => "cntr_11_0_aeada998ec385fcd",
      count_limited => 0,
      op_arith => xlUnsigned,
      op_width => 7
    )
    port map (
      ce => ce_1_sg_x71,
      clk => clk_1_sg_x71,
      clr => '0',
      en(0) => en_out_op_net_x0,
      rst(0) => mux_y_net_x1,
      op => counter_op_net
    );

  delay_d0: entity work.delay_0abb1eedfd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => slice2_y_net,
      q => delay_d0_q_net
    );

  delay_din0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x71,
      clk => clk_1_sg_x71,
      d => single_port_ram_data_out_net_x2,
      en => '1',
      rst => '1',
      q => delay_din0_q_net
    );

  delay_din1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x71,
      clk => clk_1_sg_x71,
      d => single_port_ram_data_out_net_x3,
      en => '1',
      rst => '1',
      q => delay_din1_q_net
    );

  delay_din2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x71,
      clk => clk_1_sg_x71,
      d => concat_y_net_x4,
      en => '1',
      rst => '1',
      q => delay_din2_q_net
    );

  delay_din3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x71,
      clk => clk_1_sg_x71,
      d => concat_y_net_x5,
      en => '1',
      rst => '1',
      q => delay_din3_q_net
    );

  delay_map1: entity work.delay_0abb1eedfd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => map1_data_net,
      q => delay_map1_q_net
    );

  delay_sel: entity work.delay_21355083c1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d(0) => slice1_y_net,
      q(0) => delay_sel_q_net
    );

  delay_we: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x71,
      clk => clk_1_sg_x71,
      d(0) => en_out_op_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_we_q_net
    );

  map1: entity work.xlsprom_dist_c09f12_01
    generic map (
      addr_width => 6,
      c_address_width => 6,
      c_width => 6,
      core_name0 => "dmg_72_8cacf5ca230175f7",
      latency => 0
    )
    port map (
      addr => slice2_y_net,
      ce => ce_1_sg_x71,
      clk => clk_1_sg_x71,
      en => "1",
      data => map1_data_net
    );

  mux: entity work.mux_6f25c73c33
    port map (
      ce => ce_1_sg_x71,
      clk => clk_1_sg_x71,
      clr => '0',
      d0 => delay_d0_q_net,
      d1 => delay_map1_q_net,
      sel(0) => delay_sel_q_net,
      y => mux_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 6,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 5,
      x_width => 7,
      y_width => 6
    )
    port map (
      x => counter_op_net,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/bi_real_unscr_4x/sync_delay_ctr"

entity sync_delay_ctr_entity_c266c51a66 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_ctr_entity_c266c51a66;

architecture structural of sync_delay_ctr_entity_c266c51a66 is
  signal ce_1_sg_x72: std_logic;
  signal clk_1_sg_x72: std_logic;
  signal constant1_op_net: std_logic_vector(6 downto 0);
  signal constant2_op_net: std_logic_vector(6 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(6 downto 0);
  signal counter_op_net: std_logic_vector(6 downto 0);
  signal logical_y_net: std_logic;
  signal mux_y_net_x2: std_logic;
  signal post_sync_delay_q_net_x1: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x72 <= ce_1;
  clk_1_sg_x72 <= clk_1;
  post_sync_delay_q_net_x1 <= in_x0;
  out_x0 <= mux_y_net_x2;

  constant1: entity work.constant_7244cd602b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_09b32c3b22
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_180df391de
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_3ad9dc21603f5ae0",
      op_arith => xlUnsigned,
      op_width => 7
    )
    port map (
      ce => ce_1_sg_x72,
      clk => clk_1_sg_x72,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => post_sync_delay_q_net_x1,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => post_sync_delay_q_net_x1,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => post_sync_delay_q_net_x1,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x2
    );

  relational: entity work.relational_9a3978c602
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_23065a6aa3
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/bi_real_unscr_4x"

entity bi_real_unscr_4x_entity_3b8b394f08 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    even: in std_logic_vector(35 downto 0); 
    odd: in std_logic_vector(35 downto 0); 
    sync: in std_logic; 
    pol1_out: out std_logic_vector(35 downto 0); 
    pol2_out: out std_logic_vector(35 downto 0); 
    pol3_out: out std_logic_vector(35 downto 0); 
    pol4_out: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end bi_real_unscr_4x_entity_3b8b394f08;

architecture structural of bi_real_unscr_4x_entity_3b8b394f08 is
  signal bram0_data_out_net_x0: std_logic_vector(35 downto 0);
  signal bram0_data_out_net_x1: std_logic_vector(35 downto 0);
  signal bram0_data_out_net_x2: std_logic_vector(35 downto 0);
  signal bram1_data_out_net_x0: std_logic_vector(35 downto 0);
  signal bram2_data_out_net_x0: std_logic_vector(35 downto 0);
  signal bram3_data_out_net_x0: std_logic_vector(35 downto 0);
  signal ce_1_sg_x73: std_logic;
  signal clk_1_sg_x73: std_logic;
  signal concat_y_net_x3: std_logic_vector(35 downto 0);
  signal concat_y_net_x4: std_logic_vector(35 downto 0);
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concat_y_net_x6: std_logic_vector(35 downto 0);
  signal concat_y_net_x8: std_logic_vector(35 downto 0);
  signal concat_y_net_x9: std_logic_vector(35 downto 0);
  signal constant0_op_net: std_logic_vector(6 downto 0);
  signal constant1_op_net: std_logic_vector(6 downto 0);
  signal counter0_op_net: std_logic_vector(6 downto 0);
  signal delay2_q_net_x2: std_logic;
  signal delay_ms1_q_net_x0: std_logic;
  signal delay_ms2_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_ms3_q_net_x1: std_logic_vector(35 downto 0);
  signal delay_ms4_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_ms5_q_net_x1: std_logic_vector(35 downto 0);
  signal delay_ms6_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_ms7_q_net_x1: std_logic_vector(35 downto 0);
  signal delay_ms8_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_ms9_q_net_x1: std_logic_vector(35 downto 0);
  signal delay_q_net: std_logic_vector(35 downto 0);
  signal en_even_op_net_x0: std_logic;
  signal en_odd_op_net_x0: std_logic;
  signal en_out_op_net_x0: std_logic;
  signal mux0_y_net_x1: std_logic_vector(35 downto 0);
  signal mux1_y_net_x1: std_logic_vector(35 downto 0);
  signal mux1_y_net_x3: std_logic_vector(35 downto 0);
  signal mux2_y_net_x1: std_logic_vector(35 downto 0);
  signal mux2_y_net_x3: std_logic_vector(35 downto 0);
  signal mux3_y_net_x1: std_logic_vector(35 downto 0);
  signal mux3_y_net_x3: std_logic_vector(35 downto 0);
  signal mux_y_net_x2: std_logic;
  signal mux_y_net_x3: std_logic_vector(35 downto 0);
  signal post_sync_delay_q_net_x1: std_logic;
  signal relational0_op_net: std_logic;
  signal relational1_op_net: std_logic;
  signal single_port_ram_data_out_net_x2: std_logic_vector(35 downto 0);
  signal single_port_ram_data_out_net_x3: std_logic_vector(35 downto 0);
  signal sync_delay_q_net_x2: std_logic;

begin
  ce_1_sg_x73 <= ce_1;
  clk_1_sg_x73 <= clk_1;
  concat_y_net_x8 <= even;
  concat_y_net_x9 <= odd;
  sync_delay_q_net_x2 <= sync;
  pol1_out <= mux_y_net_x3;
  pol2_out <= mux1_y_net_x3;
  pol3_out <= mux2_y_net_x3;
  pol4_out <= mux3_y_net_x3;
  sync_out <= delay2_q_net_x2;

  constant0: entity work.constant_7b07120b87
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant0_op_net
    );

  constant1: entity work.constant_7244cd602b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  counter0: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_aeada998ec385fcd",
      op_arith => xlUnsigned,
      op_width => 7
    )
    port map (
      ce => ce_1_sg_x73,
      clk => clk_1_sg_x73,
      clr => '0',
      en => "1",
      rst(0) => post_sync_delay_q_net_x1,
      op => counter0_op_net
    );

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x73,
      clk => clk_1_sg_x73,
      d => bram0_data_out_net_x1,
      en => '1',
      rst => '1',
      q => delay_q_net
    );

  delay_bram0_132f1fc19a: entity work.delay_bram0_entity_132f1fc19a
    port map (
      ce_1 => ce_1_sg_x73,
      clk_1 => clk_1_sg_x73,
      in1 => concat_y_net_x3,
      out1 => single_port_ram_data_out_net_x2
    );

  delay_bram1_d6ef33aa84: entity work.delay_bram0_entity_132f1fc19a
    port map (
      ce_1 => ce_1_sg_x73,
      clk_1 => clk_1_sg_x73,
      in1 => concat_y_net_x4,
      out1 => single_port_ram_data_out_net_x3
    );

  delay_ms1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x73,
      clk => clk_1_sg_x73,
      d(0) => mux_y_net_x2,
      en => '1',
      rst => '1',
      q(0) => delay_ms1_q_net_x0
    );

  delay_ms2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x73,
      clk => clk_1_sg_x73,
      d => single_port_ram_data_out_net_x2,
      en => '1',
      rst => '1',
      q => delay_ms2_q_net_x0
    );

  delay_ms3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x73,
      clk => clk_1_sg_x73,
      d => bram0_data_out_net_x2,
      en => '1',
      rst => '1',
      q => delay_ms3_q_net_x1
    );

  delay_ms4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x73,
      clk => clk_1_sg_x73,
      d => single_port_ram_data_out_net_x3,
      en => '1',
      rst => '1',
      q => delay_ms4_q_net_x0
    );

  delay_ms5: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x73,
      clk => clk_1_sg_x73,
      d => bram1_data_out_net_x0,
      en => '1',
      rst => '1',
      q => delay_ms5_q_net_x1
    );

  delay_ms6: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x73,
      clk => clk_1_sg_x73,
      d => concat_y_net_x5,
      en => '1',
      rst => '1',
      q => delay_ms6_q_net_x0
    );

  delay_ms7: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x73,
      clk => clk_1_sg_x73,
      d => bram2_data_out_net_x0,
      en => '1',
      rst => '1',
      q => delay_ms7_q_net_x1
    );

  delay_ms8: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x73,
      clk => clk_1_sg_x73,
      d => concat_y_net_x6,
      en => '1',
      rst => '1',
      q => delay_ms8_q_net_x0
    );

  delay_ms9: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x73,
      clk => clk_1_sg_x73,
      d => bram3_data_out_net_x0,
      en => '1',
      rst => '1',
      q => delay_ms9_q_net_x1
    );

  en_even: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => en_even_op_net_x0
    );

  en_odd: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => en_odd_op_net_x0
    );

  en_out: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => en_out_op_net_x0
    );

  hilbert_dsp48e0_06dac88fd7: entity work.hilbert_dsp48e0_entity_06dac88fd7
    port map (
      a => mux0_y_net_x1,
      b => mux1_y_net_x1,
      ce_1 => ce_1_sg_x73,
      clk_1 => clk_1_sg_x73,
      even => concat_y_net_x3,
      odd => concat_y_net_x4
    );

  hilbert_dsp48e1_806152ec77: entity work.hilbert_dsp48e0_entity_06dac88fd7
    port map (
      a => mux2_y_net_x1,
      b => mux3_y_net_x1,
      ce_1 => ce_1_sg_x73,
      clk_1 => clk_1_sg_x73,
      even => concat_y_net_x5,
      odd => concat_y_net_x6
    );

  mirror_spectrum_42d1e77f31: entity work.mirror_spectrum_entity_42d1e77f31
    port map (
      ce_1 => ce_1_sg_x73,
      clk_1 => clk_1_sg_x73,
      din0 => delay_ms2_q_net_x0,
      din1 => delay_ms4_q_net_x0,
      din2 => delay_ms6_q_net_x0,
      din3 => delay_ms8_q_net_x0,
      reo_in0 => delay_ms3_q_net_x1,
      reo_in1 => delay_ms5_q_net_x1,
      reo_in2 => delay_ms7_q_net_x1,
      reo_in3 => delay_ms9_q_net_x1,
      sync => delay_ms1_q_net_x0,
      dout0 => mux_y_net_x3,
      dout1 => mux1_y_net_x3,
      dout2 => mux2_y_net_x3,
      dout3 => mux3_y_net_x3,
      sync_out => delay2_q_net_x2
    );

  mux0: entity work.mux_fca786f2ff
    port map (
      ce => ce_1_sg_x73,
      clk => clk_1_sg_x73,
      clr => '0',
      d0 => bram0_data_out_net_x0,
      d1 => delay_q_net,
      sel(0) => relational0_op_net,
      y => mux0_y_net_x1
    );

  mux1: entity work.mux_fca786f2ff
    port map (
      ce => ce_1_sg_x73,
      clk => clk_1_sg_x73,
      clr => '0',
      d0 => delay_q_net,
      d1 => bram0_data_out_net_x0,
      sel(0) => relational1_op_net,
      y => mux1_y_net_x1
    );

  mux2: entity work.mux_fca786f2ff
    port map (
      ce => ce_1_sg_x73,
      clk => clk_1_sg_x73,
      clr => '0',
      d0 => bram0_data_out_net_x0,
      d1 => delay_q_net,
      sel(0) => relational1_op_net,
      y => mux2_y_net_x1
    );

  mux3: entity work.mux_fca786f2ff
    port map (
      ce => ce_1_sg_x73,
      clk => clk_1_sg_x73,
      clr => '0',
      d0 => delay_q_net,
      d1 => bram0_data_out_net_x0,
      sel(0) => relational0_op_net,
      y => mux3_y_net_x1
    );

  relational0: entity work.relational_9a3978c602
    port map (
      a => constant0_op_net,
      b => counter0_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational0_op_net
    );

  relational1: entity work.relational_9a3978c602
    port map (
      a => counter0_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

  reorder_even_358a71e958: entity work.reorder_even_entity_358a71e958
    port map (
      ce_1 => ce_1_sg_x73,
      clk_1 => clk_1_sg_x73,
      din0 => concat_y_net_x8,
      en => en_even_op_net_x0,
      sync => sync_delay_q_net_x2,
      dout0 => bram0_data_out_net_x0,
      sync_out => post_sync_delay_q_net_x1
    );

  reorder_odd_b977752d33: entity work.reorder_odd_entity_b977752d33
    port map (
      ce_1 => ce_1_sg_x73,
      clk_1 => clk_1_sg_x73,
      din0 => concat_y_net_x9,
      en => en_odd_op_net_x0,
      sync => sync_delay_q_net_x2,
      dout0 => bram0_data_out_net_x1
    );

  reorder_out_bd82154bca: entity work.reorder_out_entity_bd82154bca
    port map (
      ce_1 => ce_1_sg_x73,
      clk_1 => clk_1_sg_x73,
      din0 => single_port_ram_data_out_net_x2,
      din1 => single_port_ram_data_out_net_x3,
      din2 => concat_y_net_x5,
      din3 => concat_y_net_x6,
      en => en_out_op_net_x0,
      sync => mux_y_net_x2,
      dout0 => bram0_data_out_net_x2,
      dout1 => bram1_data_out_net_x0,
      dout2 => bram2_data_out_net_x0,
      dout3 => bram3_data_out_net_x0
    );

  sync_delay_ctr_c266c51a66: entity work.sync_delay_ctr_entity_c266c51a66
    port map (
      ce_1 => ce_1_sg_x73,
      clk_1 => clk_1_sg_x73,
      in_x0 => post_sync_delay_q_net_x1,
      out_x0 => mux_y_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_1/butterfly_direct/cadd"

entity cadd_entity_517d36a131 is
  port (
    a_im: in std_logic_vector(17 downto 0); 
    a_re: in std_logic_vector(17 downto 0); 
    b_im: in std_logic_vector(17 downto 0); 
    b_re: in std_logic_vector(17 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    c_im: out std_logic_vector(18 downto 0); 
    c_re: out std_logic_vector(18 downto 0)
  );
end cadd_entity_517d36a131;

architecture structural of cadd_entity_517d36a131 is
  signal alumode_op_net: std_logic_vector(3 downto 0);
  signal carryin_op_net: std_logic;
  signal carryinsel_op_net: std_logic_vector(2 downto 0);
  signal cast_c_im_dout_net_x0: std_logic_vector(18 downto 0);
  signal cast_c_re_dout_net_x0: std_logic_vector(18 downto 0);
  signal ce_1_sg_x74: std_logic;
  signal clk_1_sg_x74: std_logic;
  signal concat_a_y_net: std_logic_vector(47 downto 0);
  signal concat_b_y_net: std_logic_vector(47 downto 0);
  signal dsp48e_p_net: std_logic_vector(47 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x2: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x2: std_logic_vector(17 downto 0);
  signal opmode_op_net: std_logic_vector(6 downto 0);
  signal realign_a_im_dout_net: std_logic_vector(23 downto 0);
  signal realign_a_re_dout_net: std_logic_vector(23 downto 0);
  signal realign_b_im_dout_net: std_logic_vector(23 downto 0);
  signal realign_b_re_dout_net: std_logic_vector(23 downto 0);
  signal reinterp_a_im_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_a_re_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_b_im_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_b_re_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_c_im_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_c_re_output_port_net: std_logic_vector(23 downto 0);
  signal reinterpret_a_output_port_net: std_logic_vector(29 downto 0);
  signal reinterpret_b_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret_c_output_port_net: std_logic_vector(47 downto 0);
  signal slice_a_y_net: std_logic_vector(29 downto 0);
  signal slice_b_y_net: std_logic_vector(17 downto 0);
  signal slice_c_im_y_net: std_logic_vector(23 downto 0);
  signal slice_c_re_y_net: std_logic_vector(23 downto 0);

begin
  force_im_output_port_net_x1 <= a_im;
  force_re_output_port_net_x1 <= a_re;
  force_im_output_port_net_x2 <= b_im;
  force_re_output_port_net_x2 <= b_re;
  ce_1_sg_x74 <= ce_1;
  clk_1_sg_x74 <= clk_1;
  c_im <= cast_c_im_dout_net_x0;
  c_re <= cast_c_re_dout_net_x0;

  alumode: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => alumode_op_net
    );

  carryin: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => carryin_op_net
    );

  carryinsel: entity work.constant_822933f89b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => carryinsel_op_net
    );

  cast_c_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 21,
      din_width => 24,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 19,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x74,
      clk => clk_1_sg_x74,
      clr => '0',
      din => reinterp_c_im_output_port_net,
      en => "1",
      dout => cast_c_im_dout_net_x0
    );

  cast_c_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 21,
      din_width => 24,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 19,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x74,
      clk => clk_1_sg_x74,
      clr => '0',
      din => reinterp_c_re_output_port_net,
      en => "1",
      dout => cast_c_re_dout_net_x0
    );

  concat_a: entity work.concat_b57c4be2de
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterp_a_re_output_port_net,
      in1 => reinterp_a_im_output_port_net,
      y => concat_a_y_net
    );

  concat_b: entity work.concat_b57c4be2de
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterp_b_re_output_port_net,
      in1 => reinterp_b_im_output_port_net,
      y => concat_b_y_net
    );

  dsp48e: entity work.xldsp48e
    generic map (
      a_input => "DIRECT",
      acascreg => 1,
      alumodereg => 1,
      areg => 1,
      autoreset_pattern_detect => FALSE,
      autoreset_pattern_detect_optinv => "MATCH",
      b_input => "DIRECT",
      bcascreg => 1,
      breg => 1,
      carryinreg => 1,
      carryinselreg => 1,
      carryout_width => 4,
      creg => 1,
      mreg => 1,
      opmodereg => 1,
      preg => 1,
      sel_mask => "MASK",
      sel_pattern => "PATTERN",
      use_c_port => 1,
      use_mult => "MULT_S",
      use_op => 0,
      use_pattern_detect => "NO_PATDET",
      use_simd => "TWO24"
    )
    port map (
      a => reinterpret_a_output_port_net,
      alumode => alumode_op_net,
      b => reinterpret_b_output_port_net,
      c => reinterpret_c_output_port_net,
      carryin(0) => carryin_op_net,
      carryinsel => carryinsel_op_net,
      ce => ce_1_sg_x74,
      cea1 => "1",
      cea2 => "1",
      cealumode => "1",
      ceb1 => "1",
      ceb2 => "1",
      cec => "1",
      cecarryin => "1",
      cectrl => "1",
      cem => "1",
      cemultcarryin => "1",
      cep => "1",
      clk => clk_1_sg_x74,
      en => "1",
      opmode => opmode_op_net,
      rst => "0",
      rsta => "0",
      rstalumode => "0",
      rstb => "0",
      rstc => "0",
      rstcarryin => "0",
      rstctrl => "0",
      rstm => "0",
      rstp => "0",
      p => dsp48e_p_net
    );

  opmode: entity work.constant_270746ab47
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => opmode_op_net
    );

  realign_a_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 21,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x74,
      clk => clk_1_sg_x74,
      clr => '0',
      din => force_im_output_port_net_x1,
      en => "1",
      dout => realign_a_im_dout_net
    );

  realign_a_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 21,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x74,
      clk => clk_1_sg_x74,
      clr => '0',
      din => force_re_output_port_net_x1,
      en => "1",
      dout => realign_a_re_dout_net
    );

  realign_b_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 21,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x74,
      clk => clk_1_sg_x74,
      clr => '0',
      din => force_im_output_port_net_x2,
      en => "1",
      dout => realign_b_im_dout_net
    );

  realign_b_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 21,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x74,
      clk => clk_1_sg_x74,
      clr => '0',
      din => force_re_output_port_net_x2,
      en => "1",
      dout => realign_b_re_dout_net
    );

  reinterp_a_im: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_a_im_dout_net,
      output_port => reinterp_a_im_output_port_net
    );

  reinterp_a_re: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_a_re_dout_net,
      output_port => reinterp_a_re_output_port_net
    );

  reinterp_b_im: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_b_im_dout_net,
      output_port => reinterp_b_im_output_port_net
    );

  reinterp_b_re: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_b_re_dout_net,
      output_port => reinterp_b_re_output_port_net
    );

  reinterp_c_im: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_c_im_y_net,
      output_port => reinterp_c_im_output_port_net
    );

  reinterp_c_re: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_c_re_y_net,
      output_port => reinterp_c_re_output_port_net
    );

  reinterpret_a: entity work.reinterpret_eb03bc3377
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_a_y_net,
      output_port => reinterpret_a_output_port_net
    );

  reinterpret_b: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_b_y_net,
      output_port => reinterpret_b_output_port_net
    );

  reinterpret_c: entity work.reinterpret_7ea107432a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_a_y_net,
      output_port => reinterpret_c_output_port_net
    );

  slice_a: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 47,
      x_width => 48,
      y_width => 30
    )
    port map (
      x => concat_b_y_net,
      y => slice_a_y_net
    );

  slice_b: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 48,
      y_width => 18
    )
    port map (
      x => concat_b_y_net,
      y => slice_b_y_net
    );

  slice_c_im: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 23,
      x_width => 48,
      y_width => 24
    )
    port map (
      x => dsp48e_p_net,
      y => slice_c_im_y_net
    );

  slice_c_re: entity work.xlslice
    generic map (
      new_lsb => 24,
      new_msb => 47,
      x_width => 48,
      y_width => 24
    )
    port map (
      x => dsp48e_p_net,
      y => slice_c_re_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_1/butterfly_direct/convert_of0/convert"

entity convert_entity_70860c9991 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(19 downto 0); 
    out_x0: out std_logic_vector(17 downto 0)
  );
end convert_entity_70860c9991;

architecture structural of convert_entity_70860c9991 is
  signal adder_s_net_x0: std_logic_vector(17 downto 0);
  signal almost_half_op_net: std_logic_vector(18 downto 0);
  signal bit_y_net: std_logic;
  signal ce_1_sg_x75: std_logic;
  signal clk_1_sg_x75: std_logic;
  signal concat_y_net: std_logic_vector(20 downto 0);
  signal constant_op_net: std_logic;
  signal force1_output_port_net: std_logic_vector(20 downto 0);
  signal force2_output_port_net: std_logic_vector(18 downto 0);
  signal mux0_y_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(19 downto 0);
  signal tweak_op_y_net: std_logic;

begin
  ce_1_sg_x75 <= ce_1;
  clk_1_sg_x75 <= clk_1;
  mux0_y_net_x0 <= in_x0;
  out_x0 <= adder_s_net_x0;

  adder: entity work.addsub_8ea27c0b26
    port map (
      a => force1_output_port_net,
      b => force2_output_port_net,
      ce => ce_1_sg_x75,
      clk => clk_1_sg_x75,
      clr => '0',
      s => adder_s_net_x0
    );

  almost_half: entity work.constant_4709ea49b5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => almost_half_op_net
    );

  bit: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 20,
      y_width => 1
    )
    port map (
      x => mux0_y_net_x0,
      y(0) => bit_y_net
    );

  concat: entity work.concat_c615d93998
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret_output_port_net,
      in1(0) => tweak_op_y_net,
      y => concat_y_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  force1: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net,
      output_port => force1_output_port_net
    );

  force2: entity work.reinterpret_d2180c9169
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => almost_half_op_net,
      output_port => force2_output_port_net
    );

  reinterpret: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux0_y_net_x0,
      output_port => reinterpret_output_port_net
    );

  tweak_op: entity work.logical_938d99ac11
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => bit_y_net,
      d1(0) => constant_op_net,
      y(0) => tweak_op_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_1/butterfly_direct/convert_of0"

entity convert_of0_entity_269fb2de1a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(19 downto 0); 
    dout: out std_logic_vector(17 downto 0); 
    of_x0: out std_logic
  );
end convert_of0_entity_269fb2de1a;

architecture structural of convert_of0_entity_269fb2de1a is
  signal adder_s_net_x1: std_logic_vector(17 downto 0);
  signal all_0s_y_net: std_logic;
  signal all_1s_y_net: std_logic;
  signal and_y_net_x0: std_logic;
  signal ce_1_sg_x76: std_logic;
  signal clk_1_sg_x76: std_logic;
  signal invert1_op_net: std_logic;
  signal invert2_op_net: std_logic;
  signal mux0_y_net_x1: std_logic_vector(19 downto 0);
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic;

begin
  ce_1_sg_x76 <= ce_1;
  clk_1_sg_x76 <= clk_1;
  mux0_y_net_x1 <= din;
  dout <= adder_s_net_x1;
  of_x0 <= and_y_net_x0;

  all_0s: entity work.logical_89dc141487
    port map (
      ce => ce_1_sg_x76,
      clk => clk_1_sg_x76,
      clr => '0',
      d0(0) => invert1_op_net,
      d1(0) => invert2_op_net,
      y(0) => all_0s_y_net
    );

  all_1s: entity work.logical_89dc141487
    port map (
      ce => ce_1_sg_x76,
      clk => clk_1_sg_x76,
      clr => '0',
      d0(0) => slice1_y_net,
      d1(0) => slice2_y_net,
      y(0) => all_1s_y_net
    );

  and_x0: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => all_0s_y_net,
      d1(0) => all_1s_y_net,
      y(0) => and_y_net_x0
    );

  convert_70860c9991: entity work.convert_entity_70860c9991
    port map (
      ce_1 => ce_1_sg_x76,
      clk_1 => clk_1_sg_x76,
      in_x0 => mux0_y_net_x1,
      out_x0 => adder_s_net_x1
    );

  invert1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x76,
      clk => clk_1_sg_x76,
      clr => '0',
      ip(0) => slice1_y_net,
      op(0) => invert1_op_net
    );

  invert2: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x76,
      clk => clk_1_sg_x76,
      clr => '0',
      ip(0) => slice2_y_net,
      op(0) => invert2_op_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 19,
      new_msb => 19,
      x_width => 20,
      y_width => 1
    )
    port map (
      x => mux0_y_net_x1,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 18,
      x_width => 20,
      y_width => 1
    )
    port map (
      x => mux0_y_net_x1,
      y(0) => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_1/butterfly_direct/csub"

entity csub_entity_2ad7cf465d is
  port (
    a_im: in std_logic_vector(17 downto 0); 
    a_re: in std_logic_vector(17 downto 0); 
    b_im: in std_logic_vector(17 downto 0); 
    b_re: in std_logic_vector(17 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    c_im: out std_logic_vector(18 downto 0); 
    c_re: out std_logic_vector(18 downto 0)
  );
end csub_entity_2ad7cf465d;

architecture structural of csub_entity_2ad7cf465d is
  signal alumode_op_net: std_logic_vector(3 downto 0);
  signal carryin_op_net: std_logic;
  signal carryinsel_op_net: std_logic_vector(2 downto 0);
  signal cast_c_im_dout_net_x0: std_logic_vector(18 downto 0);
  signal cast_c_re_dout_net_x0: std_logic_vector(18 downto 0);
  signal ce_1_sg_x83: std_logic;
  signal clk_1_sg_x83: std_logic;
  signal concat_a_y_net: std_logic_vector(47 downto 0);
  signal concat_b_y_net: std_logic_vector(47 downto 0);
  signal dsp48e_p_net: std_logic_vector(47 downto 0);
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x4: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x4: std_logic_vector(17 downto 0);
  signal opmode_op_net: std_logic_vector(6 downto 0);
  signal realign_a_im_dout_net: std_logic_vector(23 downto 0);
  signal realign_a_re_dout_net: std_logic_vector(23 downto 0);
  signal realign_b_im_dout_net: std_logic_vector(23 downto 0);
  signal realign_b_re_dout_net: std_logic_vector(23 downto 0);
  signal reinterp_a_im_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_a_re_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_b_im_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_b_re_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_c_im_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_c_re_output_port_net: std_logic_vector(23 downto 0);
  signal reinterpret_a_output_port_net: std_logic_vector(29 downto 0);
  signal reinterpret_b_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret_c_output_port_net: std_logic_vector(47 downto 0);
  signal slice_a_y_net: std_logic_vector(29 downto 0);
  signal slice_b_y_net: std_logic_vector(17 downto 0);
  signal slice_c_im_y_net: std_logic_vector(23 downto 0);
  signal slice_c_re_y_net: std_logic_vector(23 downto 0);

begin
  force_im_output_port_net_x3 <= a_im;
  force_re_output_port_net_x3 <= a_re;
  force_im_output_port_net_x4 <= b_im;
  force_re_output_port_net_x4 <= b_re;
  ce_1_sg_x83 <= ce_1;
  clk_1_sg_x83 <= clk_1;
  c_im <= cast_c_im_dout_net_x0;
  c_re <= cast_c_re_dout_net_x0;

  alumode: entity work.constant_8038205d89
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => alumode_op_net
    );

  carryin: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => carryin_op_net
    );

  carryinsel: entity work.constant_822933f89b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => carryinsel_op_net
    );

  cast_c_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 21,
      din_width => 24,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 19,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x83,
      clk => clk_1_sg_x83,
      clr => '0',
      din => reinterp_c_im_output_port_net,
      en => "1",
      dout => cast_c_im_dout_net_x0
    );

  cast_c_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 21,
      din_width => 24,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 19,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x83,
      clk => clk_1_sg_x83,
      clr => '0',
      din => reinterp_c_re_output_port_net,
      en => "1",
      dout => cast_c_re_dout_net_x0
    );

  concat_a: entity work.concat_b57c4be2de
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterp_a_re_output_port_net,
      in1 => reinterp_a_im_output_port_net,
      y => concat_a_y_net
    );

  concat_b: entity work.concat_b57c4be2de
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterp_b_re_output_port_net,
      in1 => reinterp_b_im_output_port_net,
      y => concat_b_y_net
    );

  dsp48e: entity work.xldsp48e
    generic map (
      a_input => "DIRECT",
      acascreg => 1,
      alumodereg => 1,
      areg => 1,
      autoreset_pattern_detect => FALSE,
      autoreset_pattern_detect_optinv => "MATCH",
      b_input => "DIRECT",
      bcascreg => 1,
      breg => 1,
      carryinreg => 1,
      carryinselreg => 1,
      carryout_width => 4,
      creg => 1,
      mreg => 1,
      opmodereg => 1,
      preg => 1,
      sel_mask => "MASK",
      sel_pattern => "PATTERN",
      use_c_port => 1,
      use_mult => "MULT_S",
      use_op => 0,
      use_pattern_detect => "NO_PATDET",
      use_simd => "TWO24"
    )
    port map (
      a => reinterpret_a_output_port_net,
      alumode => alumode_op_net,
      b => reinterpret_b_output_port_net,
      c => reinterpret_c_output_port_net,
      carryin(0) => carryin_op_net,
      carryinsel => carryinsel_op_net,
      ce => ce_1_sg_x83,
      cea1 => "1",
      cea2 => "1",
      cealumode => "1",
      ceb1 => "1",
      ceb2 => "1",
      cec => "1",
      cecarryin => "1",
      cectrl => "1",
      cem => "1",
      cemultcarryin => "1",
      cep => "1",
      clk => clk_1_sg_x83,
      en => "1",
      opmode => opmode_op_net,
      rst => "0",
      rsta => "0",
      rstalumode => "0",
      rstb => "0",
      rstc => "0",
      rstcarryin => "0",
      rstctrl => "0",
      rstm => "0",
      rstp => "0",
      p => dsp48e_p_net
    );

  opmode: entity work.constant_270746ab47
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => opmode_op_net
    );

  realign_a_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 21,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x83,
      clk => clk_1_sg_x83,
      clr => '0',
      din => force_im_output_port_net_x3,
      en => "1",
      dout => realign_a_im_dout_net
    );

  realign_a_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 21,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x83,
      clk => clk_1_sg_x83,
      clr => '0',
      din => force_re_output_port_net_x3,
      en => "1",
      dout => realign_a_re_dout_net
    );

  realign_b_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 21,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x83,
      clk => clk_1_sg_x83,
      clr => '0',
      din => force_im_output_port_net_x4,
      en => "1",
      dout => realign_b_im_dout_net
    );

  realign_b_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 21,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x83,
      clk => clk_1_sg_x83,
      clr => '0',
      din => force_re_output_port_net_x4,
      en => "1",
      dout => realign_b_re_dout_net
    );

  reinterp_a_im: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_a_im_dout_net,
      output_port => reinterp_a_im_output_port_net
    );

  reinterp_a_re: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_a_re_dout_net,
      output_port => reinterp_a_re_output_port_net
    );

  reinterp_b_im: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_b_im_dout_net,
      output_port => reinterp_b_im_output_port_net
    );

  reinterp_b_re: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_b_re_dout_net,
      output_port => reinterp_b_re_output_port_net
    );

  reinterp_c_im: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_c_im_y_net,
      output_port => reinterp_c_im_output_port_net
    );

  reinterp_c_re: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_c_re_y_net,
      output_port => reinterp_c_re_output_port_net
    );

  reinterpret_a: entity work.reinterpret_eb03bc3377
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_a_y_net,
      output_port => reinterpret_a_output_port_net
    );

  reinterpret_b: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_b_y_net,
      output_port => reinterpret_b_output_port_net
    );

  reinterpret_c: entity work.reinterpret_7ea107432a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_a_y_net,
      output_port => reinterpret_c_output_port_net
    );

  slice_a: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 47,
      x_width => 48,
      y_width => 30
    )
    port map (
      x => concat_b_y_net,
      y => slice_a_y_net
    );

  slice_b: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 48,
      y_width => 18
    )
    port map (
      x => concat_b_y_net,
      y => slice_b_y_net
    );

  slice_c_im: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 23,
      x_width => 48,
      y_width => 24
    )
    port map (
      x => dsp48e_p_net,
      y => slice_c_im_y_net
    );

  slice_c_re: entity work.xlslice
    generic map (
      new_lsb => 24,
      new_msb => 47,
      x_width => 48,
      y_width => 24
    )
    port map (
      x => dsp48e_p_net,
      y => slice_c_re_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_1/butterfly_direct/twiddle_pass_through"

entity twiddle_pass_through_entity_1612d5478f is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    a_im: out std_logic_vector(17 downto 0); 
    a_re: out std_logic_vector(17 downto 0); 
    bw_im: out std_logic_vector(17 downto 0); 
    bw_re: out std_logic_vector(17 downto 0)
  );
end twiddle_pass_through_entity_1612d5478f;

architecture structural of twiddle_pass_through_entity_1612d5478f is
  signal force_im_output_port_net_x6: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x7: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x6: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x7: std_logic_vector(17 downto 0);
  signal mux_y_net_x1: std_logic_vector(35 downto 0);
  signal single_port_ram_data_out_net_x1: std_logic_vector(35 downto 0);

begin
  single_port_ram_data_out_net_x1 <= a;
  mux_y_net_x1 <= b;
  a_im <= force_im_output_port_net_x6;
  a_re <= force_re_output_port_net_x6;
  bw_im <= force_im_output_port_net_x7;
  bw_re <= force_re_output_port_net_x7;

  c_to_ri1_ae0dfdafeb: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => mux_y_net_x1,
      im => force_im_output_port_net_x7,
      re => force_re_output_port_net_x7
    );

  c_to_ri_1536687b60: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => single_port_ram_data_out_net_x1,
      im => force_im_output_port_net_x6,
      re => force_re_output_port_net_x6
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_1/butterfly_direct"

entity butterfly_direct_entity_669af7fe17 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    a_bw_x0: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly_direct_entity_669af7fe17;

architecture structural of butterfly_direct_entity_669af7fe17 is
  signal adder_s_net_x3: std_logic_vector(17 downto 0);
  signal adder_s_net_x4: std_logic_vector(17 downto 0);
  signal adder_s_net_x5: std_logic_vector(17 downto 0);
  signal adder_s_net_x6: std_logic_vector(17 downto 0);
  signal and_y_net_x0: std_logic;
  signal and_y_net_x1: std_logic;
  signal and_y_net_x2: std_logic;
  signal and_y_net_x3: std_logic;
  signal cast_c_im_dout_net_x0: std_logic_vector(18 downto 0);
  signal cast_c_im_dout_net_x1: std_logic_vector(18 downto 0);
  signal cast_c_re_dout_net_x0: std_logic_vector(18 downto 0);
  signal cast_c_re_dout_net_x1: std_logic_vector(18 downto 0);
  signal ce_1_sg_x84: std_logic;
  signal clk_1_sg_x84: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal concat_y_net_x3: std_logic_vector(35 downto 0);
  signal force_im_output_port_net_x6: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x7: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x6: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x7: std_logic_vector(17 downto 0);
  signal logical_y_net_x0: std_logic;
  signal mux0_y_net_x1: std_logic_vector(19 downto 0);
  signal mux1_y_net_x1: std_logic_vector(19 downto 0);
  signal mux2_y_net_x1: std_logic_vector(19 downto 0);
  signal mux3_y_net_x1: std_logic_vector(19 downto 0);
  signal mux_y_net_x0: std_logic;
  signal mux_y_net_x2: std_logic_vector(35 downto 0);
  signal scale0_op_net: std_logic_vector(18 downto 0);
  signal scale1_op_net: std_logic_vector(18 downto 0);
  signal scale2_op_net: std_logic_vector(18 downto 0);
  signal scale3_op_net: std_logic_vector(18 downto 0);
  signal shift_delay_q_net: std_logic;
  signal single_port_ram_data_out_net_x2: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic;
  signal sync_delay_q_net_x0: std_logic;

begin
  single_port_ram_data_out_net_x2 <= a;
  mux_y_net_x2 <= b;
  ce_1_sg_x84 <= ce_1;
  clk_1_sg_x84 <= clk_1;
  slice_y_net_x0 <= shift;
  mux_y_net_x0 <= sync;
  a_bw <= concat_y_net_x2;
  a_bw_x0 <= concat_y_net_x3;
  of_x0 <= logical_y_net_x0;
  sync_out <= sync_delay_q_net_x0;

  cadd_517d36a131: entity work.cadd_entity_517d36a131
    port map (
      a_im => force_im_output_port_net_x6,
      a_re => force_re_output_port_net_x6,
      b_im => force_im_output_port_net_x7,
      b_re => force_re_output_port_net_x7,
      ce_1 => ce_1_sg_x84,
      clk_1 => clk_1_sg_x84,
      c_im => cast_c_im_dout_net_x0,
      c_re => cast_c_re_dout_net_x0
    );

  convert_of0_269fb2de1a: entity work.convert_of0_entity_269fb2de1a
    port map (
      ce_1 => ce_1_sg_x84,
      clk_1 => clk_1_sg_x84,
      din => mux0_y_net_x1,
      dout => adder_s_net_x3,
      of_x0 => and_y_net_x0
    );

  convert_of1_3539951cb2: entity work.convert_of0_entity_269fb2de1a
    port map (
      ce_1 => ce_1_sg_x84,
      clk_1 => clk_1_sg_x84,
      din => mux1_y_net_x1,
      dout => adder_s_net_x4,
      of_x0 => and_y_net_x1
    );

  convert_of2_92d3ecea0f: entity work.convert_of0_entity_269fb2de1a
    port map (
      ce_1 => ce_1_sg_x84,
      clk_1 => clk_1_sg_x84,
      din => mux2_y_net_x1,
      dout => adder_s_net_x5,
      of_x0 => and_y_net_x2
    );

  convert_of3_2bd07797de: entity work.convert_of0_entity_269fb2de1a
    port map (
      ce_1 => ce_1_sg_x84,
      clk_1 => clk_1_sg_x84,
      din => mux3_y_net_x1,
      dout => adder_s_net_x6,
      of_x0 => and_y_net_x3
    );

  csub_2ad7cf465d: entity work.csub_entity_2ad7cf465d
    port map (
      a_im => force_im_output_port_net_x6,
      a_re => force_re_output_port_net_x6,
      b_im => force_im_output_port_net_x7,
      b_re => force_re_output_port_net_x7,
      ce_1 => ce_1_sg_x84,
      clk_1 => clk_1_sg_x84,
      c_im => cast_c_im_dout_net_x1,
      c_re => cast_c_re_dout_net_x1
    );

  logical: entity work.logical_a6d07705dd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => and_y_net_x0,
      d1(0) => and_y_net_x1,
      d2(0) => and_y_net_x2,
      d3(0) => and_y_net_x3,
      y(0) => logical_y_net_x0
    );

  mux0: entity work.mux_28159dbdb9
    port map (
      ce => ce_1_sg_x84,
      clk => clk_1_sg_x84,
      clr => '0',
      d0 => cast_c_re_dout_net_x0,
      d1 => scale0_op_net,
      sel(0) => shift_delay_q_net,
      y => mux0_y_net_x1
    );

  mux1: entity work.mux_28159dbdb9
    port map (
      ce => ce_1_sg_x84,
      clk => clk_1_sg_x84,
      clr => '0',
      d0 => cast_c_im_dout_net_x0,
      d1 => scale1_op_net,
      sel(0) => shift_delay_q_net,
      y => mux1_y_net_x1
    );

  mux2: entity work.mux_28159dbdb9
    port map (
      ce => ce_1_sg_x84,
      clk => clk_1_sg_x84,
      clr => '0',
      d0 => cast_c_re_dout_net_x1,
      d1 => scale2_op_net,
      sel(0) => shift_delay_q_net,
      y => mux2_y_net_x1
    );

  mux3: entity work.mux_28159dbdb9
    port map (
      ce => ce_1_sg_x84,
      clk => clk_1_sg_x84,
      clr => '0',
      d0 => cast_c_im_dout_net_x1,
      d1 => scale3_op_net,
      sel(0) => shift_delay_q_net,
      y => mux3_y_net_x1
    );

  ri_to_c01_ec6c9d9f20: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => adder_s_net_x4,
      re => adder_s_net_x3,
      c => concat_y_net_x2
    );

  ri_to_c23_36e090e7e0: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => adder_s_net_x6,
      re => adder_s_net_x5,
      c => concat_y_net_x3
    );

  scale0: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x0,
      op => scale0_op_net
    );

  scale1: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x0,
      op => scale1_op_net
    );

  scale2: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x1,
      op => scale2_op_net
    );

  scale3: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x1,
      op => scale3_op_net
    );

  shift_delay: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x84,
      clk => clk_1_sg_x84,
      d(0) => slice_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => shift_delay_q_net
    );

  sync_delay: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x84,
      clk => clk_1_sg_x84,
      clr => '0',
      d(0) => mux_y_net_x0,
      q(0) => sync_delay_q_net_x0
    );

  twiddle_pass_through_1612d5478f: entity work.twiddle_pass_through_entity_1612d5478f
    port map (
      a => single_port_ram_data_out_net_x2,
      b => mux_y_net_x2,
      a_im => force_im_output_port_net_x6,
      a_re => force_re_output_port_net_x6,
      bw_im => force_im_output_port_net_x7,
      bw_re => force_re_output_port_net_x7
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_1/sync_delay"

entity sync_delay_entity_fd333a7782 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_fd333a7782;

architecture structural of sync_delay_entity_fd333a7782 is
  signal ce_1_sg_x87: std_logic;
  signal clk_1_sg_x87: std_logic;
  signal constant1_op_net: std_logic_vector(6 downto 0);
  signal constant2_op_net: std_logic_vector(6 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(6 downto 0);
  signal counter_op_net: std_logic_vector(6 downto 0);
  signal delay_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x1: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x87 <= ce_1;
  clk_1_sg_x87 <= clk_1;
  delay_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x1;

  constant1: entity work.constant_7244cd602b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_7b07120b87
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_180df391de
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_3ad9dc21603f5ae0",
      op_arith => xlUnsigned,
      op_width => 7
    )
    port map (
      ce => ce_1_sg_x87,
      clk => clk_1_sg_x87,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => delay_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x1
    );

  relational: entity work.relational_9a3978c602
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_23065a6aa3
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_1"

entity fft_stage_1_entity_7a0acaf727 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    of_in: in std_logic; 
    shift: in std_logic_vector(9 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_1_entity_7a0acaf727;

architecture structural of fft_stage_1_entity_7a0acaf727 is
  signal ce_1_sg_x88: std_logic;
  signal clk_1_sg_x88: std_logic;
  signal concat_y_net_x4: std_logic_vector(35 downto 0);
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concat_y_net_x6: std_logic_vector(35 downto 0);
  signal concat_y_net_x7: std_logic_vector(35 downto 0);
  signal constant_op_net_x0: std_logic;
  signal counter_op_net: std_logic_vector(6 downto 0);
  signal delay_q_net_x0: std_logic;
  signal logical1_y_net_x0: std_logic;
  signal logical_y_net_x0: std_logic;
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);
  signal mux_y_net_x1: std_logic;
  signal mux_y_net_x2: std_logic_vector(35 downto 0);
  signal register0_q_net_x0: std_logic;
  signal single_port_ram_data_out_net_x0: std_logic_vector(35 downto 0);
  signal single_port_ram_data_out_net_x3: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic;
  signal slice6_y_net_x0: std_logic_vector(9 downto 0);
  signal slice_y_net_x0: std_logic;
  signal sync_delay_q_net_x1: std_logic;

begin
  ce_1_sg_x88 <= ce_1;
  clk_1_sg_x88 <= clk_1;
  concat_y_net_x4 <= in1;
  concat_y_net_x5 <= in2;
  constant_op_net_x0 <= of_in;
  slice6_y_net_x0 <= shift;
  register0_q_net_x0 <= sync;
  of_x0 <= logical1_y_net_x0;
  out1 <= concat_y_net_x6;
  out2 <= concat_y_net_x7;
  sync_out <= sync_delay_q_net_x1;

  butterfly_direct_669af7fe17: entity work.butterfly_direct_entity_669af7fe17
    port map (
      a => single_port_ram_data_out_net_x3,
      b => mux_y_net_x2,
      ce_1 => ce_1_sg_x88,
      clk_1 => clk_1_sg_x88,
      shift => slice_y_net_x0,
      sync => mux_y_net_x1,
      a_bw => concat_y_net_x6,
      a_bw_x0 => concat_y_net_x7,
      of_x0 => logical_y_net_x0,
      sync_out => sync_delay_q_net_x1
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_aeada998ec385fcd",
      op_arith => xlUnsigned,
      op_width => 7
    )
    port map (
      ce => ce_1_sg_x88,
      clk => clk_1_sg_x88,
      clr => '0',
      en => "1",
      rst(0) => register0_q_net_x0,
      op => counter_op_net
    );

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x88,
      clk => clk_1_sg_x88,
      d(0) => register0_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_q_net_x0
    );

  delay_b_77376b4550: entity work.delay_bram0_entity_132f1fc19a
    port map (
      ce_1 => ce_1_sg_x88,
      clk_1 => clk_1_sg_x88,
      in1 => mux1_y_net_x0,
      out1 => single_port_ram_data_out_net_x3
    );

  delay_f_7eafabcb6a: entity work.delay_bram0_entity_132f1fc19a
    port map (
      ce_1 => ce_1_sg_x88,
      clk_1 => clk_1_sg_x88,
      in1 => concat_y_net_x5,
      out1 => single_port_ram_data_out_net_x0
    );

  logical1: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x88,
      clk => clk_1_sg_x88,
      clr => '0',
      d0(0) => logical_y_net_x0,
      d1(0) => constant_op_net_x0,
      y(0) => logical1_y_net_x0
    );

  mux: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x88,
      clk => clk_1_sg_x88,
      clr => '0',
      d0 => single_port_ram_data_out_net_x0,
      d1 => concat_y_net_x4,
      sel(0) => slice1_y_net,
      y => mux_y_net_x2
    );

  mux1: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x88,
      clk => clk_1_sg_x88,
      clr => '0',
      d0 => concat_y_net_x4,
      d1 => single_port_ram_data_out_net_x0,
      sel(0) => slice1_y_net,
      y => mux1_y_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 10,
      y_width => 1
    )
    port map (
      x => slice6_y_net_x0,
      y(0) => slice_y_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 6,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_fd333a7782: entity work.sync_delay_entity_fd333a7782
    port map (
      ce_1 => ce_1_sg_x88,
      clk_1 => clk_1_sg_x88,
      in_x0 => delay_q_net_x0,
      out_x0 => mux_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct/twiddle_stage_2"

entity twiddle_stage_2_entity_30c73c209f is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync: in std_logic; 
    a_im: out std_logic_vector(17 downto 0); 
    a_re: out std_logic_vector(17 downto 0); 
    bw_im: out std_logic_vector(17 downto 0); 
    bw_re: out std_logic_vector(17 downto 0); 
    sync_out: out std_logic
  );
end twiddle_stage_2_entity_30c73c209f;

architecture structural of twiddle_stage_2_entity_30c73c209f is
  signal ce_1_sg_x99: std_logic;
  signal clk_1_sg_x99: std_logic;
  signal convert_dout_net: std_logic_vector(17 downto 0);
  signal counter_op_net: std_logic_vector(5 downto 0);
  signal delay0_q_net_x2: std_logic_vector(17 downto 0);
  signal delay1_q_net_x2: std_logic_vector(17 downto 0);
  signal delay2_q_net: std_logic;
  signal delay3_q_net: std_logic_vector(17 downto 0);
  signal delay4_q_net: std_logic_vector(17 downto 0);
  signal delay5_q_net: std_logic_vector(17 downto 0);
  signal delay6_q_net: std_logic_vector(17 downto 0);
  signal delay7_q_net: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal force_im_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux0_y_net_x2: std_logic_vector(17 downto 0);
  signal mux1_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x1: std_logic_vector(35 downto 0);
  signal mux_y_net_x2: std_logic;
  signal negate_op_net: std_logic_vector(18 downto 0);
  signal single_port_ram_data_out_net_x1: std_logic_vector(35 downto 0);
  signal slice_y_net: std_logic;

begin
  single_port_ram_data_out_net_x1 <= a;
  mux_y_net_x1 <= b;
  ce_1_sg_x99 <= ce_1;
  clk_1_sg_x99 <= clk_1;
  mux_y_net_x2 <= sync;
  a_im <= delay1_q_net_x2;
  a_re <= delay0_q_net_x2;
  bw_im <= mux1_y_net_x2;
  bw_re <= mux0_y_net_x2;
  sync_out <= delay8_q_net_x0;

  c_to_ri1_71d9770184: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => mux_y_net_x1,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  c_to_ri_719ddee2e3: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => single_port_ram_data_out_net_x1,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  convert: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 2,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x99,
      clk => clk_1_sg_x99,
      clr => '0',
      din => negate_op_net,
      en => "1",
      dout => convert_dout_net
    );

  counter: entity work.counter_7888581f80
    port map (
      ce => ce_1_sg_x99,
      clk => clk_1_sg_x99,
      clr => '0',
      rst(0) => delay7_q_net,
      op => counter_op_net
    );

  delay0: entity work.delay_fa2be75f6e
    port map (
      ce => ce_1_sg_x99,
      clk => clk_1_sg_x99,
      clr => '0',
      d => force_re_output_port_net_x0,
      q => delay0_q_net_x2
    );

  delay1: entity work.delay_fa2be75f6e
    port map (
      ce => ce_1_sg_x99,
      clk => clk_1_sg_x99,
      clr => '0',
      d => force_im_output_port_net_x0,
      q => delay1_q_net_x2
    );

  delay2: entity work.delay_5b3ce5f2ae
    port map (
      ce => ce_1_sg_x99,
      clk => clk_1_sg_x99,
      clr => '0',
      d(0) => slice_y_net,
      q(0) => delay2_q_net
    );

  delay3: entity work.delay_4217913c13
    port map (
      ce => ce_1_sg_x99,
      clk => clk_1_sg_x99,
      clr => '0',
      d => delay6_q_net,
      q => delay3_q_net
    );

  delay4: entity work.delay_4217913c13
    port map (
      ce => ce_1_sg_x99,
      clk => clk_1_sg_x99,
      clr => '0',
      d => convert_dout_net,
      q => delay4_q_net
    );

  delay5: entity work.delay_328e8ebbb5
    port map (
      ce => ce_1_sg_x99,
      clk => clk_1_sg_x99,
      clr => '0',
      d => force_re_output_port_net_x1,
      q => delay5_q_net
    );

  delay6: entity work.delay_328e8ebbb5
    port map (
      ce => ce_1_sg_x99,
      clk => clk_1_sg_x99,
      clr => '0',
      d => force_im_output_port_net_x1,
      q => delay6_q_net
    );

  delay7: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x99,
      clk => clk_1_sg_x99,
      clr => '0',
      d(0) => mux_y_net_x2,
      q(0) => delay7_q_net
    );

  delay8: entity work.delay_fa260f7d22
    port map (
      ce => ce_1_sg_x99,
      clk => clk_1_sg_x99,
      clr => '0',
      d(0) => delay7_q_net,
      q(0) => delay8_q_net_x0
    );

  mux0: entity work.mux_30e9ca90db
    port map (
      ce => ce_1_sg_x99,
      clk => clk_1_sg_x99,
      clr => '0',
      d0 => delay5_q_net,
      d1 => delay6_q_net,
      sel(0) => slice_y_net,
      y => mux0_y_net_x2
    );

  mux1: entity work.mux_181e58d842
    port map (
      ce => ce_1_sg_x99,
      clk => clk_1_sg_x99,
      clr => '0',
      d0 => delay3_q_net,
      d1 => delay4_q_net,
      sel(0) => delay2_q_net,
      y => mux1_y_net_x2
    );

  negate: entity work.negate_293ec41b50
    port map (
      ce => ce_1_sg_x99,
      clk => clk_1_sg_x99,
      clr => '0',
      ip => force_re_output_port_net_x1,
      op => negate_op_net
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 5,
      x_width => 6,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_2/butterfly_direct"

entity butterfly_direct_entity_57b07e077f is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    a_bw_x0: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly_direct_entity_57b07e077f;

architecture structural of butterfly_direct_entity_57b07e077f is
  signal adder_s_net_x3: std_logic_vector(17 downto 0);
  signal adder_s_net_x4: std_logic_vector(17 downto 0);
  signal adder_s_net_x5: std_logic_vector(17 downto 0);
  signal adder_s_net_x6: std_logic_vector(17 downto 0);
  signal and_y_net_x0: std_logic;
  signal and_y_net_x1: std_logic;
  signal and_y_net_x2: std_logic;
  signal and_y_net_x3: std_logic;
  signal cast_c_im_dout_net_x0: std_logic_vector(18 downto 0);
  signal cast_c_im_dout_net_x1: std_logic_vector(18 downto 0);
  signal cast_c_re_dout_net_x0: std_logic_vector(18 downto 0);
  signal cast_c_re_dout_net_x1: std_logic_vector(18 downto 0);
  signal ce_1_sg_x100: std_logic;
  signal clk_1_sg_x100: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal concat_y_net_x3: std_logic_vector(35 downto 0);
  signal delay0_q_net_x2: std_logic_vector(17 downto 0);
  signal delay1_q_net_x2: std_logic_vector(17 downto 0);
  signal delay8_q_net_x0: std_logic;
  signal logical_y_net_x0: std_logic;
  signal mux0_y_net_x1: std_logic_vector(19 downto 0);
  signal mux0_y_net_x2: std_logic_vector(17 downto 0);
  signal mux1_y_net_x1: std_logic_vector(19 downto 0);
  signal mux1_y_net_x2: std_logic_vector(17 downto 0);
  signal mux2_y_net_x1: std_logic_vector(19 downto 0);
  signal mux3_y_net_x1: std_logic_vector(19 downto 0);
  signal mux_y_net_x3: std_logic_vector(35 downto 0);
  signal mux_y_net_x4: std_logic;
  signal scale0_op_net: std_logic_vector(18 downto 0);
  signal scale1_op_net: std_logic_vector(18 downto 0);
  signal scale2_op_net: std_logic_vector(18 downto 0);
  signal scale3_op_net: std_logic_vector(18 downto 0);
  signal shift_delay_q_net: std_logic;
  signal single_port_ram_data_out_net_x2: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic;
  signal sync_delay_q_net_x0: std_logic;

begin
  single_port_ram_data_out_net_x2 <= a;
  mux_y_net_x3 <= b;
  ce_1_sg_x100 <= ce_1;
  clk_1_sg_x100 <= clk_1;
  slice_y_net_x0 <= shift;
  mux_y_net_x4 <= sync;
  a_bw <= concat_y_net_x2;
  a_bw_x0 <= concat_y_net_x3;
  of_x0 <= logical_y_net_x0;
  sync_out <= sync_delay_q_net_x0;

  cadd_2392e713d2: entity work.cadd_entity_517d36a131
    port map (
      a_im => delay1_q_net_x2,
      a_re => delay0_q_net_x2,
      b_im => mux1_y_net_x2,
      b_re => mux0_y_net_x2,
      ce_1 => ce_1_sg_x100,
      clk_1 => clk_1_sg_x100,
      c_im => cast_c_im_dout_net_x0,
      c_re => cast_c_re_dout_net_x0
    );

  convert_of0_d0083e437c: entity work.convert_of0_entity_269fb2de1a
    port map (
      ce_1 => ce_1_sg_x100,
      clk_1 => clk_1_sg_x100,
      din => mux0_y_net_x1,
      dout => adder_s_net_x3,
      of_x0 => and_y_net_x0
    );

  convert_of1_f07fd30aff: entity work.convert_of0_entity_269fb2de1a
    port map (
      ce_1 => ce_1_sg_x100,
      clk_1 => clk_1_sg_x100,
      din => mux1_y_net_x1,
      dout => adder_s_net_x4,
      of_x0 => and_y_net_x1
    );

  convert_of2_865850eeee: entity work.convert_of0_entity_269fb2de1a
    port map (
      ce_1 => ce_1_sg_x100,
      clk_1 => clk_1_sg_x100,
      din => mux2_y_net_x1,
      dout => adder_s_net_x5,
      of_x0 => and_y_net_x2
    );

  convert_of3_3590b7d17e: entity work.convert_of0_entity_269fb2de1a
    port map (
      ce_1 => ce_1_sg_x100,
      clk_1 => clk_1_sg_x100,
      din => mux3_y_net_x1,
      dout => adder_s_net_x6,
      of_x0 => and_y_net_x3
    );

  csub_66052e8c60: entity work.csub_entity_2ad7cf465d
    port map (
      a_im => delay1_q_net_x2,
      a_re => delay0_q_net_x2,
      b_im => mux1_y_net_x2,
      b_re => mux0_y_net_x2,
      ce_1 => ce_1_sg_x100,
      clk_1 => clk_1_sg_x100,
      c_im => cast_c_im_dout_net_x1,
      c_re => cast_c_re_dout_net_x1
    );

  logical: entity work.logical_a6d07705dd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => and_y_net_x0,
      d1(0) => and_y_net_x1,
      d2(0) => and_y_net_x2,
      d3(0) => and_y_net_x3,
      y(0) => logical_y_net_x0
    );

  mux0: entity work.mux_28159dbdb9
    port map (
      ce => ce_1_sg_x100,
      clk => clk_1_sg_x100,
      clr => '0',
      d0 => cast_c_re_dout_net_x0,
      d1 => scale0_op_net,
      sel(0) => shift_delay_q_net,
      y => mux0_y_net_x1
    );

  mux1: entity work.mux_28159dbdb9
    port map (
      ce => ce_1_sg_x100,
      clk => clk_1_sg_x100,
      clr => '0',
      d0 => cast_c_im_dout_net_x0,
      d1 => scale1_op_net,
      sel(0) => shift_delay_q_net,
      y => mux1_y_net_x1
    );

  mux2: entity work.mux_28159dbdb9
    port map (
      ce => ce_1_sg_x100,
      clk => clk_1_sg_x100,
      clr => '0',
      d0 => cast_c_re_dout_net_x1,
      d1 => scale2_op_net,
      sel(0) => shift_delay_q_net,
      y => mux2_y_net_x1
    );

  mux3: entity work.mux_28159dbdb9
    port map (
      ce => ce_1_sg_x100,
      clk => clk_1_sg_x100,
      clr => '0',
      d0 => cast_c_im_dout_net_x1,
      d1 => scale3_op_net,
      sel(0) => shift_delay_q_net,
      y => mux3_y_net_x1
    );

  ri_to_c01_b1086b0364: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => adder_s_net_x4,
      re => adder_s_net_x3,
      c => concat_y_net_x2
    );

  ri_to_c23_18629a866c: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => adder_s_net_x6,
      re => adder_s_net_x5,
      c => concat_y_net_x3
    );

  scale0: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x0,
      op => scale0_op_net
    );

  scale1: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x0,
      op => scale1_op_net
    );

  scale2: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x1,
      op => scale2_op_net
    );

  scale3: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x1,
      op => scale3_op_net
    );

  shift_delay: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x100,
      clk => clk_1_sg_x100,
      d(0) => slice_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => shift_delay_q_net
    );

  sync_delay: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x100,
      clk => clk_1_sg_x100,
      clr => '0',
      d(0) => delay8_q_net_x0,
      q(0) => sync_delay_q_net_x0
    );

  twiddle_stage_2_30c73c209f: entity work.twiddle_stage_2_entity_30c73c209f
    port map (
      a => single_port_ram_data_out_net_x2,
      b => mux_y_net_x3,
      ce_1 => ce_1_sg_x100,
      clk_1 => clk_1_sg_x100,
      sync => mux_y_net_x4,
      a_im => delay1_q_net_x2,
      a_re => delay0_q_net_x2,
      bw_im => mux1_y_net_x2,
      bw_re => mux0_y_net_x2,
      sync_out => delay8_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_2/delay_b"

entity delay_b_entity_654034e28e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    out1: out std_logic_vector(35 downto 0)
  );
end delay_b_entity_654034e28e;

architecture structural of delay_b_entity_654034e28e is
  signal ce_1_sg_x101: std_logic;
  signal clk_1_sg_x101: std_logic;
  signal constant2_op_net: std_logic;
  signal counter_op_net: std_logic_vector(4 downto 0);
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);
  signal single_port_ram_data_out_net_x3: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x101 <= ce_1;
  clk_1_sg_x101 <= clk_1;
  mux1_y_net_x0 <= in1;
  out1 <= single_port_ram_data_out_net_x3;

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  counter: entity work.xlcounter_limit_c09f12_01
    generic map (
      cnt_15_0 => 28,
      cnt_31_16 => 0,
      cnt_47_32 => 0,
      cnt_63_48 => 0,
      core_name0 => "cntr_11_0_f2301c6681846b15",
      count_limited => 1,
      op_arith => xlUnsigned,
      op_width => 5
    )
    port map (
      ce => ce_1_sg_x101,
      clk => clk_1_sg_x101,
      clr => '0',
      en => "1",
      rst => "0",
      op => counter_op_net
    );

  single_port_ram: entity work.xlspram_c09f12_01
    generic map (
      c_address_width => 5,
      c_width => 36,
      core_name0 => "bmg_72_a6ba22940df932c0",
      latency => 2
    )
    port map (
      addr => counter_op_net,
      ce => ce_1_sg_x101,
      clk => clk_1_sg_x101,
      data_in => mux1_y_net_x0,
      en => "1",
      rst => "0",
      we(0) => constant2_op_net,
      data_out => single_port_ram_data_out_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_2/sync_delay"

entity sync_delay_entity_2f938a0c67 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_2f938a0c67;

architecture structural of sync_delay_entity_2f938a0c67 is
  signal ce_1_sg_x103: std_logic;
  signal clk_1_sg_x103: std_logic;
  signal constant1_op_net: std_logic_vector(5 downto 0);
  signal constant2_op_net: std_logic_vector(5 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(5 downto 0);
  signal counter_op_net: std_logic_vector(5 downto 0);
  signal delay_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x5: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x103 <= ce_1;
  clk_1_sg_x103 <= clk_1;
  delay_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x5;

  constant1: entity work.constant_7ea0f2fff7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_961b61f8a1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_a267c870be
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_c0e9491a3fe88c1d",
      op_arith => xlUnsigned,
      op_width => 6
    )
    port map (
      ce => ce_1_sg_x103,
      clk => clk_1_sg_x103,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => delay_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x5
    );

  relational: entity work.relational_931d61fb72
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_fe487ce1c7
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_2"

entity fft_stage_2_entity_3adc821d91 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    of_in: in std_logic; 
    shift: in std_logic_vector(9 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_2_entity_3adc821d91;

architecture structural of fft_stage_2_entity_3adc821d91 is
  signal ce_1_sg_x104: std_logic;
  signal clk_1_sg_x104: std_logic;
  signal concat_y_net_x10: std_logic_vector(35 downto 0);
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concat_y_net_x7: std_logic_vector(35 downto 0);
  signal concat_y_net_x9: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(5 downto 0);
  signal delay_q_net_x0: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical1_y_net_x2: std_logic;
  signal logical_y_net_x0: std_logic;
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);
  signal mux_y_net_x3: std_logic_vector(35 downto 0);
  signal mux_y_net_x5: std_logic;
  signal single_port_ram_data_out_net_x0: std_logic_vector(35 downto 0);
  signal single_port_ram_data_out_net_x3: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic;
  signal slice6_y_net_x1: std_logic_vector(9 downto 0);
  signal slice_y_net_x0: std_logic;
  signal sync_delay_q_net_x2: std_logic;
  signal sync_delay_q_net_x3: std_logic;

begin
  ce_1_sg_x104 <= ce_1;
  clk_1_sg_x104 <= clk_1;
  concat_y_net_x7 <= in1;
  concat_y_net_x9 <= in2;
  logical1_y_net_x1 <= of_in;
  slice6_y_net_x1 <= shift;
  sync_delay_q_net_x2 <= sync;
  of_x0 <= logical1_y_net_x2;
  out1 <= concat_y_net_x10;
  out2 <= concat_y_net_x11;
  sync_out <= sync_delay_q_net_x3;

  butterfly_direct_57b07e077f: entity work.butterfly_direct_entity_57b07e077f
    port map (
      a => single_port_ram_data_out_net_x3,
      b => mux_y_net_x3,
      ce_1 => ce_1_sg_x104,
      clk_1 => clk_1_sg_x104,
      shift => slice_y_net_x0,
      sync => mux_y_net_x5,
      a_bw => concat_y_net_x10,
      a_bw_x0 => concat_y_net_x11,
      of_x0 => logical_y_net_x0,
      sync_out => sync_delay_q_net_x3
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_50ef766046ea9bf4",
      op_arith => xlUnsigned,
      op_width => 6
    )
    port map (
      ce => ce_1_sg_x104,
      clk => clk_1_sg_x104,
      clr => '0',
      en => "1",
      rst(0) => sync_delay_q_net_x2,
      op => counter_op_net
    );

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x104,
      clk => clk_1_sg_x104,
      d(0) => sync_delay_q_net_x2,
      en => '1',
      rst => '1',
      q(0) => delay_q_net_x0
    );

  delay_b_654034e28e: entity work.delay_b_entity_654034e28e
    port map (
      ce_1 => ce_1_sg_x104,
      clk_1 => clk_1_sg_x104,
      in1 => mux1_y_net_x0,
      out1 => single_port_ram_data_out_net_x3
    );

  delay_f_7dc8005c30: entity work.delay_b_entity_654034e28e
    port map (
      ce_1 => ce_1_sg_x104,
      clk_1 => clk_1_sg_x104,
      in1 => concat_y_net_x9,
      out1 => single_port_ram_data_out_net_x0
    );

  logical1: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x104,
      clk => clk_1_sg_x104,
      clr => '0',
      d0(0) => logical_y_net_x0,
      d1(0) => logical1_y_net_x1,
      y(0) => logical1_y_net_x2
    );

  mux: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x104,
      clk => clk_1_sg_x104,
      clr => '0',
      d0 => single_port_ram_data_out_net_x0,
      d1 => concat_y_net_x7,
      sel(0) => slice1_y_net,
      y => mux_y_net_x3
    );

  mux1: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x104,
      clk => clk_1_sg_x104,
      clr => '0',
      d0 => concat_y_net_x7,
      d1 => single_port_ram_data_out_net_x0,
      sel(0) => slice1_y_net,
      y => mux1_y_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 10,
      y_width => 1
    )
    port map (
      x => slice6_y_net_x1,
      y(0) => slice_y_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 5,
      x_width => 6,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_2f938a0c67: entity work.sync_delay_entity_2f938a0c67
    port map (
      ce_1 => ce_1_sg_x104,
      clk_1 => clk_1_sg_x104,
      in_x0 => delay_q_net_x0,
      out_x0 => mux_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_3/butterfly_direct/cadd"

entity cadd_entity_bd220e7516 is
  port (
    a_im: in std_logic_vector(17 downto 0); 
    a_re: in std_logic_vector(17 downto 0); 
    b_im: in std_logic_vector(21 downto 0); 
    b_re: in std_logic_vector(21 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    c_im: out std_logic_vector(22 downto 0); 
    c_re: out std_logic_vector(22 downto 0)
  );
end cadd_entity_bd220e7516;

architecture structural of cadd_entity_bd220e7516 is
  signal alumode_op_net: std_logic_vector(3 downto 0);
  signal carryin_op_net: std_logic;
  signal carryinsel_op_net: std_logic_vector(2 downto 0);
  signal cast_c_im_dout_net_x0: std_logic_vector(22 downto 0);
  signal cast_c_re_dout_net_x0: std_logic_vector(22 downto 0);
  signal ce_1_sg_x105: std_logic;
  signal clk_1_sg_x105: std_logic;
  signal concat_a_y_net: std_logic_vector(47 downto 0);
  signal concat_b_y_net: std_logic_vector(47 downto 0);
  signal convert0_dout_net_x0: std_logic_vector(21 downto 0);
  signal convert1_dout_net_x0: std_logic_vector(21 downto 0);
  signal dsp48e_p_net: std_logic_vector(47 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(17 downto 0);
  signal opmode_op_net: std_logic_vector(6 downto 0);
  signal realign_a_im_dout_net: std_logic_vector(23 downto 0);
  signal realign_a_re_dout_net: std_logic_vector(23 downto 0);
  signal realign_b_im_dout_net: std_logic_vector(23 downto 0);
  signal realign_b_re_dout_net: std_logic_vector(23 downto 0);
  signal reinterp_a_im_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_a_re_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_b_im_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_b_re_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_c_im_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_c_re_output_port_net: std_logic_vector(23 downto 0);
  signal reinterpret_a_output_port_net: std_logic_vector(29 downto 0);
  signal reinterpret_b_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret_c_output_port_net: std_logic_vector(47 downto 0);
  signal slice_a_y_net: std_logic_vector(29 downto 0);
  signal slice_b_y_net: std_logic_vector(17 downto 0);
  signal slice_c_im_y_net: std_logic_vector(23 downto 0);
  signal slice_c_re_y_net: std_logic_vector(23 downto 0);

begin
  force_im_output_port_net_x0 <= a_im;
  force_re_output_port_net_x0 <= a_re;
  convert1_dout_net_x0 <= b_im;
  convert0_dout_net_x0 <= b_re;
  ce_1_sg_x105 <= ce_1;
  clk_1_sg_x105 <= clk_1;
  c_im <= cast_c_im_dout_net_x0;
  c_re <= cast_c_re_dout_net_x0;

  alumode: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => alumode_op_net
    );

  carryin: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => carryin_op_net
    );

  carryinsel: entity work.constant_822933f89b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => carryinsel_op_net
    );

  cast_c_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 19,
      din_width => 24,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 23,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x105,
      clk => clk_1_sg_x105,
      clr => '0',
      din => reinterp_c_im_output_port_net,
      en => "1",
      dout => cast_c_im_dout_net_x0
    );

  cast_c_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 19,
      din_width => 24,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 23,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x105,
      clk => clk_1_sg_x105,
      clr => '0',
      din => reinterp_c_re_output_port_net,
      en => "1",
      dout => cast_c_re_dout_net_x0
    );

  concat_a: entity work.concat_b57c4be2de
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterp_a_re_output_port_net,
      in1 => reinterp_a_im_output_port_net,
      y => concat_a_y_net
    );

  concat_b: entity work.concat_b57c4be2de
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterp_b_re_output_port_net,
      in1 => reinterp_b_im_output_port_net,
      y => concat_b_y_net
    );

  dsp48e: entity work.xldsp48e
    generic map (
      a_input => "DIRECT",
      acascreg => 1,
      alumodereg => 1,
      areg => 1,
      autoreset_pattern_detect => FALSE,
      autoreset_pattern_detect_optinv => "MATCH",
      b_input => "DIRECT",
      bcascreg => 1,
      breg => 1,
      carryinreg => 1,
      carryinselreg => 1,
      carryout_width => 4,
      creg => 1,
      mreg => 1,
      opmodereg => 1,
      preg => 1,
      sel_mask => "MASK",
      sel_pattern => "PATTERN",
      use_c_port => 1,
      use_mult => "MULT_S",
      use_op => 0,
      use_pattern_detect => "NO_PATDET",
      use_simd => "TWO24"
    )
    port map (
      a => reinterpret_a_output_port_net,
      alumode => alumode_op_net,
      b => reinterpret_b_output_port_net,
      c => reinterpret_c_output_port_net,
      carryin(0) => carryin_op_net,
      carryinsel => carryinsel_op_net,
      ce => ce_1_sg_x105,
      cea1 => "1",
      cea2 => "1",
      cealumode => "1",
      ceb1 => "1",
      ceb2 => "1",
      cec => "1",
      cecarryin => "1",
      cectrl => "1",
      cem => "1",
      cemultcarryin => "1",
      cep => "1",
      clk => clk_1_sg_x105,
      en => "1",
      opmode => opmode_op_net,
      rst => "0",
      rsta => "0",
      rstalumode => "0",
      rstb => "0",
      rstc => "0",
      rstcarryin => "0",
      rstctrl => "0",
      rstm => "0",
      rstp => "0",
      p => dsp48e_p_net
    );

  opmode: entity work.constant_270746ab47
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => opmode_op_net
    );

  realign_a_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x105,
      clk => clk_1_sg_x105,
      clr => '0',
      din => force_im_output_port_net_x0,
      en => "1",
      dout => realign_a_im_dout_net
    );

  realign_a_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x105,
      clk => clk_1_sg_x105,
      clr => '0',
      din => force_re_output_port_net_x0,
      en => "1",
      dout => realign_a_re_dout_net
    );

  realign_b_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 19,
      din_width => 22,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x105,
      clk => clk_1_sg_x105,
      clr => '0',
      din => convert1_dout_net_x0,
      en => "1",
      dout => realign_b_im_dout_net
    );

  realign_b_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 19,
      din_width => 22,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x105,
      clk => clk_1_sg_x105,
      clr => '0',
      din => convert0_dout_net_x0,
      en => "1",
      dout => realign_b_re_dout_net
    );

  reinterp_a_im: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_a_im_dout_net,
      output_port => reinterp_a_im_output_port_net
    );

  reinterp_a_re: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_a_re_dout_net,
      output_port => reinterp_a_re_output_port_net
    );

  reinterp_b_im: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_b_im_dout_net,
      output_port => reinterp_b_im_output_port_net
    );

  reinterp_b_re: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_b_re_dout_net,
      output_port => reinterp_b_re_output_port_net
    );

  reinterp_c_im: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_c_im_y_net,
      output_port => reinterp_c_im_output_port_net
    );

  reinterp_c_re: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_c_re_y_net,
      output_port => reinterp_c_re_output_port_net
    );

  reinterpret_a: entity work.reinterpret_eb03bc3377
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_a_y_net,
      output_port => reinterpret_a_output_port_net
    );

  reinterpret_b: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_b_y_net,
      output_port => reinterpret_b_output_port_net
    );

  reinterpret_c: entity work.reinterpret_7ea107432a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_a_y_net,
      output_port => reinterpret_c_output_port_net
    );

  slice_a: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 47,
      x_width => 48,
      y_width => 30
    )
    port map (
      x => concat_b_y_net,
      y => slice_a_y_net
    );

  slice_b: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 48,
      y_width => 18
    )
    port map (
      x => concat_b_y_net,
      y => slice_b_y_net
    );

  slice_c_im: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 23,
      x_width => 48,
      y_width => 24
    )
    port map (
      x => dsp48e_p_net,
      y => slice_c_im_y_net
    );

  slice_c_re: entity work.xlslice
    generic map (
      new_lsb => 24,
      new_msb => 47,
      x_width => 48,
      y_width => 24
    )
    port map (
      x => dsp48e_p_net,
      y => slice_c_re_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_3/butterfly_direct/convert_of0/convert"

entity convert_entity_e184aba7ce is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(23 downto 0); 
    out_x0: out std_logic_vector(17 downto 0)
  );
end convert_entity_e184aba7ce;

architecture structural of convert_entity_e184aba7ce is
  signal adder_s_net_x0: std_logic_vector(17 downto 0);
  signal almost_half_op_net: std_logic_vector(20 downto 0);
  signal bit_y_net: std_logic;
  signal ce_1_sg_x106: std_logic;
  signal clk_1_sg_x106: std_logic;
  signal concat_y_net: std_logic_vector(24 downto 0);
  signal constant_op_net: std_logic;
  signal force1_output_port_net: std_logic_vector(24 downto 0);
  signal force2_output_port_net: std_logic_vector(20 downto 0);
  signal mux0_y_net_x0: std_logic_vector(23 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(23 downto 0);
  signal tweak_op_y_net: std_logic;

begin
  ce_1_sg_x106 <= ce_1;
  clk_1_sg_x106 <= clk_1;
  mux0_y_net_x0 <= in_x0;
  out_x0 <= adder_s_net_x0;

  adder: entity work.addsub_580a0b011a
    port map (
      a => force1_output_port_net,
      b => force2_output_port_net,
      ce => ce_1_sg_x106,
      clk => clk_1_sg_x106,
      clr => '0',
      s => adder_s_net_x0
    );

  almost_half: entity work.constant_9a2c97cce5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => almost_half_op_net
    );

  bit: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 24,
      y_width => 1
    )
    port map (
      x => mux0_y_net_x0,
      y(0) => bit_y_net
    );

  concat: entity work.concat_f133931c1f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret_output_port_net,
      in1(0) => tweak_op_y_net,
      y => concat_y_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  force1: entity work.reinterpret_60ea556961
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net,
      output_port => force1_output_port_net
    );

  force2: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => almost_half_op_net,
      output_port => force2_output_port_net
    );

  reinterpret: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux0_y_net_x0,
      output_port => reinterpret_output_port_net
    );

  tweak_op: entity work.logical_938d99ac11
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => bit_y_net,
      d1(0) => constant_op_net,
      y(0) => tweak_op_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_3/butterfly_direct/convert_of0"

entity convert_of0_entity_6501bdd0bd is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(23 downto 0); 
    dout: out std_logic_vector(17 downto 0); 
    of_x0: out std_logic
  );
end convert_of0_entity_6501bdd0bd;

architecture structural of convert_of0_entity_6501bdd0bd is
  signal adder_s_net_x1: std_logic_vector(17 downto 0);
  signal all_0s_y_net: std_logic;
  signal all_1s_y_net: std_logic;
  signal and_y_net_x0: std_logic;
  signal ce_1_sg_x107: std_logic;
  signal clk_1_sg_x107: std_logic;
  signal invert1_op_net: std_logic;
  signal invert2_op_net: std_logic;
  signal invert3_op_net: std_logic;
  signal invert4_op_net: std_logic;
  signal mux0_y_net_x1: std_logic_vector(23 downto 0);
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic;
  signal slice3_y_net: std_logic;
  signal slice4_y_net: std_logic;

begin
  ce_1_sg_x107 <= ce_1;
  clk_1_sg_x107 <= clk_1;
  mux0_y_net_x1 <= din;
  dout <= adder_s_net_x1;
  of_x0 <= and_y_net_x0;

  all_0s: entity work.logical_f5b5b4645f
    port map (
      ce => ce_1_sg_x107,
      clk => clk_1_sg_x107,
      clr => '0',
      d0(0) => invert1_op_net,
      d1(0) => invert2_op_net,
      d2(0) => invert3_op_net,
      d3(0) => invert4_op_net,
      y(0) => all_0s_y_net
    );

  all_1s: entity work.logical_f5b5b4645f
    port map (
      ce => ce_1_sg_x107,
      clk => clk_1_sg_x107,
      clr => '0',
      d0(0) => slice1_y_net,
      d1(0) => slice2_y_net,
      d2(0) => slice3_y_net,
      d3(0) => slice4_y_net,
      y(0) => all_1s_y_net
    );

  and_x0: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => all_0s_y_net,
      d1(0) => all_1s_y_net,
      y(0) => and_y_net_x0
    );

  convert_e184aba7ce: entity work.convert_entity_e184aba7ce
    port map (
      ce_1 => ce_1_sg_x107,
      clk_1 => clk_1_sg_x107,
      in_x0 => mux0_y_net_x1,
      out_x0 => adder_s_net_x1
    );

  invert1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x107,
      clk => clk_1_sg_x107,
      clr => '0',
      ip(0) => slice1_y_net,
      op(0) => invert1_op_net
    );

  invert2: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x107,
      clk => clk_1_sg_x107,
      clr => '0',
      ip(0) => slice2_y_net,
      op(0) => invert2_op_net
    );

  invert3: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x107,
      clk => clk_1_sg_x107,
      clr => '0',
      ip(0) => slice3_y_net,
      op(0) => invert3_op_net
    );

  invert4: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x107,
      clk => clk_1_sg_x107,
      clr => '0',
      ip(0) => slice4_y_net,
      op(0) => invert4_op_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 23,
      new_msb => 23,
      x_width => 24,
      y_width => 1
    )
    port map (
      x => mux0_y_net_x1,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 22,
      new_msb => 22,
      x_width => 24,
      y_width => 1
    )
    port map (
      x => mux0_y_net_x1,
      y(0) => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 21,
      new_msb => 21,
      x_width => 24,
      y_width => 1
    )
    port map (
      x => mux0_y_net_x1,
      y(0) => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 20,
      x_width => 24,
      y_width => 1
    )
    port map (
      x => mux0_y_net_x1,
      y(0) => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_3/butterfly_direct/csub"

entity csub_entity_394eae4754 is
  port (
    a_im: in std_logic_vector(17 downto 0); 
    a_re: in std_logic_vector(17 downto 0); 
    b_im: in std_logic_vector(21 downto 0); 
    b_re: in std_logic_vector(21 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    c_im: out std_logic_vector(22 downto 0); 
    c_re: out std_logic_vector(22 downto 0)
  );
end csub_entity_394eae4754;

architecture structural of csub_entity_394eae4754 is
  signal alumode_op_net: std_logic_vector(3 downto 0);
  signal carryin_op_net: std_logic;
  signal carryinsel_op_net: std_logic_vector(2 downto 0);
  signal cast_c_im_dout_net_x0: std_logic_vector(22 downto 0);
  signal cast_c_re_dout_net_x0: std_logic_vector(22 downto 0);
  signal ce_1_sg_x114: std_logic;
  signal clk_1_sg_x114: std_logic;
  signal concat_a_y_net: std_logic_vector(47 downto 0);
  signal concat_b_y_net: std_logic_vector(47 downto 0);
  signal convert0_dout_net_x1: std_logic_vector(21 downto 0);
  signal convert1_dout_net_x1: std_logic_vector(21 downto 0);
  signal dsp48e_p_net: std_logic_vector(47 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal opmode_op_net: std_logic_vector(6 downto 0);
  signal realign_a_im_dout_net: std_logic_vector(23 downto 0);
  signal realign_a_re_dout_net: std_logic_vector(23 downto 0);
  signal realign_b_im_dout_net: std_logic_vector(23 downto 0);
  signal realign_b_re_dout_net: std_logic_vector(23 downto 0);
  signal reinterp_a_im_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_a_re_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_b_im_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_b_re_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_c_im_output_port_net: std_logic_vector(23 downto 0);
  signal reinterp_c_re_output_port_net: std_logic_vector(23 downto 0);
  signal reinterpret_a_output_port_net: std_logic_vector(29 downto 0);
  signal reinterpret_b_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret_c_output_port_net: std_logic_vector(47 downto 0);
  signal slice_a_y_net: std_logic_vector(29 downto 0);
  signal slice_b_y_net: std_logic_vector(17 downto 0);
  signal slice_c_im_y_net: std_logic_vector(23 downto 0);
  signal slice_c_re_y_net: std_logic_vector(23 downto 0);

begin
  force_im_output_port_net_x1 <= a_im;
  force_re_output_port_net_x1 <= a_re;
  convert1_dout_net_x1 <= b_im;
  convert0_dout_net_x1 <= b_re;
  ce_1_sg_x114 <= ce_1;
  clk_1_sg_x114 <= clk_1;
  c_im <= cast_c_im_dout_net_x0;
  c_re <= cast_c_re_dout_net_x0;

  alumode: entity work.constant_8038205d89
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => alumode_op_net
    );

  carryin: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => carryin_op_net
    );

  carryinsel: entity work.constant_822933f89b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => carryinsel_op_net
    );

  cast_c_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 19,
      din_width => 24,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 23,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x114,
      clk => clk_1_sg_x114,
      clr => '0',
      din => reinterp_c_im_output_port_net,
      en => "1",
      dout => cast_c_im_dout_net_x0
    );

  cast_c_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 19,
      din_width => 24,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 23,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x114,
      clk => clk_1_sg_x114,
      clr => '0',
      din => reinterp_c_re_output_port_net,
      en => "1",
      dout => cast_c_re_dout_net_x0
    );

  concat_a: entity work.concat_b57c4be2de
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterp_a_re_output_port_net,
      in1 => reinterp_a_im_output_port_net,
      y => concat_a_y_net
    );

  concat_b: entity work.concat_b57c4be2de
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterp_b_re_output_port_net,
      in1 => reinterp_b_im_output_port_net,
      y => concat_b_y_net
    );

  dsp48e: entity work.xldsp48e
    generic map (
      a_input => "DIRECT",
      acascreg => 1,
      alumodereg => 1,
      areg => 1,
      autoreset_pattern_detect => FALSE,
      autoreset_pattern_detect_optinv => "MATCH",
      b_input => "DIRECT",
      bcascreg => 1,
      breg => 1,
      carryinreg => 1,
      carryinselreg => 1,
      carryout_width => 4,
      creg => 1,
      mreg => 1,
      opmodereg => 1,
      preg => 1,
      sel_mask => "MASK",
      sel_pattern => "PATTERN",
      use_c_port => 1,
      use_mult => "MULT_S",
      use_op => 0,
      use_pattern_detect => "NO_PATDET",
      use_simd => "TWO24"
    )
    port map (
      a => reinterpret_a_output_port_net,
      alumode => alumode_op_net,
      b => reinterpret_b_output_port_net,
      c => reinterpret_c_output_port_net,
      carryin(0) => carryin_op_net,
      carryinsel => carryinsel_op_net,
      ce => ce_1_sg_x114,
      cea1 => "1",
      cea2 => "1",
      cealumode => "1",
      ceb1 => "1",
      ceb2 => "1",
      cec => "1",
      cecarryin => "1",
      cectrl => "1",
      cem => "1",
      cemultcarryin => "1",
      cep => "1",
      clk => clk_1_sg_x114,
      en => "1",
      opmode => opmode_op_net,
      rst => "0",
      rsta => "0",
      rstalumode => "0",
      rstb => "0",
      rstc => "0",
      rstcarryin => "0",
      rstctrl => "0",
      rstm => "0",
      rstp => "0",
      p => dsp48e_p_net
    );

  opmode: entity work.constant_270746ab47
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => opmode_op_net
    );

  realign_a_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x114,
      clk => clk_1_sg_x114,
      clr => '0',
      din => force_im_output_port_net_x1,
      en => "1",
      dout => realign_a_im_dout_net
    );

  realign_a_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x114,
      clk => clk_1_sg_x114,
      clr => '0',
      din => force_re_output_port_net_x1,
      en => "1",
      dout => realign_a_re_dout_net
    );

  realign_b_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 19,
      din_width => 22,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x114,
      clk => clk_1_sg_x114,
      clr => '0',
      din => convert1_dout_net_x1,
      en => "1",
      dout => realign_b_im_dout_net
    );

  realign_b_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 19,
      din_width => 22,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 24,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x114,
      clk => clk_1_sg_x114,
      clr => '0',
      din => convert0_dout_net_x1,
      en => "1",
      dout => realign_b_re_dout_net
    );

  reinterp_a_im: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_a_im_dout_net,
      output_port => reinterp_a_im_output_port_net
    );

  reinterp_a_re: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_a_re_dout_net,
      output_port => reinterp_a_re_output_port_net
    );

  reinterp_b_im: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_b_im_dout_net,
      output_port => reinterp_b_im_output_port_net
    );

  reinterp_b_re: entity work.reinterpret_3fb4604c01
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => realign_b_re_dout_net,
      output_port => reinterp_b_re_output_port_net
    );

  reinterp_c_im: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_c_im_y_net,
      output_port => reinterp_c_im_output_port_net
    );

  reinterp_c_re: entity work.reinterpret_4bf1ad328a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_c_re_y_net,
      output_port => reinterp_c_re_output_port_net
    );

  reinterpret_a: entity work.reinterpret_eb03bc3377
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_a_y_net,
      output_port => reinterpret_a_output_port_net
    );

  reinterpret_b: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_b_y_net,
      output_port => reinterpret_b_output_port_net
    );

  reinterpret_c: entity work.reinterpret_7ea107432a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_a_y_net,
      output_port => reinterpret_c_output_port_net
    );

  slice_a: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 47,
      x_width => 48,
      y_width => 30
    )
    port map (
      x => concat_b_y_net,
      y => slice_a_y_net
    );

  slice_b: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 48,
      y_width => 18
    )
    port map (
      x => concat_b_y_net,
      y => slice_b_y_net
    );

  slice_c_im: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 23,
      x_width => 48,
      y_width => 24
    )
    port map (
      x => dsp48e_p_net,
      y => slice_c_im_y_net
    );

  slice_c_re: entity work.xlslice
    generic map (
      new_lsb => 24,
      new_msb => 47,
      x_width => 48,
      y_width => 24
    )
    port map (
      x => dsp48e_p_net,
      y => slice_c_re_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_3/butterfly_direct/twiddle_general_4mult/c_to_ri2"

entity c_to_ri2_entity_e1b86f6b2f is
  port (
    c: in std_logic_vector(35 downto 0); 
    im: out std_logic_vector(17 downto 0); 
    re: out std_logic_vector(17 downto 0)
  );
end c_to_ri2_entity_e1b86f6b2f;

architecture structural of c_to_ri2_entity_e1b86f6b2f is
  signal concat_y_net_x0: std_logic_vector(35 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(17 downto 0);
  signal slice_im_y_net: std_logic_vector(17 downto 0);
  signal slice_re_y_net: std_logic_vector(17 downto 0);

begin
  concat_y_net_x0 <= c;
  im <= force_im_output_port_net_x0;
  re <= force_re_output_port_net_x0;

  force_im: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_im_y_net,
      output_port => force_im_output_port_net_x0
    );

  force_re: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_re_y_net,
      output_port => force_re_output_port_net_x0
    );

  slice_im: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => concat_y_net_x0,
      y => slice_im_y_net
    );

  slice_re: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 35,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => concat_y_net_x0,
      y => slice_re_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_3/butterfly_direct/twiddle_general_4mult/coeff_gen/ri_to_c"

entity ri_to_c_entity_2abbfa7cd7 is
  port (
    im: in std_logic_vector(17 downto 0); 
    re: in std_logic_vector(17 downto 0); 
    c: out std_logic_vector(35 downto 0)
  );
end ri_to_c_entity_2abbfa7cd7;

architecture structural of ri_to_c_entity_2abbfa7cd7 is
  signal concat_y_net_x1: std_logic_vector(35 downto 0);
  signal force_im_output_port_net: std_logic_vector(17 downto 0);
  signal force_re_output_port_net: std_logic_vector(17 downto 0);
  signal rom1_data_net_x0: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(17 downto 0);

begin
  rom1_data_net_x0 <= im;
  rom_data_net_x0 <= re;
  c <= concat_y_net_x1;

  concat: entity work.concat_b198bd62b0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => force_re_output_port_net,
      in1 => force_im_output_port_net,
      y => concat_y_net_x1
    );

  force_im: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net_x0,
      output_port => force_im_output_port_net
    );

  force_re: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom_data_net_x0,
      output_port => force_re_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_3/butterfly_direct/twiddle_general_4mult/coeff_gen"

entity coeff_gen_entity_1e1eba0bd0 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    rst: in std_logic; 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_1e1eba0bd0;

architecture structural of coeff_gen_entity_1e1eba0bd0 is
  signal ce_1_sg_x115: std_logic;
  signal clk_1_sg_x115: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(5 downto 0);
  signal mux_y_net_x0: std_logic;
  signal rom1_data_net_x0: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(17 downto 0);
  signal slice_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x115 <= ce_1;
  clk_1_sg_x115 <= clk_1;
  mux_y_net_x0 <= rst;
  w <= concat_y_net_x2;

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_50ef766046ea9bf4",
      op_arith => xlUnsigned,
      op_width => 6
    )
    port map (
      ce => ce_1_sg_x115,
      clk => clk_1_sg_x115,
      clr => '0',
      en => "1",
      rst(0) => mux_y_net_x0,
      op => counter_op_net
    );

  ri_to_c_2abbfa7cd7: entity work.ri_to_c_entity_2abbfa7cd7
    port map (
      im => rom1_data_net_x0,
      re => rom_data_net_x0,
      c => concat_y_net_x2
    );

  rom: entity work.xlsprom_dist_c09f12_01
    generic map (
      addr_width => 2,
      c_address_width => 4,
      c_width => 18,
      core_name0 => "dmg_72_31a1909e3929c7f7",
      latency => 3
    )
    port map (
      addr => slice_y_net,
      ce => ce_1_sg_x115,
      clk => clk_1_sg_x115,
      en => "1",
      data => rom_data_net_x0
    );

  rom1: entity work.xlsprom_dist_c09f12_01
    generic map (
      addr_width => 2,
      c_address_width => 4,
      c_width => 18,
      core_name0 => "dmg_72_c09662d4202cd49a",
      latency => 3
    )
    port map (
      addr => slice_y_net,
      ce => ce_1_sg_x115,
      clk => clk_1_sg_x115,
      en => "1",
      data => rom1_data_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 5,
      x_width => 6,
      y_width => 2
    )
    port map (
      x => counter_op_net,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_3/butterfly_direct/twiddle_general_4mult"

entity twiddle_general_4mult_entity_fb04e7b04a is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync: in std_logic; 
    a_im: out std_logic_vector(17 downto 0); 
    a_re: out std_logic_vector(17 downto 0); 
    bw_im: out std_logic_vector(21 downto 0); 
    bw_re: out std_logic_vector(21 downto 0); 
    sync_out: out std_logic
  );
end twiddle_general_4mult_entity_fb04e7b04a;

architecture structural of twiddle_general_4mult_entity_fb04e7b04a is
  signal addsub1_s_net: std_logic_vector(36 downto 0);
  signal addsub_s_net: std_logic_vector(36 downto 0);
  signal ce_1_sg_x116: std_logic;
  signal clk_1_sg_x116: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal convert0_dout_net_x2: std_logic_vector(21 downto 0);
  signal convert1_dout_net_x2: std_logic_vector(21 downto 0);
  signal delay0_q_net_x0: std_logic_vector(35 downto 0);
  signal delay1_q_net_x0: std_logic_vector(35 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal force_im_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal mult1_p_net: std_logic_vector(35 downto 0);
  signal mult2_p_net: std_logic_vector(35 downto 0);
  signal mult3_p_net: std_logic_vector(35 downto 0);
  signal mult_p_net: std_logic_vector(35 downto 0);
  signal mux_y_net_x1: std_logic_vector(35 downto 0);
  signal mux_y_net_x2: std_logic;
  signal single_port_ram_data_out_net_x0: std_logic_vector(35 downto 0);

begin
  single_port_ram_data_out_net_x0 <= a;
  mux_y_net_x1 <= b;
  ce_1_sg_x116 <= ce_1;
  clk_1_sg_x116 <= clk_1;
  mux_y_net_x2 <= sync;
  a_im <= force_im_output_port_net_x3;
  a_re <= force_re_output_port_net_x3;
  bw_im <= convert1_dout_net_x2;
  bw_re <= convert0_dout_net_x2;
  sync_out <= delay2_q_net_x0;

  addsub: entity work.addsub_be8c56327e
    port map (
      a => mult_p_net,
      b => mult2_p_net,
      ce => ce_1_sg_x116,
      clk => clk_1_sg_x116,
      clr => '0',
      s => addsub_s_net
    );

  addsub1: entity work.addsub_eb2273ac28
    port map (
      a => mult1_p_net,
      b => mult3_p_net,
      ce => ce_1_sg_x116,
      clk => clk_1_sg_x116,
      clr => '0',
      s => addsub1_s_net
    );

  c_to_ri1_0fef39ce60: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay0_q_net_x0,
      im => force_im_output_port_net_x3,
      re => force_re_output_port_net_x3
    );

  c_to_ri2_e1b86f6b2f: entity work.c_to_ri2_entity_e1b86f6b2f
    port map (
      c => concat_y_net_x2,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  c_to_ri3_e88e2bdb99: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay1_q_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  coeff_gen_1e1eba0bd0: entity work.coeff_gen_entity_1e1eba0bd0
    port map (
      ce_1 => ce_1_sg_x116,
      clk_1 => clk_1_sg_x116,
      rst => mux_y_net_x2,
      w => concat_y_net_x2
    );

  convert0: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 33,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 22,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x116,
      clk => clk_1_sg_x116,
      clr => '0',
      din => addsub_s_net,
      en => "1",
      dout => convert0_dout_net_x2
    );

  convert1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 33,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 22,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x116,
      clk => clk_1_sg_x116,
      clr => '0',
      din => addsub1_s_net,
      en => "1",
      dout => convert1_dout_net_x2
    );

  delay0: entity work.xldelay
    generic map (
      latency => 10,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x116,
      clk => clk_1_sg_x116,
      d => single_port_ram_data_out_net_x0,
      en => '1',
      rst => '1',
      q => delay0_q_net_x0
    );

  delay1: entity work.delay_4b00a70dea
    port map (
      ce => ce_1_sg_x116,
      clk => clk_1_sg_x116,
      clr => '0',
      d => mux_y_net_x1,
      q => delay1_q_net_x0
    );

  delay2: entity work.xldelay
    generic map (
      latency => 10,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x116,
      clk => clk_1_sg_x116,
      d(0) => mux_y_net_x2,
      en => '1',
      rst => '1',
      q(0) => delay2_q_net_x0
    );

  mult: entity work.mult_cfc8c45902
    port map (
      a => force_re_output_port_net_x1,
      b => force_re_output_port_net_x0,
      ce => ce_1_sg_x116,
      clk => clk_1_sg_x116,
      clr => '0',
      p => mult_p_net
    );

  mult1: entity work.mult_cfc8c45902
    port map (
      a => force_im_output_port_net_x1,
      b => force_re_output_port_net_x0,
      ce => ce_1_sg_x116,
      clk => clk_1_sg_x116,
      clr => '0',
      p => mult1_p_net
    );

  mult2: entity work.mult_cfc8c45902
    port map (
      a => force_im_output_port_net_x1,
      b => force_im_output_port_net_x0,
      ce => ce_1_sg_x116,
      clk => clk_1_sg_x116,
      clr => '0',
      p => mult2_p_net
    );

  mult3: entity work.mult_cfc8c45902
    port map (
      a => force_re_output_port_net_x1,
      b => force_im_output_port_net_x0,
      ce => ce_1_sg_x116,
      clk => clk_1_sg_x116,
      clr => '0',
      p => mult3_p_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_3/butterfly_direct"

entity butterfly_direct_entity_5c830c1bfc is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    a_bw_x0: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly_direct_entity_5c830c1bfc;

architecture structural of butterfly_direct_entity_5c830c1bfc is
  signal adder_s_net_x3: std_logic_vector(17 downto 0);
  signal adder_s_net_x4: std_logic_vector(17 downto 0);
  signal adder_s_net_x5: std_logic_vector(17 downto 0);
  signal adder_s_net_x6: std_logic_vector(17 downto 0);
  signal and_y_net_x0: std_logic;
  signal and_y_net_x1: std_logic;
  signal and_y_net_x2: std_logic;
  signal and_y_net_x3: std_logic;
  signal cast_c_im_dout_net_x0: std_logic_vector(22 downto 0);
  signal cast_c_im_dout_net_x1: std_logic_vector(22 downto 0);
  signal cast_c_re_dout_net_x0: std_logic_vector(22 downto 0);
  signal cast_c_re_dout_net_x1: std_logic_vector(22 downto 0);
  signal ce_1_sg_x117: std_logic;
  signal clk_1_sg_x117: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal concat_y_net_x3: std_logic_vector(35 downto 0);
  signal convert0_dout_net_x2: std_logic_vector(21 downto 0);
  signal convert1_dout_net_x2: std_logic_vector(21 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal logical_y_net_x0: std_logic;
  signal mux0_y_net_x1: std_logic_vector(23 downto 0);
  signal mux1_y_net_x1: std_logic_vector(23 downto 0);
  signal mux2_y_net_x1: std_logic_vector(23 downto 0);
  signal mux3_y_net_x1: std_logic_vector(23 downto 0);
  signal mux_y_net_x3: std_logic_vector(35 downto 0);
  signal mux_y_net_x4: std_logic;
  signal scale0_op_net: std_logic_vector(22 downto 0);
  signal scale1_op_net: std_logic_vector(22 downto 0);
  signal scale2_op_net: std_logic_vector(22 downto 0);
  signal scale3_op_net: std_logic_vector(22 downto 0);
  signal shift_delay_q_net: std_logic;
  signal single_port_ram_data_out_net_x1: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic;
  signal sync_delay_q_net_x0: std_logic;

begin
  single_port_ram_data_out_net_x1 <= a;
  mux_y_net_x3 <= b;
  ce_1_sg_x117 <= ce_1;
  clk_1_sg_x117 <= clk_1;
  slice_y_net_x0 <= shift;
  mux_y_net_x4 <= sync;
  a_bw <= concat_y_net_x2;
  a_bw_x0 <= concat_y_net_x3;
  of_x0 <= logical_y_net_x0;
  sync_out <= sync_delay_q_net_x0;

  cadd_bd220e7516: entity work.cadd_entity_bd220e7516
    port map (
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      b_im => convert1_dout_net_x2,
      b_re => convert0_dout_net_x2,
      ce_1 => ce_1_sg_x117,
      clk_1 => clk_1_sg_x117,
      c_im => cast_c_im_dout_net_x0,
      c_re => cast_c_re_dout_net_x0
    );

  convert_of0_6501bdd0bd: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x117,
      clk_1 => clk_1_sg_x117,
      din => mux0_y_net_x1,
      dout => adder_s_net_x3,
      of_x0 => and_y_net_x0
    );

  convert_of1_5245e20218: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x117,
      clk_1 => clk_1_sg_x117,
      din => mux1_y_net_x1,
      dout => adder_s_net_x4,
      of_x0 => and_y_net_x1
    );

  convert_of2_f22dbdeeea: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x117,
      clk_1 => clk_1_sg_x117,
      din => mux2_y_net_x1,
      dout => adder_s_net_x5,
      of_x0 => and_y_net_x2
    );

  convert_of3_6dbdc3a10e: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x117,
      clk_1 => clk_1_sg_x117,
      din => mux3_y_net_x1,
      dout => adder_s_net_x6,
      of_x0 => and_y_net_x3
    );

  csub_394eae4754: entity work.csub_entity_394eae4754
    port map (
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      b_im => convert1_dout_net_x2,
      b_re => convert0_dout_net_x2,
      ce_1 => ce_1_sg_x117,
      clk_1 => clk_1_sg_x117,
      c_im => cast_c_im_dout_net_x1,
      c_re => cast_c_re_dout_net_x1
    );

  logical: entity work.logical_a6d07705dd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => and_y_net_x0,
      d1(0) => and_y_net_x1,
      d2(0) => and_y_net_x2,
      d3(0) => and_y_net_x3,
      y(0) => logical_y_net_x0
    );

  mux0: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x117,
      clk => clk_1_sg_x117,
      clr => '0',
      d0 => cast_c_re_dout_net_x0,
      d1 => scale0_op_net,
      sel(0) => shift_delay_q_net,
      y => mux0_y_net_x1
    );

  mux1: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x117,
      clk => clk_1_sg_x117,
      clr => '0',
      d0 => cast_c_im_dout_net_x0,
      d1 => scale1_op_net,
      sel(0) => shift_delay_q_net,
      y => mux1_y_net_x1
    );

  mux2: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x117,
      clk => clk_1_sg_x117,
      clr => '0',
      d0 => cast_c_re_dout_net_x1,
      d1 => scale2_op_net,
      sel(0) => shift_delay_q_net,
      y => mux2_y_net_x1
    );

  mux3: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x117,
      clk => clk_1_sg_x117,
      clr => '0',
      d0 => cast_c_im_dout_net_x1,
      d1 => scale3_op_net,
      sel(0) => shift_delay_q_net,
      y => mux3_y_net_x1
    );

  ri_to_c01_50f4b01b45: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => adder_s_net_x4,
      re => adder_s_net_x3,
      c => concat_y_net_x2
    );

  ri_to_c23_9ee35f7cee: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => adder_s_net_x6,
      re => adder_s_net_x5,
      c => concat_y_net_x3
    );

  scale0: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x0,
      op => scale0_op_net
    );

  scale1: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x0,
      op => scale1_op_net
    );

  scale2: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x1,
      op => scale2_op_net
    );

  scale3: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x1,
      op => scale3_op_net
    );

  shift_delay: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x117,
      clk => clk_1_sg_x117,
      d(0) => slice_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => shift_delay_q_net
    );

  sync_delay: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x117,
      clk => clk_1_sg_x117,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => sync_delay_q_net_x0
    );

  twiddle_general_4mult_fb04e7b04a: entity work.twiddle_general_4mult_entity_fb04e7b04a
    port map (
      a => single_port_ram_data_out_net_x1,
      b => mux_y_net_x3,
      ce_1 => ce_1_sg_x117,
      clk_1 => clk_1_sg_x117,
      sync => mux_y_net_x4,
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      bw_im => convert1_dout_net_x2,
      bw_re => convert0_dout_net_x2,
      sync_out => delay2_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_3/delay_b"

entity delay_b_entity_5b814e1315 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    out1: out std_logic_vector(35 downto 0)
  );
end delay_b_entity_5b814e1315;

architecture structural of delay_b_entity_5b814e1315 is
  signal ce_1_sg_x118: std_logic;
  signal clk_1_sg_x118: std_logic;
  signal constant2_op_net: std_logic;
  signal counter_op_net: std_logic_vector(3 downto 0);
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);
  signal single_port_ram_data_out_net_x2: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x118 <= ce_1;
  clk_1_sg_x118 <= clk_1;
  mux1_y_net_x0 <= in1;
  out1 <= single_port_ram_data_out_net_x2;

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  counter: entity work.xlcounter_limit_c09f12_01
    generic map (
      cnt_15_0 => 12,
      cnt_31_16 => 0,
      cnt_47_32 => 0,
      cnt_63_48 => 0,
      core_name0 => "cntr_11_0_77d9d8bb324abfb9",
      count_limited => 1,
      op_arith => xlUnsigned,
      op_width => 4
    )
    port map (
      ce => ce_1_sg_x118,
      clk => clk_1_sg_x118,
      clr => '0',
      en => "1",
      rst => "0",
      op => counter_op_net
    );

  single_port_ram: entity work.xlspram_c09f12_01
    generic map (
      c_address_width => 4,
      c_width => 36,
      core_name0 => "bmg_72_3de7891ec729adb4",
      latency => 2
    )
    port map (
      addr => counter_op_net,
      ce => ce_1_sg_x118,
      clk => clk_1_sg_x118,
      data_in => mux1_y_net_x0,
      en => "1",
      rst => "0",
      we(0) => constant2_op_net,
      data_out => single_port_ram_data_out_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_3/sync_delay"

entity sync_delay_entity_a196797bd2 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_a196797bd2;

architecture structural of sync_delay_entity_a196797bd2 is
  signal ce_1_sg_x120: std_logic;
  signal clk_1_sg_x120: std_logic;
  signal constant1_op_net: std_logic_vector(4 downto 0);
  signal constant2_op_net: std_logic_vector(4 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(4 downto 0);
  signal counter_op_net: std_logic_vector(4 downto 0);
  signal delay_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x5: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x120 <= ce_1;
  clk_1_sg_x120 <= clk_1;
  delay_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x5;

  constant1: entity work.constant_fe72737ca0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_ef0e2e5fc6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_582a3706dd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_10284ba20859264d",
      op_arith => xlUnsigned,
      op_width => 5
    )
    port map (
      ce => ce_1_sg_x120,
      clk => clk_1_sg_x120,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => delay_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x5
    );

  relational: entity work.relational_9ece3c8c4e
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_dc5bc996c9
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_3"

entity fft_stage_3_entity_aa15e84fae is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    of_in: in std_logic; 
    shift: in std_logic_vector(9 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_3_entity_aa15e84fae;

architecture structural of fft_stage_3_entity_aa15e84fae is
  signal ce_1_sg_x121: std_logic;
  signal clk_1_sg_x121: std_logic;
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concat_y_net_x13: std_logic_vector(35 downto 0);
  signal concat_y_net_x14: std_logic_vector(35 downto 0);
  signal concat_y_net_x4: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(4 downto 0);
  signal delay_q_net_x0: std_logic;
  signal logical1_y_net_x0: std_logic;
  signal logical1_y_net_x3: std_logic;
  signal logical_y_net_x0: std_logic;
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);
  signal mux_y_net_x3: std_logic_vector(35 downto 0);
  signal mux_y_net_x5: std_logic;
  signal single_port_ram_data_out_net_x0: std_logic_vector(35 downto 0);
  signal single_port_ram_data_out_net_x2: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic;
  signal slice6_y_net_x2: std_logic_vector(9 downto 0);
  signal slice_y_net_x0: std_logic;
  signal sync_delay_q_net_x4: std_logic;
  signal sync_delay_q_net_x5: std_logic;

begin
  ce_1_sg_x121 <= ce_1;
  clk_1_sg_x121 <= clk_1;
  concat_y_net_x11 <= in1;
  concat_y_net_x13 <= in2;
  logical1_y_net_x3 <= of_in;
  slice6_y_net_x2 <= shift;
  sync_delay_q_net_x4 <= sync;
  of_x0 <= logical1_y_net_x0;
  out1 <= concat_y_net_x4;
  out2 <= concat_y_net_x14;
  sync_out <= sync_delay_q_net_x5;

  butterfly_direct_5c830c1bfc: entity work.butterfly_direct_entity_5c830c1bfc
    port map (
      a => single_port_ram_data_out_net_x2,
      b => mux_y_net_x3,
      ce_1 => ce_1_sg_x121,
      clk_1 => clk_1_sg_x121,
      shift => slice_y_net_x0,
      sync => mux_y_net_x5,
      a_bw => concat_y_net_x4,
      a_bw_x0 => concat_y_net_x14,
      of_x0 => logical_y_net_x0,
      sync_out => sync_delay_q_net_x5
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_f2301c6681846b15",
      op_arith => xlUnsigned,
      op_width => 5
    )
    port map (
      ce => ce_1_sg_x121,
      clk => clk_1_sg_x121,
      clr => '0',
      en => "1",
      rst(0) => sync_delay_q_net_x4,
      op => counter_op_net
    );

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x121,
      clk => clk_1_sg_x121,
      d(0) => sync_delay_q_net_x4,
      en => '1',
      rst => '1',
      q(0) => delay_q_net_x0
    );

  delay_b_5b814e1315: entity work.delay_b_entity_5b814e1315
    port map (
      ce_1 => ce_1_sg_x121,
      clk_1 => clk_1_sg_x121,
      in1 => mux1_y_net_x0,
      out1 => single_port_ram_data_out_net_x2
    );

  delay_f_3eb7dbc15e: entity work.delay_b_entity_5b814e1315
    port map (
      ce_1 => ce_1_sg_x121,
      clk_1 => clk_1_sg_x121,
      in1 => concat_y_net_x13,
      out1 => single_port_ram_data_out_net_x0
    );

  logical1: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x121,
      clk => clk_1_sg_x121,
      clr => '0',
      d0(0) => logical_y_net_x0,
      d1(0) => logical1_y_net_x3,
      y(0) => logical1_y_net_x0
    );

  mux: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x121,
      clk => clk_1_sg_x121,
      clr => '0',
      d0 => single_port_ram_data_out_net_x0,
      d1 => concat_y_net_x11,
      sel(0) => slice1_y_net,
      y => mux_y_net_x3
    );

  mux1: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x121,
      clk => clk_1_sg_x121,
      clr => '0',
      d0 => concat_y_net_x11,
      d1 => single_port_ram_data_out_net_x0,
      sel(0) => slice1_y_net,
      y => mux1_y_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 10,
      y_width => 1
    )
    port map (
      x => slice6_y_net_x2,
      y(0) => slice_y_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 4,
      x_width => 5,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_a196797bd2: entity work.sync_delay_entity_a196797bd2
    port map (
      ce_1 => ce_1_sg_x121,
      clk_1 => clk_1_sg_x121,
      in_x0 => delay_q_net_x0,
      out_x0 => mux_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_4/butterfly_direct/twiddle_general_4mult/coeff_gen"

entity coeff_gen_entity_6adac1066c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    rst: in std_logic; 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_6adac1066c;

architecture structural of coeff_gen_entity_6adac1066c is
  signal ce_1_sg_x132: std_logic;
  signal clk_1_sg_x132: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(5 downto 0);
  signal mux_y_net_x0: std_logic;
  signal rom1_data_net_x0: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(17 downto 0);
  signal slice_y_net: std_logic_vector(2 downto 0);

begin
  ce_1_sg_x132 <= ce_1;
  clk_1_sg_x132 <= clk_1;
  mux_y_net_x0 <= rst;
  w <= concat_y_net_x2;

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_50ef766046ea9bf4",
      op_arith => xlUnsigned,
      op_width => 6
    )
    port map (
      ce => ce_1_sg_x132,
      clk => clk_1_sg_x132,
      clr => '0',
      en => "1",
      rst(0) => mux_y_net_x0,
      op => counter_op_net
    );

  ri_to_c_ebfb9d4d98: entity work.ri_to_c_entity_2abbfa7cd7
    port map (
      im => rom1_data_net_x0,
      re => rom_data_net_x0,
      c => concat_y_net_x2
    );

  rom: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 3,
      c_width => 18,
      core_name0 => "bmg_72_031b3366e458494d",
      latency => 2
    )
    port map (
      addr => slice_y_net,
      ce => ce_1_sg_x132,
      clk => clk_1_sg_x132,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

  rom1: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 3,
      c_width => 18,
      core_name0 => "bmg_72_5eb14d6795836fe0",
      latency => 2
    )
    port map (
      addr => slice_y_net,
      ce => ce_1_sg_x132,
      clk => clk_1_sg_x132,
      en => "1",
      rst => "0",
      data => rom1_data_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 5,
      x_width => 6,
      y_width => 3
    )
    port map (
      x => counter_op_net,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_4/butterfly_direct/twiddle_general_4mult"

entity twiddle_general_4mult_entity_6d46e04e47 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync: in std_logic; 
    a_im: out std_logic_vector(17 downto 0); 
    a_re: out std_logic_vector(17 downto 0); 
    bw_im: out std_logic_vector(21 downto 0); 
    bw_re: out std_logic_vector(21 downto 0); 
    sync_out: out std_logic
  );
end twiddle_general_4mult_entity_6d46e04e47;

architecture structural of twiddle_general_4mult_entity_6d46e04e47 is
  signal addsub1_s_net: std_logic_vector(36 downto 0);
  signal addsub_s_net: std_logic_vector(36 downto 0);
  signal ce_1_sg_x133: std_logic;
  signal clk_1_sg_x133: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal convert0_dout_net_x2: std_logic_vector(21 downto 0);
  signal convert1_dout_net_x2: std_logic_vector(21 downto 0);
  signal delay0_q_net_x0: std_logic_vector(35 downto 0);
  signal delay1_q_net_x0: std_logic_vector(35 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal force_im_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal mult1_p_net: std_logic_vector(35 downto 0);
  signal mult2_p_net: std_logic_vector(35 downto 0);
  signal mult3_p_net: std_logic_vector(35 downto 0);
  signal mult_p_net: std_logic_vector(35 downto 0);
  signal mux_y_net_x1: std_logic_vector(35 downto 0);
  signal mux_y_net_x2: std_logic;
  signal single_port_ram_data_out_net_x0: std_logic_vector(35 downto 0);

begin
  single_port_ram_data_out_net_x0 <= a;
  mux_y_net_x1 <= b;
  ce_1_sg_x133 <= ce_1;
  clk_1_sg_x133 <= clk_1;
  mux_y_net_x2 <= sync;
  a_im <= force_im_output_port_net_x3;
  a_re <= force_re_output_port_net_x3;
  bw_im <= convert1_dout_net_x2;
  bw_re <= convert0_dout_net_x2;
  sync_out <= delay2_q_net_x0;

  addsub: entity work.addsub_be8c56327e
    port map (
      a => mult_p_net,
      b => mult2_p_net,
      ce => ce_1_sg_x133,
      clk => clk_1_sg_x133,
      clr => '0',
      s => addsub_s_net
    );

  addsub1: entity work.addsub_eb2273ac28
    port map (
      a => mult1_p_net,
      b => mult3_p_net,
      ce => ce_1_sg_x133,
      clk => clk_1_sg_x133,
      clr => '0',
      s => addsub1_s_net
    );

  c_to_ri1_4819b1ebef: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay0_q_net_x0,
      im => force_im_output_port_net_x3,
      re => force_re_output_port_net_x3
    );

  c_to_ri2_85317e4a84: entity work.c_to_ri2_entity_e1b86f6b2f
    port map (
      c => concat_y_net_x2,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  c_to_ri3_8c42c8f2e0: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay1_q_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  coeff_gen_6adac1066c: entity work.coeff_gen_entity_6adac1066c
    port map (
      ce_1 => ce_1_sg_x133,
      clk_1 => clk_1_sg_x133,
      rst => mux_y_net_x2,
      w => concat_y_net_x2
    );

  convert0: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 33,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 22,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x133,
      clk => clk_1_sg_x133,
      clr => '0',
      din => addsub_s_net,
      en => "1",
      dout => convert0_dout_net_x2
    );

  convert1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 33,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 22,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x133,
      clk => clk_1_sg_x133,
      clr => '0',
      din => addsub1_s_net,
      en => "1",
      dout => convert1_dout_net_x2
    );

  delay0: entity work.xldelay
    generic map (
      latency => 10,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x133,
      clk => clk_1_sg_x133,
      d => single_port_ram_data_out_net_x0,
      en => '1',
      rst => '1',
      q => delay0_q_net_x0
    );

  delay1: entity work.delay_4b00a70dea
    port map (
      ce => ce_1_sg_x133,
      clk => clk_1_sg_x133,
      clr => '0',
      d => mux_y_net_x1,
      q => delay1_q_net_x0
    );

  delay2: entity work.xldelay
    generic map (
      latency => 10,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x133,
      clk => clk_1_sg_x133,
      d(0) => mux_y_net_x2,
      en => '1',
      rst => '1',
      q(0) => delay2_q_net_x0
    );

  mult: entity work.mult_cfc8c45902
    port map (
      a => force_re_output_port_net_x1,
      b => force_re_output_port_net_x0,
      ce => ce_1_sg_x133,
      clk => clk_1_sg_x133,
      clr => '0',
      p => mult_p_net
    );

  mult1: entity work.mult_cfc8c45902
    port map (
      a => force_im_output_port_net_x1,
      b => force_re_output_port_net_x0,
      ce => ce_1_sg_x133,
      clk => clk_1_sg_x133,
      clr => '0',
      p => mult1_p_net
    );

  mult2: entity work.mult_cfc8c45902
    port map (
      a => force_im_output_port_net_x1,
      b => force_im_output_port_net_x0,
      ce => ce_1_sg_x133,
      clk => clk_1_sg_x133,
      clr => '0',
      p => mult2_p_net
    );

  mult3: entity work.mult_cfc8c45902
    port map (
      a => force_re_output_port_net_x1,
      b => force_im_output_port_net_x0,
      ce => ce_1_sg_x133,
      clk => clk_1_sg_x133,
      clr => '0',
      p => mult3_p_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_4/butterfly_direct"

entity butterfly_direct_entity_89ddf7e694 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    a_bw_x0: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly_direct_entity_89ddf7e694;

architecture structural of butterfly_direct_entity_89ddf7e694 is
  signal adder_s_net_x3: std_logic_vector(17 downto 0);
  signal adder_s_net_x4: std_logic_vector(17 downto 0);
  signal adder_s_net_x5: std_logic_vector(17 downto 0);
  signal adder_s_net_x6: std_logic_vector(17 downto 0);
  signal and_y_net_x0: std_logic;
  signal and_y_net_x1: std_logic;
  signal and_y_net_x2: std_logic;
  signal and_y_net_x3: std_logic;
  signal cast_c_im_dout_net_x0: std_logic_vector(22 downto 0);
  signal cast_c_im_dout_net_x1: std_logic_vector(22 downto 0);
  signal cast_c_re_dout_net_x0: std_logic_vector(22 downto 0);
  signal cast_c_re_dout_net_x1: std_logic_vector(22 downto 0);
  signal ce_1_sg_x134: std_logic;
  signal clk_1_sg_x134: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal concat_y_net_x3: std_logic_vector(35 downto 0);
  signal convert0_dout_net_x2: std_logic_vector(21 downto 0);
  signal convert1_dout_net_x2: std_logic_vector(21 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal logical_y_net_x0: std_logic;
  signal mux0_y_net_x1: std_logic_vector(23 downto 0);
  signal mux1_y_net_x1: std_logic_vector(23 downto 0);
  signal mux2_y_net_x1: std_logic_vector(23 downto 0);
  signal mux3_y_net_x1: std_logic_vector(23 downto 0);
  signal mux_y_net_x3: std_logic_vector(35 downto 0);
  signal mux_y_net_x4: std_logic;
  signal scale0_op_net: std_logic_vector(22 downto 0);
  signal scale1_op_net: std_logic_vector(22 downto 0);
  signal scale2_op_net: std_logic_vector(22 downto 0);
  signal scale3_op_net: std_logic_vector(22 downto 0);
  signal shift_delay_q_net: std_logic;
  signal single_port_ram_data_out_net_x1: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic;
  signal sync_delay_q_net_x0: std_logic;

begin
  single_port_ram_data_out_net_x1 <= a;
  mux_y_net_x3 <= b;
  ce_1_sg_x134 <= ce_1;
  clk_1_sg_x134 <= clk_1;
  slice_y_net_x0 <= shift;
  mux_y_net_x4 <= sync;
  a_bw <= concat_y_net_x2;
  a_bw_x0 <= concat_y_net_x3;
  of_x0 <= logical_y_net_x0;
  sync_out <= sync_delay_q_net_x0;

  cadd_7759bd259b: entity work.cadd_entity_bd220e7516
    port map (
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      b_im => convert1_dout_net_x2,
      b_re => convert0_dout_net_x2,
      ce_1 => ce_1_sg_x134,
      clk_1 => clk_1_sg_x134,
      c_im => cast_c_im_dout_net_x0,
      c_re => cast_c_re_dout_net_x0
    );

  convert_of0_dd85caa3b5: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x134,
      clk_1 => clk_1_sg_x134,
      din => mux0_y_net_x1,
      dout => adder_s_net_x3,
      of_x0 => and_y_net_x0
    );

  convert_of1_bb17bcd31f: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x134,
      clk_1 => clk_1_sg_x134,
      din => mux1_y_net_x1,
      dout => adder_s_net_x4,
      of_x0 => and_y_net_x1
    );

  convert_of2_47293d4647: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x134,
      clk_1 => clk_1_sg_x134,
      din => mux2_y_net_x1,
      dout => adder_s_net_x5,
      of_x0 => and_y_net_x2
    );

  convert_of3_57aa62d09e: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x134,
      clk_1 => clk_1_sg_x134,
      din => mux3_y_net_x1,
      dout => adder_s_net_x6,
      of_x0 => and_y_net_x3
    );

  csub_039871f7ea: entity work.csub_entity_394eae4754
    port map (
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      b_im => convert1_dout_net_x2,
      b_re => convert0_dout_net_x2,
      ce_1 => ce_1_sg_x134,
      clk_1 => clk_1_sg_x134,
      c_im => cast_c_im_dout_net_x1,
      c_re => cast_c_re_dout_net_x1
    );

  logical: entity work.logical_a6d07705dd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => and_y_net_x0,
      d1(0) => and_y_net_x1,
      d2(0) => and_y_net_x2,
      d3(0) => and_y_net_x3,
      y(0) => logical_y_net_x0
    );

  mux0: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x134,
      clk => clk_1_sg_x134,
      clr => '0',
      d0 => cast_c_re_dout_net_x0,
      d1 => scale0_op_net,
      sel(0) => shift_delay_q_net,
      y => mux0_y_net_x1
    );

  mux1: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x134,
      clk => clk_1_sg_x134,
      clr => '0',
      d0 => cast_c_im_dout_net_x0,
      d1 => scale1_op_net,
      sel(0) => shift_delay_q_net,
      y => mux1_y_net_x1
    );

  mux2: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x134,
      clk => clk_1_sg_x134,
      clr => '0',
      d0 => cast_c_re_dout_net_x1,
      d1 => scale2_op_net,
      sel(0) => shift_delay_q_net,
      y => mux2_y_net_x1
    );

  mux3: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x134,
      clk => clk_1_sg_x134,
      clr => '0',
      d0 => cast_c_im_dout_net_x1,
      d1 => scale3_op_net,
      sel(0) => shift_delay_q_net,
      y => mux3_y_net_x1
    );

  ri_to_c01_4942ae9381: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => adder_s_net_x4,
      re => adder_s_net_x3,
      c => concat_y_net_x2
    );

  ri_to_c23_453b1fef61: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => adder_s_net_x6,
      re => adder_s_net_x5,
      c => concat_y_net_x3
    );

  scale0: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x0,
      op => scale0_op_net
    );

  scale1: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x0,
      op => scale1_op_net
    );

  scale2: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x1,
      op => scale2_op_net
    );

  scale3: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x1,
      op => scale3_op_net
    );

  shift_delay: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x134,
      clk => clk_1_sg_x134,
      d(0) => slice_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => shift_delay_q_net
    );

  sync_delay: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x134,
      clk => clk_1_sg_x134,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => sync_delay_q_net_x0
    );

  twiddle_general_4mult_6d46e04e47: entity work.twiddle_general_4mult_entity_6d46e04e47
    port map (
      a => single_port_ram_data_out_net_x1,
      b => mux_y_net_x3,
      ce_1 => ce_1_sg_x134,
      clk_1 => clk_1_sg_x134,
      sync => mux_y_net_x4,
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      bw_im => convert1_dout_net_x2,
      bw_re => convert0_dout_net_x2,
      sync_out => delay2_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_4/delay_b"

entity delay_b_entity_8f5fb2d2a5 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    out1: out std_logic_vector(35 downto 0)
  );
end delay_b_entity_8f5fb2d2a5;

architecture structural of delay_b_entity_8f5fb2d2a5 is
  signal ce_1_sg_x135: std_logic;
  signal clk_1_sg_x135: std_logic;
  signal constant2_op_net: std_logic;
  signal counter_op_net: std_logic_vector(2 downto 0);
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);
  signal single_port_ram_data_out_net_x2: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x135 <= ce_1;
  clk_1_sg_x135 <= clk_1;
  mux1_y_net_x0 <= in1;
  out1 <= single_port_ram_data_out_net_x2;

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  counter: entity work.xlcounter_limit_c09f12_01
    generic map (
      cnt_15_0 => 4,
      cnt_31_16 => 0,
      cnt_47_32 => 0,
      cnt_63_48 => 0,
      core_name0 => "cntr_11_0_514048f9c72a30b1",
      count_limited => 1,
      op_arith => xlUnsigned,
      op_width => 3
    )
    port map (
      ce => ce_1_sg_x135,
      clk => clk_1_sg_x135,
      clr => '0',
      en => "1",
      rst => "0",
      op => counter_op_net
    );

  single_port_ram: entity work.xlspram_c09f12_01
    generic map (
      c_address_width => 3,
      c_width => 36,
      core_name0 => "bmg_72_37c9a3ecdc0c1393",
      latency => 2
    )
    port map (
      addr => counter_op_net,
      ce => ce_1_sg_x135,
      clk => clk_1_sg_x135,
      data_in => mux1_y_net_x0,
      en => "1",
      rst => "0",
      we(0) => constant2_op_net,
      data_out => single_port_ram_data_out_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_4/sync_delay"

entity sync_delay_entity_053eb37e18 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_053eb37e18;

architecture structural of sync_delay_entity_053eb37e18 is
  signal ce_1_sg_x137: std_logic;
  signal clk_1_sg_x137: std_logic;
  signal constant1_op_net: std_logic_vector(3 downto 0);
  signal constant2_op_net: std_logic_vector(3 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(3 downto 0);
  signal counter_op_net: std_logic_vector(3 downto 0);
  signal delay_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x5: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x137 <= ce_1;
  clk_1_sg_x137 <= clk_1;
  delay_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x5;

  constant1: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_145086465d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_67ad97ca70
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_81c610783c35b073",
      op_arith => xlUnsigned,
      op_width => 4
    )
    port map (
      ce => ce_1_sg_x137,
      clk => clk_1_sg_x137,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => delay_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x5
    );

  relational: entity work.relational_4d3cfceaf4
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_d930162434
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_4"

entity fft_stage_4_entity_f91b655483 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    of_in: in std_logic; 
    shift: in std_logic_vector(9 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_4_entity_f91b655483;

architecture structural of fft_stage_4_entity_f91b655483 is
  signal ce_1_sg_x138: std_logic;
  signal clk_1_sg_x138: std_logic;
  signal concat_y_net_x16: std_logic_vector(35 downto 0);
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concat_y_net_x6: std_logic_vector(35 downto 0);
  signal concat_y_net_x7: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(3 downto 0);
  signal delay_q_net_x0: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical1_y_net_x2: std_logic;
  signal logical_y_net_x0: std_logic;
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);
  signal mux_y_net_x3: std_logic_vector(35 downto 0);
  signal mux_y_net_x5: std_logic;
  signal single_port_ram_data_out_net_x0: std_logic_vector(35 downto 0);
  signal single_port_ram_data_out_net_x2: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic;
  signal slice6_y_net_x3: std_logic_vector(9 downto 0);
  signal slice_y_net_x0: std_logic;
  signal sync_delay_q_net_x1: std_logic;
  signal sync_delay_q_net_x6: std_logic;

begin
  ce_1_sg_x138 <= ce_1;
  clk_1_sg_x138 <= clk_1;
  concat_y_net_x5 <= in1;
  concat_y_net_x16 <= in2;
  logical1_y_net_x1 <= of_in;
  slice6_y_net_x3 <= shift;
  sync_delay_q_net_x6 <= sync;
  of_x0 <= logical1_y_net_x2;
  out1 <= concat_y_net_x6;
  out2 <= concat_y_net_x7;
  sync_out <= sync_delay_q_net_x1;

  butterfly_direct_89ddf7e694: entity work.butterfly_direct_entity_89ddf7e694
    port map (
      a => single_port_ram_data_out_net_x2,
      b => mux_y_net_x3,
      ce_1 => ce_1_sg_x138,
      clk_1 => clk_1_sg_x138,
      shift => slice_y_net_x0,
      sync => mux_y_net_x5,
      a_bw => concat_y_net_x6,
      a_bw_x0 => concat_y_net_x7,
      of_x0 => logical_y_net_x0,
      sync_out => sync_delay_q_net_x1
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_77d9d8bb324abfb9",
      op_arith => xlUnsigned,
      op_width => 4
    )
    port map (
      ce => ce_1_sg_x138,
      clk => clk_1_sg_x138,
      clr => '0',
      en => "1",
      rst(0) => sync_delay_q_net_x6,
      op => counter_op_net
    );

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x138,
      clk => clk_1_sg_x138,
      d(0) => sync_delay_q_net_x6,
      en => '1',
      rst => '1',
      q(0) => delay_q_net_x0
    );

  delay_b_8f5fb2d2a5: entity work.delay_b_entity_8f5fb2d2a5
    port map (
      ce_1 => ce_1_sg_x138,
      clk_1 => clk_1_sg_x138,
      in1 => mux1_y_net_x0,
      out1 => single_port_ram_data_out_net_x2
    );

  delay_f_89daec93a6: entity work.delay_b_entity_8f5fb2d2a5
    port map (
      ce_1 => ce_1_sg_x138,
      clk_1 => clk_1_sg_x138,
      in1 => concat_y_net_x16,
      out1 => single_port_ram_data_out_net_x0
    );

  logical1: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x138,
      clk => clk_1_sg_x138,
      clr => '0',
      d0(0) => logical_y_net_x0,
      d1(0) => logical1_y_net_x1,
      y(0) => logical1_y_net_x2
    );

  mux: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x138,
      clk => clk_1_sg_x138,
      clr => '0',
      d0 => single_port_ram_data_out_net_x0,
      d1 => concat_y_net_x5,
      sel(0) => slice1_y_net,
      y => mux_y_net_x3
    );

  mux1: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x138,
      clk => clk_1_sg_x138,
      clr => '0',
      d0 => concat_y_net_x5,
      d1 => single_port_ram_data_out_net_x0,
      sel(0) => slice1_y_net,
      y => mux1_y_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 10,
      y_width => 1
    )
    port map (
      x => slice6_y_net_x3,
      y(0) => slice_y_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_053eb37e18: entity work.sync_delay_entity_053eb37e18
    port map (
      ce_1 => ce_1_sg_x138,
      clk_1 => clk_1_sg_x138,
      in_x0 => delay_q_net_x0,
      out_x0 => mux_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_5/butterfly_direct/twiddle_general_4mult/coeff_gen"

entity coeff_gen_entity_9a31ca9433 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    rst: in std_logic; 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_9a31ca9433;

architecture structural of coeff_gen_entity_9a31ca9433 is
  signal ce_1_sg_x149: std_logic;
  signal clk_1_sg_x149: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(5 downto 0);
  signal mux_y_net_x0: std_logic;
  signal rom1_data_net_x0: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(17 downto 0);
  signal slice_y_net: std_logic_vector(3 downto 0);

begin
  ce_1_sg_x149 <= ce_1;
  clk_1_sg_x149 <= clk_1;
  mux_y_net_x0 <= rst;
  w <= concat_y_net_x2;

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_50ef766046ea9bf4",
      op_arith => xlUnsigned,
      op_width => 6
    )
    port map (
      ce => ce_1_sg_x149,
      clk => clk_1_sg_x149,
      clr => '0',
      en => "1",
      rst(0) => mux_y_net_x0,
      op => counter_op_net
    );

  ri_to_c_2d7d87f6c0: entity work.ri_to_c_entity_2abbfa7cd7
    port map (
      im => rom1_data_net_x0,
      re => rom_data_net_x0,
      c => concat_y_net_x2
    );

  rom: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 4,
      c_width => 18,
      core_name0 => "bmg_72_763f056d1756d515",
      latency => 2
    )
    port map (
      addr => slice_y_net,
      ce => ce_1_sg_x149,
      clk => clk_1_sg_x149,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

  rom1: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 4,
      c_width => 18,
      core_name0 => "bmg_72_59f0d912b26aa159",
      latency => 2
    )
    port map (
      addr => slice_y_net,
      ce => ce_1_sg_x149,
      clk => clk_1_sg_x149,
      en => "1",
      rst => "0",
      data => rom1_data_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 5,
      x_width => 6,
      y_width => 4
    )
    port map (
      x => counter_op_net,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_5/butterfly_direct/twiddle_general_4mult"

entity twiddle_general_4mult_entity_c1e8805b70 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync: in std_logic; 
    a_im: out std_logic_vector(17 downto 0); 
    a_re: out std_logic_vector(17 downto 0); 
    bw_im: out std_logic_vector(21 downto 0); 
    bw_re: out std_logic_vector(21 downto 0); 
    sync_out: out std_logic
  );
end twiddle_general_4mult_entity_c1e8805b70;

architecture structural of twiddle_general_4mult_entity_c1e8805b70 is
  signal addsub1_s_net: std_logic_vector(36 downto 0);
  signal addsub_s_net: std_logic_vector(36 downto 0);
  signal ce_1_sg_x150: std_logic;
  signal clk_1_sg_x150: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal convert0_dout_net_x2: std_logic_vector(21 downto 0);
  signal convert1_dout_net_x2: std_logic_vector(21 downto 0);
  signal delay0_q_net_x0: std_logic_vector(35 downto 0);
  signal delay1_q_net_x0: std_logic_vector(35 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay_slr_q_net_x0: std_logic_vector(35 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal mult1_p_net: std_logic_vector(35 downto 0);
  signal mult2_p_net: std_logic_vector(35 downto 0);
  signal mult3_p_net: std_logic_vector(35 downto 0);
  signal mult_p_net: std_logic_vector(35 downto 0);
  signal mux_y_net_x1: std_logic_vector(35 downto 0);
  signal mux_y_net_x2: std_logic;

begin
  delay_slr_q_net_x0 <= a;
  mux_y_net_x1 <= b;
  ce_1_sg_x150 <= ce_1;
  clk_1_sg_x150 <= clk_1;
  mux_y_net_x2 <= sync;
  a_im <= force_im_output_port_net_x3;
  a_re <= force_re_output_port_net_x3;
  bw_im <= convert1_dout_net_x2;
  bw_re <= convert0_dout_net_x2;
  sync_out <= delay2_q_net_x0;

  addsub: entity work.addsub_be8c56327e
    port map (
      a => mult_p_net,
      b => mult2_p_net,
      ce => ce_1_sg_x150,
      clk => clk_1_sg_x150,
      clr => '0',
      s => addsub_s_net
    );

  addsub1: entity work.addsub_eb2273ac28
    port map (
      a => mult1_p_net,
      b => mult3_p_net,
      ce => ce_1_sg_x150,
      clk => clk_1_sg_x150,
      clr => '0',
      s => addsub1_s_net
    );

  c_to_ri1_fe90477497: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay0_q_net_x0,
      im => force_im_output_port_net_x3,
      re => force_re_output_port_net_x3
    );

  c_to_ri2_28a6ca78e4: entity work.c_to_ri2_entity_e1b86f6b2f
    port map (
      c => concat_y_net_x2,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  c_to_ri3_9a0b184865: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay1_q_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  coeff_gen_9a31ca9433: entity work.coeff_gen_entity_9a31ca9433
    port map (
      ce_1 => ce_1_sg_x150,
      clk_1 => clk_1_sg_x150,
      rst => mux_y_net_x2,
      w => concat_y_net_x2
    );

  convert0: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 33,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 22,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x150,
      clk => clk_1_sg_x150,
      clr => '0',
      din => addsub_s_net,
      en => "1",
      dout => convert0_dout_net_x2
    );

  convert1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 33,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 22,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x150,
      clk => clk_1_sg_x150,
      clr => '0',
      din => addsub1_s_net,
      en => "1",
      dout => convert1_dout_net_x2
    );

  delay0: entity work.xldelay
    generic map (
      latency => 10,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x150,
      clk => clk_1_sg_x150,
      d => delay_slr_q_net_x0,
      en => '1',
      rst => '1',
      q => delay0_q_net_x0
    );

  delay1: entity work.delay_4b00a70dea
    port map (
      ce => ce_1_sg_x150,
      clk => clk_1_sg_x150,
      clr => '0',
      d => mux_y_net_x1,
      q => delay1_q_net_x0
    );

  delay2: entity work.xldelay
    generic map (
      latency => 10,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x150,
      clk => clk_1_sg_x150,
      d(0) => mux_y_net_x2,
      en => '1',
      rst => '1',
      q(0) => delay2_q_net_x0
    );

  mult: entity work.mult_cfc8c45902
    port map (
      a => force_re_output_port_net_x1,
      b => force_re_output_port_net_x0,
      ce => ce_1_sg_x150,
      clk => clk_1_sg_x150,
      clr => '0',
      p => mult_p_net
    );

  mult1: entity work.mult_cfc8c45902
    port map (
      a => force_im_output_port_net_x1,
      b => force_re_output_port_net_x0,
      ce => ce_1_sg_x150,
      clk => clk_1_sg_x150,
      clr => '0',
      p => mult1_p_net
    );

  mult2: entity work.mult_cfc8c45902
    port map (
      a => force_im_output_port_net_x1,
      b => force_im_output_port_net_x0,
      ce => ce_1_sg_x150,
      clk => clk_1_sg_x150,
      clr => '0',
      p => mult2_p_net
    );

  mult3: entity work.mult_cfc8c45902
    port map (
      a => force_re_output_port_net_x1,
      b => force_im_output_port_net_x0,
      ce => ce_1_sg_x150,
      clk => clk_1_sg_x150,
      clr => '0',
      p => mult3_p_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_5/butterfly_direct"

entity butterfly_direct_entity_2f07c4f5b5 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    a_bw_x0: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly_direct_entity_2f07c4f5b5;

architecture structural of butterfly_direct_entity_2f07c4f5b5 is
  signal adder_s_net_x3: std_logic_vector(17 downto 0);
  signal adder_s_net_x4: std_logic_vector(17 downto 0);
  signal adder_s_net_x5: std_logic_vector(17 downto 0);
  signal adder_s_net_x6: std_logic_vector(17 downto 0);
  signal and_y_net_x0: std_logic;
  signal and_y_net_x1: std_logic;
  signal and_y_net_x2: std_logic;
  signal and_y_net_x3: std_logic;
  signal cast_c_im_dout_net_x0: std_logic_vector(22 downto 0);
  signal cast_c_im_dout_net_x1: std_logic_vector(22 downto 0);
  signal cast_c_re_dout_net_x0: std_logic_vector(22 downto 0);
  signal cast_c_re_dout_net_x1: std_logic_vector(22 downto 0);
  signal ce_1_sg_x151: std_logic;
  signal clk_1_sg_x151: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal concat_y_net_x3: std_logic_vector(35 downto 0);
  signal convert0_dout_net_x2: std_logic_vector(21 downto 0);
  signal convert1_dout_net_x2: std_logic_vector(21 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay_slr_q_net_x1: std_logic_vector(35 downto 0);
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal logical_y_net_x0: std_logic;
  signal mux0_y_net_x1: std_logic_vector(23 downto 0);
  signal mux1_y_net_x1: std_logic_vector(23 downto 0);
  signal mux2_y_net_x1: std_logic_vector(23 downto 0);
  signal mux3_y_net_x1: std_logic_vector(23 downto 0);
  signal mux_y_net_x3: std_logic_vector(35 downto 0);
  signal mux_y_net_x4: std_logic;
  signal scale0_op_net: std_logic_vector(22 downto 0);
  signal scale1_op_net: std_logic_vector(22 downto 0);
  signal scale2_op_net: std_logic_vector(22 downto 0);
  signal scale3_op_net: std_logic_vector(22 downto 0);
  signal shift_delay_q_net: std_logic;
  signal slice_y_net_x0: std_logic;
  signal sync_delay_q_net_x0: std_logic;

begin
  delay_slr_q_net_x1 <= a;
  mux_y_net_x3 <= b;
  ce_1_sg_x151 <= ce_1;
  clk_1_sg_x151 <= clk_1;
  slice_y_net_x0 <= shift;
  mux_y_net_x4 <= sync;
  a_bw <= concat_y_net_x2;
  a_bw_x0 <= concat_y_net_x3;
  of_x0 <= logical_y_net_x0;
  sync_out <= sync_delay_q_net_x0;

  cadd_3411eb0e93: entity work.cadd_entity_bd220e7516
    port map (
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      b_im => convert1_dout_net_x2,
      b_re => convert0_dout_net_x2,
      ce_1 => ce_1_sg_x151,
      clk_1 => clk_1_sg_x151,
      c_im => cast_c_im_dout_net_x0,
      c_re => cast_c_re_dout_net_x0
    );

  convert_of0_bad1cc37b2: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x151,
      clk_1 => clk_1_sg_x151,
      din => mux0_y_net_x1,
      dout => adder_s_net_x3,
      of_x0 => and_y_net_x0
    );

  convert_of1_8ce64af1d2: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x151,
      clk_1 => clk_1_sg_x151,
      din => mux1_y_net_x1,
      dout => adder_s_net_x4,
      of_x0 => and_y_net_x1
    );

  convert_of2_92089e3b0e: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x151,
      clk_1 => clk_1_sg_x151,
      din => mux2_y_net_x1,
      dout => adder_s_net_x5,
      of_x0 => and_y_net_x2
    );

  convert_of3_5b8494f95f: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x151,
      clk_1 => clk_1_sg_x151,
      din => mux3_y_net_x1,
      dout => adder_s_net_x6,
      of_x0 => and_y_net_x3
    );

  csub_e0ab8779e9: entity work.csub_entity_394eae4754
    port map (
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      b_im => convert1_dout_net_x2,
      b_re => convert0_dout_net_x2,
      ce_1 => ce_1_sg_x151,
      clk_1 => clk_1_sg_x151,
      c_im => cast_c_im_dout_net_x1,
      c_re => cast_c_re_dout_net_x1
    );

  logical: entity work.logical_a6d07705dd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => and_y_net_x0,
      d1(0) => and_y_net_x1,
      d2(0) => and_y_net_x2,
      d3(0) => and_y_net_x3,
      y(0) => logical_y_net_x0
    );

  mux0: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x151,
      clk => clk_1_sg_x151,
      clr => '0',
      d0 => cast_c_re_dout_net_x0,
      d1 => scale0_op_net,
      sel(0) => shift_delay_q_net,
      y => mux0_y_net_x1
    );

  mux1: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x151,
      clk => clk_1_sg_x151,
      clr => '0',
      d0 => cast_c_im_dout_net_x0,
      d1 => scale1_op_net,
      sel(0) => shift_delay_q_net,
      y => mux1_y_net_x1
    );

  mux2: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x151,
      clk => clk_1_sg_x151,
      clr => '0',
      d0 => cast_c_re_dout_net_x1,
      d1 => scale2_op_net,
      sel(0) => shift_delay_q_net,
      y => mux2_y_net_x1
    );

  mux3: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x151,
      clk => clk_1_sg_x151,
      clr => '0',
      d0 => cast_c_im_dout_net_x1,
      d1 => scale3_op_net,
      sel(0) => shift_delay_q_net,
      y => mux3_y_net_x1
    );

  ri_to_c01_692d2cf4ee: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => adder_s_net_x4,
      re => adder_s_net_x3,
      c => concat_y_net_x2
    );

  ri_to_c23_cd7debe2e4: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => adder_s_net_x6,
      re => adder_s_net_x5,
      c => concat_y_net_x3
    );

  scale0: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x0,
      op => scale0_op_net
    );

  scale1: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x0,
      op => scale1_op_net
    );

  scale2: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x1,
      op => scale2_op_net
    );

  scale3: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x1,
      op => scale3_op_net
    );

  shift_delay: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x151,
      clk => clk_1_sg_x151,
      d(0) => slice_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => shift_delay_q_net
    );

  sync_delay: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x151,
      clk => clk_1_sg_x151,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => sync_delay_q_net_x0
    );

  twiddle_general_4mult_c1e8805b70: entity work.twiddle_general_4mult_entity_c1e8805b70
    port map (
      a => delay_slr_q_net_x1,
      b => mux_y_net_x3,
      ce_1 => ce_1_sg_x151,
      clk_1 => clk_1_sg_x151,
      sync => mux_y_net_x4,
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      bw_im => convert1_dout_net_x2,
      bw_re => convert0_dout_net_x2,
      sync_out => delay2_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_5/delay_b"

entity delay_b_entity_a07c0547cc is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    out1: out std_logic_vector(35 downto 0)
  );
end delay_b_entity_a07c0547cc;

architecture structural of delay_b_entity_a07c0547cc is
  signal ce_1_sg_x152: std_logic;
  signal clk_1_sg_x152: std_logic;
  signal delay_slr_q_net_x2: std_logic_vector(35 downto 0);
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x152 <= ce_1;
  clk_1_sg_x152 <= clk_1;
  mux1_y_net_x0 <= in1;
  out1 <= delay_slr_q_net_x2;

  delay_slr: entity work.xldelay
    generic map (
      latency => 4,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x152,
      clk => clk_1_sg_x152,
      d => mux1_y_net_x0,
      en => '1',
      rst => '1',
      q => delay_slr_q_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_5/sync_delay"

entity sync_delay_entity_3371cbcaf5 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_3371cbcaf5;

architecture structural of sync_delay_entity_3371cbcaf5 is
  signal ce_1_sg_x154: std_logic;
  signal clk_1_sg_x154: std_logic;
  signal constant1_op_net: std_logic_vector(2 downto 0);
  signal constant2_op_net: std_logic_vector(2 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(2 downto 0);
  signal counter_op_net: std_logic_vector(2 downto 0);
  signal delay_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x5: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x154 <= ce_1;
  clk_1_sg_x154 <= clk_1;
  delay_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x5;

  constant1: entity work.constant_822933f89b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_469094441c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_a1c496ea88
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_b502b5814ea90a92",
      op_arith => xlUnsigned,
      op_width => 3
    )
    port map (
      ce => ce_1_sg_x154,
      clk => clk_1_sg_x154,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => delay_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x5
    );

  relational: entity work.relational_8fc7f5539b
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_47b317dab6
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_5"

entity fft_stage_5_entity_f0b8f37405 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    of_in: in std_logic; 
    shift: in std_logic_vector(9 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_5_entity_f0b8f37405;

architecture structural of fft_stage_5_entity_f0b8f37405 is
  signal ce_1_sg_x155: std_logic;
  signal clk_1_sg_x155: std_logic;
  signal concat_y_net_x10: std_logic_vector(35 downto 0);
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concat_y_net_x7: std_logic_vector(35 downto 0);
  signal concat_y_net_x9: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(2 downto 0);
  signal delay_q_net_x0: std_logic;
  signal delay_slr_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_slr_q_net_x2: std_logic_vector(35 downto 0);
  signal logical1_y_net_x0: std_logic;
  signal logical1_y_net_x3: std_logic;
  signal logical_y_net_x0: std_logic;
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);
  signal mux_y_net_x3: std_logic_vector(35 downto 0);
  signal mux_y_net_x5: std_logic;
  signal slice1_y_net: std_logic;
  signal slice6_y_net_x4: std_logic_vector(9 downto 0);
  signal slice_y_net_x0: std_logic;
  signal sync_delay_q_net_x2: std_logic;
  signal sync_delay_q_net_x3: std_logic;

begin
  ce_1_sg_x155 <= ce_1;
  clk_1_sg_x155 <= clk_1;
  concat_y_net_x7 <= in1;
  concat_y_net_x9 <= in2;
  logical1_y_net_x3 <= of_in;
  slice6_y_net_x4 <= shift;
  sync_delay_q_net_x2 <= sync;
  of_x0 <= logical1_y_net_x0;
  out1 <= concat_y_net_x10;
  out2 <= concat_y_net_x11;
  sync_out <= sync_delay_q_net_x3;

  butterfly_direct_2f07c4f5b5: entity work.butterfly_direct_entity_2f07c4f5b5
    port map (
      a => delay_slr_q_net_x2,
      b => mux_y_net_x3,
      ce_1 => ce_1_sg_x155,
      clk_1 => clk_1_sg_x155,
      shift => slice_y_net_x0,
      sync => mux_y_net_x5,
      a_bw => concat_y_net_x10,
      a_bw_x0 => concat_y_net_x11,
      of_x0 => logical_y_net_x0,
      sync_out => sync_delay_q_net_x3
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_514048f9c72a30b1",
      op_arith => xlUnsigned,
      op_width => 3
    )
    port map (
      ce => ce_1_sg_x155,
      clk => clk_1_sg_x155,
      clr => '0',
      en => "1",
      rst(0) => sync_delay_q_net_x2,
      op => counter_op_net
    );

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x155,
      clk => clk_1_sg_x155,
      d(0) => sync_delay_q_net_x2,
      en => '1',
      rst => '1',
      q(0) => delay_q_net_x0
    );

  delay_b_a07c0547cc: entity work.delay_b_entity_a07c0547cc
    port map (
      ce_1 => ce_1_sg_x155,
      clk_1 => clk_1_sg_x155,
      in1 => mux1_y_net_x0,
      out1 => delay_slr_q_net_x2
    );

  delay_f_4669e0fa91: entity work.delay_b_entity_a07c0547cc
    port map (
      ce_1 => ce_1_sg_x155,
      clk_1 => clk_1_sg_x155,
      in1 => concat_y_net_x9,
      out1 => delay_slr_q_net_x0
    );

  logical1: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x155,
      clk => clk_1_sg_x155,
      clr => '0',
      d0(0) => logical_y_net_x0,
      d1(0) => logical1_y_net_x3,
      y(0) => logical1_y_net_x0
    );

  mux: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x155,
      clk => clk_1_sg_x155,
      clr => '0',
      d0 => delay_slr_q_net_x0,
      d1 => concat_y_net_x7,
      sel(0) => slice1_y_net,
      y => mux_y_net_x3
    );

  mux1: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x155,
      clk => clk_1_sg_x155,
      clr => '0',
      d0 => concat_y_net_x7,
      d1 => delay_slr_q_net_x0,
      sel(0) => slice1_y_net,
      y => mux1_y_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 4,
      x_width => 10,
      y_width => 1
    )
    port map (
      x => slice6_y_net_x4,
      y(0) => slice_y_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 3,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_3371cbcaf5: entity work.sync_delay_entity_3371cbcaf5
    port map (
      ce_1 => ce_1_sg_x155,
      clk_1 => clk_1_sg_x155,
      in_x0 => delay_q_net_x0,
      out_x0 => mux_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_6/butterfly_direct/twiddle_general_4mult/coeff_gen"

entity coeff_gen_entity_8e9682e162 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    rst: in std_logic; 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_8e9682e162;

architecture structural of coeff_gen_entity_8e9682e162 is
  signal ce_1_sg_x166: std_logic;
  signal clk_1_sg_x166: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(5 downto 0);
  signal mux_y_net_x0: std_logic;
  signal rom1_data_net_x0: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(17 downto 0);
  signal slice_y_net: std_logic_vector(4 downto 0);

begin
  ce_1_sg_x166 <= ce_1;
  clk_1_sg_x166 <= clk_1;
  mux_y_net_x0 <= rst;
  w <= concat_y_net_x2;

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_50ef766046ea9bf4",
      op_arith => xlUnsigned,
      op_width => 6
    )
    port map (
      ce => ce_1_sg_x166,
      clk => clk_1_sg_x166,
      clr => '0',
      en => "1",
      rst(0) => mux_y_net_x0,
      op => counter_op_net
    );

  ri_to_c_11b303cb4b: entity work.ri_to_c_entity_2abbfa7cd7
    port map (
      im => rom1_data_net_x0,
      re => rom_data_net_x0,
      c => concat_y_net_x2
    );

  rom: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 5,
      c_width => 18,
      core_name0 => "bmg_72_765e7ee20c0385ac",
      latency => 2
    )
    port map (
      addr => slice_y_net,
      ce => ce_1_sg_x166,
      clk => clk_1_sg_x166,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

  rom1: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 5,
      c_width => 18,
      core_name0 => "bmg_72_b50899b30d5ca737",
      latency => 2
    )
    port map (
      addr => slice_y_net,
      ce => ce_1_sg_x166,
      clk => clk_1_sg_x166,
      en => "1",
      rst => "0",
      data => rom1_data_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 5,
      x_width => 6,
      y_width => 5
    )
    port map (
      x => counter_op_net,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_6/butterfly_direct/twiddle_general_4mult"

entity twiddle_general_4mult_entity_de42a8054e is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync: in std_logic; 
    a_im: out std_logic_vector(17 downto 0); 
    a_re: out std_logic_vector(17 downto 0); 
    bw_im: out std_logic_vector(21 downto 0); 
    bw_re: out std_logic_vector(21 downto 0); 
    sync_out: out std_logic
  );
end twiddle_general_4mult_entity_de42a8054e;

architecture structural of twiddle_general_4mult_entity_de42a8054e is
  signal addsub1_s_net: std_logic_vector(36 downto 0);
  signal addsub_s_net: std_logic_vector(36 downto 0);
  signal ce_1_sg_x167: std_logic;
  signal clk_1_sg_x167: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal convert0_dout_net_x2: std_logic_vector(21 downto 0);
  signal convert1_dout_net_x2: std_logic_vector(21 downto 0);
  signal delay0_q_net_x0: std_logic_vector(35 downto 0);
  signal delay1_q_net_x0: std_logic_vector(35 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay_slr_q_net_x0: std_logic_vector(35 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal mult1_p_net: std_logic_vector(35 downto 0);
  signal mult2_p_net: std_logic_vector(35 downto 0);
  signal mult3_p_net: std_logic_vector(35 downto 0);
  signal mult_p_net: std_logic_vector(35 downto 0);
  signal mux_y_net_x1: std_logic_vector(35 downto 0);
  signal mux_y_net_x2: std_logic;

begin
  delay_slr_q_net_x0 <= a;
  mux_y_net_x1 <= b;
  ce_1_sg_x167 <= ce_1;
  clk_1_sg_x167 <= clk_1;
  mux_y_net_x2 <= sync;
  a_im <= force_im_output_port_net_x3;
  a_re <= force_re_output_port_net_x3;
  bw_im <= convert1_dout_net_x2;
  bw_re <= convert0_dout_net_x2;
  sync_out <= delay2_q_net_x0;

  addsub: entity work.addsub_be8c56327e
    port map (
      a => mult_p_net,
      b => mult2_p_net,
      ce => ce_1_sg_x167,
      clk => clk_1_sg_x167,
      clr => '0',
      s => addsub_s_net
    );

  addsub1: entity work.addsub_eb2273ac28
    port map (
      a => mult1_p_net,
      b => mult3_p_net,
      ce => ce_1_sg_x167,
      clk => clk_1_sg_x167,
      clr => '0',
      s => addsub1_s_net
    );

  c_to_ri1_7c7524c094: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay0_q_net_x0,
      im => force_im_output_port_net_x3,
      re => force_re_output_port_net_x3
    );

  c_to_ri2_178bbcd90a: entity work.c_to_ri2_entity_e1b86f6b2f
    port map (
      c => concat_y_net_x2,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  c_to_ri3_81ea9f9976: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay1_q_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  coeff_gen_8e9682e162: entity work.coeff_gen_entity_8e9682e162
    port map (
      ce_1 => ce_1_sg_x167,
      clk_1 => clk_1_sg_x167,
      rst => mux_y_net_x2,
      w => concat_y_net_x2
    );

  convert0: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 33,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 22,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x167,
      clk => clk_1_sg_x167,
      clr => '0',
      din => addsub_s_net,
      en => "1",
      dout => convert0_dout_net_x2
    );

  convert1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 33,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 22,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x167,
      clk => clk_1_sg_x167,
      clr => '0',
      din => addsub1_s_net,
      en => "1",
      dout => convert1_dout_net_x2
    );

  delay0: entity work.xldelay
    generic map (
      latency => 10,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x167,
      clk => clk_1_sg_x167,
      d => delay_slr_q_net_x0,
      en => '1',
      rst => '1',
      q => delay0_q_net_x0
    );

  delay1: entity work.delay_4b00a70dea
    port map (
      ce => ce_1_sg_x167,
      clk => clk_1_sg_x167,
      clr => '0',
      d => mux_y_net_x1,
      q => delay1_q_net_x0
    );

  delay2: entity work.xldelay
    generic map (
      latency => 10,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x167,
      clk => clk_1_sg_x167,
      d(0) => mux_y_net_x2,
      en => '1',
      rst => '1',
      q(0) => delay2_q_net_x0
    );

  mult: entity work.mult_cfc8c45902
    port map (
      a => force_re_output_port_net_x1,
      b => force_re_output_port_net_x0,
      ce => ce_1_sg_x167,
      clk => clk_1_sg_x167,
      clr => '0',
      p => mult_p_net
    );

  mult1: entity work.mult_cfc8c45902
    port map (
      a => force_im_output_port_net_x1,
      b => force_re_output_port_net_x0,
      ce => ce_1_sg_x167,
      clk => clk_1_sg_x167,
      clr => '0',
      p => mult1_p_net
    );

  mult2: entity work.mult_cfc8c45902
    port map (
      a => force_im_output_port_net_x1,
      b => force_im_output_port_net_x0,
      ce => ce_1_sg_x167,
      clk => clk_1_sg_x167,
      clr => '0',
      p => mult2_p_net
    );

  mult3: entity work.mult_cfc8c45902
    port map (
      a => force_re_output_port_net_x1,
      b => force_im_output_port_net_x0,
      ce => ce_1_sg_x167,
      clk => clk_1_sg_x167,
      clr => '0',
      p => mult3_p_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_6/butterfly_direct"

entity butterfly_direct_entity_42faa5a3b6 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    a_bw_x0: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly_direct_entity_42faa5a3b6;

architecture structural of butterfly_direct_entity_42faa5a3b6 is
  signal adder_s_net_x3: std_logic_vector(17 downto 0);
  signal adder_s_net_x4: std_logic_vector(17 downto 0);
  signal adder_s_net_x5: std_logic_vector(17 downto 0);
  signal adder_s_net_x6: std_logic_vector(17 downto 0);
  signal and_y_net_x0: std_logic;
  signal and_y_net_x1: std_logic;
  signal and_y_net_x2: std_logic;
  signal and_y_net_x3: std_logic;
  signal cast_c_im_dout_net_x0: std_logic_vector(22 downto 0);
  signal cast_c_im_dout_net_x1: std_logic_vector(22 downto 0);
  signal cast_c_re_dout_net_x0: std_logic_vector(22 downto 0);
  signal cast_c_re_dout_net_x1: std_logic_vector(22 downto 0);
  signal ce_1_sg_x168: std_logic;
  signal clk_1_sg_x168: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal concat_y_net_x3: std_logic_vector(35 downto 0);
  signal convert0_dout_net_x2: std_logic_vector(21 downto 0);
  signal convert1_dout_net_x2: std_logic_vector(21 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay_slr_q_net_x1: std_logic_vector(35 downto 0);
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal logical_y_net_x0: std_logic;
  signal mux0_y_net_x1: std_logic_vector(23 downto 0);
  signal mux1_y_net_x1: std_logic_vector(23 downto 0);
  signal mux2_y_net_x1: std_logic_vector(23 downto 0);
  signal mux3_y_net_x1: std_logic_vector(23 downto 0);
  signal mux_y_net_x3: std_logic_vector(35 downto 0);
  signal mux_y_net_x4: std_logic;
  signal scale0_op_net: std_logic_vector(22 downto 0);
  signal scale1_op_net: std_logic_vector(22 downto 0);
  signal scale2_op_net: std_logic_vector(22 downto 0);
  signal scale3_op_net: std_logic_vector(22 downto 0);
  signal shift_delay_q_net: std_logic;
  signal slice_y_net_x0: std_logic;
  signal sync_delay_q_net_x0: std_logic;

begin
  delay_slr_q_net_x1 <= a;
  mux_y_net_x3 <= b;
  ce_1_sg_x168 <= ce_1;
  clk_1_sg_x168 <= clk_1;
  slice_y_net_x0 <= shift;
  mux_y_net_x4 <= sync;
  a_bw <= concat_y_net_x2;
  a_bw_x0 <= concat_y_net_x3;
  of_x0 <= logical_y_net_x0;
  sync_out <= sync_delay_q_net_x0;

  cadd_3f04234e6d: entity work.cadd_entity_bd220e7516
    port map (
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      b_im => convert1_dout_net_x2,
      b_re => convert0_dout_net_x2,
      ce_1 => ce_1_sg_x168,
      clk_1 => clk_1_sg_x168,
      c_im => cast_c_im_dout_net_x0,
      c_re => cast_c_re_dout_net_x0
    );

  convert_of0_0da5cbaf09: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x168,
      clk_1 => clk_1_sg_x168,
      din => mux0_y_net_x1,
      dout => adder_s_net_x3,
      of_x0 => and_y_net_x0
    );

  convert_of1_1d7009331b: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x168,
      clk_1 => clk_1_sg_x168,
      din => mux1_y_net_x1,
      dout => adder_s_net_x4,
      of_x0 => and_y_net_x1
    );

  convert_of2_9554dda80c: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x168,
      clk_1 => clk_1_sg_x168,
      din => mux2_y_net_x1,
      dout => adder_s_net_x5,
      of_x0 => and_y_net_x2
    );

  convert_of3_b3497d44dc: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x168,
      clk_1 => clk_1_sg_x168,
      din => mux3_y_net_x1,
      dout => adder_s_net_x6,
      of_x0 => and_y_net_x3
    );

  csub_4493c440dd: entity work.csub_entity_394eae4754
    port map (
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      b_im => convert1_dout_net_x2,
      b_re => convert0_dout_net_x2,
      ce_1 => ce_1_sg_x168,
      clk_1 => clk_1_sg_x168,
      c_im => cast_c_im_dout_net_x1,
      c_re => cast_c_re_dout_net_x1
    );

  logical: entity work.logical_a6d07705dd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => and_y_net_x0,
      d1(0) => and_y_net_x1,
      d2(0) => and_y_net_x2,
      d3(0) => and_y_net_x3,
      y(0) => logical_y_net_x0
    );

  mux0: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x168,
      clk => clk_1_sg_x168,
      clr => '0',
      d0 => cast_c_re_dout_net_x0,
      d1 => scale0_op_net,
      sel(0) => shift_delay_q_net,
      y => mux0_y_net_x1
    );

  mux1: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x168,
      clk => clk_1_sg_x168,
      clr => '0',
      d0 => cast_c_im_dout_net_x0,
      d1 => scale1_op_net,
      sel(0) => shift_delay_q_net,
      y => mux1_y_net_x1
    );

  mux2: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x168,
      clk => clk_1_sg_x168,
      clr => '0',
      d0 => cast_c_re_dout_net_x1,
      d1 => scale2_op_net,
      sel(0) => shift_delay_q_net,
      y => mux2_y_net_x1
    );

  mux3: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x168,
      clk => clk_1_sg_x168,
      clr => '0',
      d0 => cast_c_im_dout_net_x1,
      d1 => scale3_op_net,
      sel(0) => shift_delay_q_net,
      y => mux3_y_net_x1
    );

  ri_to_c01_f98320e85e: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => adder_s_net_x4,
      re => adder_s_net_x3,
      c => concat_y_net_x2
    );

  ri_to_c23_10015ecac3: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => adder_s_net_x6,
      re => adder_s_net_x5,
      c => concat_y_net_x3
    );

  scale0: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x0,
      op => scale0_op_net
    );

  scale1: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x0,
      op => scale1_op_net
    );

  scale2: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x1,
      op => scale2_op_net
    );

  scale3: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x1,
      op => scale3_op_net
    );

  shift_delay: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x168,
      clk => clk_1_sg_x168,
      d(0) => slice_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => shift_delay_q_net
    );

  sync_delay: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x168,
      clk => clk_1_sg_x168,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => sync_delay_q_net_x0
    );

  twiddle_general_4mult_de42a8054e: entity work.twiddle_general_4mult_entity_de42a8054e
    port map (
      a => delay_slr_q_net_x1,
      b => mux_y_net_x3,
      ce_1 => ce_1_sg_x168,
      clk_1 => clk_1_sg_x168,
      sync => mux_y_net_x4,
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      bw_im => convert1_dout_net_x2,
      bw_re => convert0_dout_net_x2,
      sync_out => delay2_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_6/delay_b"

entity delay_b_entity_b466295e6d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    out1: out std_logic_vector(35 downto 0)
  );
end delay_b_entity_b466295e6d;

architecture structural of delay_b_entity_b466295e6d is
  signal ce_1_sg_x169: std_logic;
  signal clk_1_sg_x169: std_logic;
  signal delay_slr_q_net_x2: std_logic_vector(35 downto 0);
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x169 <= ce_1;
  clk_1_sg_x169 <= clk_1;
  mux1_y_net_x0 <= in1;
  out1 <= delay_slr_q_net_x2;

  delay_slr: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x169,
      clk => clk_1_sg_x169,
      d => mux1_y_net_x0,
      en => '1',
      rst => '1',
      q => delay_slr_q_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_6/sync_delay"

entity sync_delay_entity_cf1f4c0073 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_cf1f4c0073;

architecture structural of sync_delay_entity_cf1f4c0073 is
  signal ce_1_sg_x171: std_logic;
  signal clk_1_sg_x171: std_logic;
  signal constant1_op_net: std_logic_vector(1 downto 0);
  signal constant2_op_net: std_logic_vector(1 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(1 downto 0);
  signal counter_op_net: std_logic_vector(1 downto 0);
  signal delay_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x5: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x171 <= ce_1;
  clk_1_sg_x171 <= clk_1;
  delay_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x5;

  constant1: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_e8ddc079e9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_93187ca4b7bc144e",
      op_arith => xlUnsigned,
      op_width => 2
    )
    port map (
      ce => ce_1_sg_x171,
      clk => clk_1_sg_x171,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => delay_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x5
    );

  relational: entity work.relational_5f1eb17108
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_f9928864ea
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_6"

entity fft_stage_6_entity_7e75795901 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    of_in: in std_logic; 
    shift: in std_logic_vector(9 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_6_entity_7e75795901;

architecture structural of fft_stage_6_entity_7e75795901 is
  signal ce_1_sg_x172: std_logic;
  signal clk_1_sg_x172: std_logic;
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concat_y_net_x13: std_logic_vector(35 downto 0);
  signal concat_y_net_x14: std_logic_vector(35 downto 0);
  signal concat_y_net_x4: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(1 downto 0);
  signal delay_q_net_x0: std_logic;
  signal delay_slr_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_slr_q_net_x2: std_logic_vector(35 downto 0);
  signal logical1_y_net_x1: std_logic;
  signal logical1_y_net_x2: std_logic;
  signal logical_y_net_x0: std_logic;
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);
  signal mux_y_net_x3: std_logic_vector(35 downto 0);
  signal mux_y_net_x5: std_logic;
  signal slice1_y_net: std_logic;
  signal slice6_y_net_x5: std_logic_vector(9 downto 0);
  signal slice_y_net_x0: std_logic;
  signal sync_delay_q_net_x4: std_logic;
  signal sync_delay_q_net_x5: std_logic;

begin
  ce_1_sg_x172 <= ce_1;
  clk_1_sg_x172 <= clk_1;
  concat_y_net_x11 <= in1;
  concat_y_net_x13 <= in2;
  logical1_y_net_x1 <= of_in;
  slice6_y_net_x5 <= shift;
  sync_delay_q_net_x4 <= sync;
  of_x0 <= logical1_y_net_x2;
  out1 <= concat_y_net_x4;
  out2 <= concat_y_net_x14;
  sync_out <= sync_delay_q_net_x5;

  butterfly_direct_42faa5a3b6: entity work.butterfly_direct_entity_42faa5a3b6
    port map (
      a => delay_slr_q_net_x2,
      b => mux_y_net_x3,
      ce_1 => ce_1_sg_x172,
      clk_1 => clk_1_sg_x172,
      shift => slice_y_net_x0,
      sync => mux_y_net_x5,
      a_bw => concat_y_net_x4,
      a_bw_x0 => concat_y_net_x14,
      of_x0 => logical_y_net_x0,
      sync_out => sync_delay_q_net_x5
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_263175d139d7ac6d",
      op_arith => xlUnsigned,
      op_width => 2
    )
    port map (
      ce => ce_1_sg_x172,
      clk => clk_1_sg_x172,
      clr => '0',
      en => "1",
      rst(0) => sync_delay_q_net_x4,
      op => counter_op_net
    );

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x172,
      clk => clk_1_sg_x172,
      d(0) => sync_delay_q_net_x4,
      en => '1',
      rst => '1',
      q(0) => delay_q_net_x0
    );

  delay_b_b466295e6d: entity work.delay_b_entity_b466295e6d
    port map (
      ce_1 => ce_1_sg_x172,
      clk_1 => clk_1_sg_x172,
      in1 => mux1_y_net_x0,
      out1 => delay_slr_q_net_x2
    );

  delay_f_c3221eed29: entity work.delay_b_entity_b466295e6d
    port map (
      ce_1 => ce_1_sg_x172,
      clk_1 => clk_1_sg_x172,
      in1 => concat_y_net_x13,
      out1 => delay_slr_q_net_x0
    );

  logical1: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x172,
      clk => clk_1_sg_x172,
      clr => '0',
      d0(0) => logical_y_net_x0,
      d1(0) => logical1_y_net_x1,
      y(0) => logical1_y_net_x2
    );

  mux: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x172,
      clk => clk_1_sg_x172,
      clr => '0',
      d0 => delay_slr_q_net_x0,
      d1 => concat_y_net_x11,
      sel(0) => slice1_y_net,
      y => mux_y_net_x3
    );

  mux1: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x172,
      clk => clk_1_sg_x172,
      clr => '0',
      d0 => concat_y_net_x11,
      d1 => delay_slr_q_net_x0,
      sel(0) => slice1_y_net,
      y => mux1_y_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 5,
      x_width => 10,
      y_width => 1
    )
    port map (
      x => slice6_y_net_x5,
      y(0) => slice_y_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_cf1f4c0073: entity work.sync_delay_entity_cf1f4c0073
    port map (
      ce_1 => ce_1_sg_x172,
      clk_1 => clk_1_sg_x172,
      in_x0 => delay_q_net_x0,
      out_x0 => mux_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_7/butterfly_direct/twiddle_general_4mult/coeff_gen"

entity coeff_gen_entity_14d6df8e1f is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    rst: in std_logic; 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_14d6df8e1f;

architecture structural of coeff_gen_entity_14d6df8e1f is
  signal ce_1_sg_x183: std_logic;
  signal clk_1_sg_x183: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(5 downto 0);
  signal mux_y_net_x0: std_logic;
  signal rom1_data_net_x0: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(17 downto 0);
  signal slice_y_net: std_logic_vector(5 downto 0);

begin
  ce_1_sg_x183 <= ce_1;
  clk_1_sg_x183 <= clk_1;
  mux_y_net_x0 <= rst;
  w <= concat_y_net_x2;

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_50ef766046ea9bf4",
      op_arith => xlUnsigned,
      op_width => 6
    )
    port map (
      ce => ce_1_sg_x183,
      clk => clk_1_sg_x183,
      clr => '0',
      en => "1",
      rst(0) => mux_y_net_x0,
      op => counter_op_net
    );

  ri_to_c_f448b4722e: entity work.ri_to_c_entity_2abbfa7cd7
    port map (
      im => rom1_data_net_x0,
      re => rom_data_net_x0,
      c => concat_y_net_x2
    );

  rom: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 6,
      c_width => 18,
      core_name0 => "bmg_72_05b952b0e97b2a0d",
      latency => 2
    )
    port map (
      addr => slice_y_net,
      ce => ce_1_sg_x183,
      clk => clk_1_sg_x183,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

  rom1: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 6,
      c_width => 18,
      core_name0 => "bmg_72_04e0d9cde0f49a3d",
      latency => 2
    )
    port map (
      addr => slice_y_net,
      ce => ce_1_sg_x183,
      clk => clk_1_sg_x183,
      en => "1",
      rst => "0",
      data => rom1_data_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 5,
      x_width => 6,
      y_width => 6
    )
    port map (
      x => counter_op_net,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_7/butterfly_direct/twiddle_general_4mult"

entity twiddle_general_4mult_entity_00c35e5a44 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync: in std_logic; 
    a_im: out std_logic_vector(17 downto 0); 
    a_re: out std_logic_vector(17 downto 0); 
    bw_im: out std_logic_vector(21 downto 0); 
    bw_re: out std_logic_vector(21 downto 0); 
    sync_out: out std_logic
  );
end twiddle_general_4mult_entity_00c35e5a44;

architecture structural of twiddle_general_4mult_entity_00c35e5a44 is
  signal addsub1_s_net: std_logic_vector(36 downto 0);
  signal addsub_s_net: std_logic_vector(36 downto 0);
  signal ce_1_sg_x184: std_logic;
  signal clk_1_sg_x184: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal convert0_dout_net_x2: std_logic_vector(21 downto 0);
  signal convert1_dout_net_x2: std_logic_vector(21 downto 0);
  signal delay0_q_net_x0: std_logic_vector(35 downto 0);
  signal delay1_q_net_x0: std_logic_vector(35 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay_slr_q_net_x0: std_logic_vector(35 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal mult1_p_net: std_logic_vector(35 downto 0);
  signal mult2_p_net: std_logic_vector(35 downto 0);
  signal mult3_p_net: std_logic_vector(35 downto 0);
  signal mult_p_net: std_logic_vector(35 downto 0);
  signal mux_y_net_x1: std_logic_vector(35 downto 0);
  signal mux_y_net_x2: std_logic;

begin
  delay_slr_q_net_x0 <= a;
  mux_y_net_x1 <= b;
  ce_1_sg_x184 <= ce_1;
  clk_1_sg_x184 <= clk_1;
  mux_y_net_x2 <= sync;
  a_im <= force_im_output_port_net_x3;
  a_re <= force_re_output_port_net_x3;
  bw_im <= convert1_dout_net_x2;
  bw_re <= convert0_dout_net_x2;
  sync_out <= delay2_q_net_x0;

  addsub: entity work.addsub_be8c56327e
    port map (
      a => mult_p_net,
      b => mult2_p_net,
      ce => ce_1_sg_x184,
      clk => clk_1_sg_x184,
      clr => '0',
      s => addsub_s_net
    );

  addsub1: entity work.addsub_eb2273ac28
    port map (
      a => mult1_p_net,
      b => mult3_p_net,
      ce => ce_1_sg_x184,
      clk => clk_1_sg_x184,
      clr => '0',
      s => addsub1_s_net
    );

  c_to_ri1_f57407f108: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay0_q_net_x0,
      im => force_im_output_port_net_x3,
      re => force_re_output_port_net_x3
    );

  c_to_ri2_1555be101b: entity work.c_to_ri2_entity_e1b86f6b2f
    port map (
      c => concat_y_net_x2,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  c_to_ri3_f3550db891: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay1_q_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  coeff_gen_14d6df8e1f: entity work.coeff_gen_entity_14d6df8e1f
    port map (
      ce_1 => ce_1_sg_x184,
      clk_1 => clk_1_sg_x184,
      rst => mux_y_net_x2,
      w => concat_y_net_x2
    );

  convert0: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 33,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 22,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x184,
      clk => clk_1_sg_x184,
      clr => '0',
      din => addsub_s_net,
      en => "1",
      dout => convert0_dout_net_x2
    );

  convert1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 33,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 22,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x184,
      clk => clk_1_sg_x184,
      clr => '0',
      din => addsub1_s_net,
      en => "1",
      dout => convert1_dout_net_x2
    );

  delay0: entity work.xldelay
    generic map (
      latency => 10,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x184,
      clk => clk_1_sg_x184,
      d => delay_slr_q_net_x0,
      en => '1',
      rst => '1',
      q => delay0_q_net_x0
    );

  delay1: entity work.delay_4b00a70dea
    port map (
      ce => ce_1_sg_x184,
      clk => clk_1_sg_x184,
      clr => '0',
      d => mux_y_net_x1,
      q => delay1_q_net_x0
    );

  delay2: entity work.xldelay
    generic map (
      latency => 10,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x184,
      clk => clk_1_sg_x184,
      d(0) => mux_y_net_x2,
      en => '1',
      rst => '1',
      q(0) => delay2_q_net_x0
    );

  mult: entity work.mult_cfc8c45902
    port map (
      a => force_re_output_port_net_x1,
      b => force_re_output_port_net_x0,
      ce => ce_1_sg_x184,
      clk => clk_1_sg_x184,
      clr => '0',
      p => mult_p_net
    );

  mult1: entity work.mult_cfc8c45902
    port map (
      a => force_im_output_port_net_x1,
      b => force_re_output_port_net_x0,
      ce => ce_1_sg_x184,
      clk => clk_1_sg_x184,
      clr => '0',
      p => mult1_p_net
    );

  mult2: entity work.mult_cfc8c45902
    port map (
      a => force_im_output_port_net_x1,
      b => force_im_output_port_net_x0,
      ce => ce_1_sg_x184,
      clk => clk_1_sg_x184,
      clr => '0',
      p => mult2_p_net
    );

  mult3: entity work.mult_cfc8c45902
    port map (
      a => force_re_output_port_net_x1,
      b => force_im_output_port_net_x0,
      ce => ce_1_sg_x184,
      clk => clk_1_sg_x184,
      clr => '0',
      p => mult3_p_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_7/butterfly_direct"

entity butterfly_direct_entity_82622f77fc is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    a_bw_x0: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly_direct_entity_82622f77fc;

architecture structural of butterfly_direct_entity_82622f77fc is
  signal adder_s_net_x3: std_logic_vector(17 downto 0);
  signal adder_s_net_x4: std_logic_vector(17 downto 0);
  signal adder_s_net_x5: std_logic_vector(17 downto 0);
  signal adder_s_net_x6: std_logic_vector(17 downto 0);
  signal and_y_net_x0: std_logic;
  signal and_y_net_x1: std_logic;
  signal and_y_net_x2: std_logic;
  signal and_y_net_x3: std_logic;
  signal cast_c_im_dout_net_x0: std_logic_vector(22 downto 0);
  signal cast_c_im_dout_net_x1: std_logic_vector(22 downto 0);
  signal cast_c_re_dout_net_x0: std_logic_vector(22 downto 0);
  signal cast_c_re_dout_net_x1: std_logic_vector(22 downto 0);
  signal ce_1_sg_x185: std_logic;
  signal clk_1_sg_x185: std_logic;
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concat_y_net_x12: std_logic_vector(35 downto 0);
  signal convert0_dout_net_x2: std_logic_vector(21 downto 0);
  signal convert1_dout_net_x2: std_logic_vector(21 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay_slr_q_net_x1: std_logic_vector(35 downto 0);
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal logical_y_net_x0: std_logic;
  signal mux0_y_net_x1: std_logic_vector(23 downto 0);
  signal mux1_y_net_x1: std_logic_vector(23 downto 0);
  signal mux2_y_net_x1: std_logic_vector(23 downto 0);
  signal mux3_y_net_x1: std_logic_vector(23 downto 0);
  signal mux_y_net_x3: std_logic_vector(35 downto 0);
  signal mux_y_net_x4: std_logic;
  signal scale0_op_net: std_logic_vector(22 downto 0);
  signal scale1_op_net: std_logic_vector(22 downto 0);
  signal scale2_op_net: std_logic_vector(22 downto 0);
  signal scale3_op_net: std_logic_vector(22 downto 0);
  signal shift_delay_q_net: std_logic;
  signal slice_y_net_x0: std_logic;
  signal sync_delay_q_net_x3: std_logic;

begin
  delay_slr_q_net_x1 <= a;
  mux_y_net_x3 <= b;
  ce_1_sg_x185 <= ce_1;
  clk_1_sg_x185 <= clk_1;
  slice_y_net_x0 <= shift;
  mux_y_net_x4 <= sync;
  a_bw <= concat_y_net_x11;
  a_bw_x0 <= concat_y_net_x12;
  of_x0 <= logical_y_net_x0;
  sync_out <= sync_delay_q_net_x3;

  cadd_c438498f13: entity work.cadd_entity_bd220e7516
    port map (
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      b_im => convert1_dout_net_x2,
      b_re => convert0_dout_net_x2,
      ce_1 => ce_1_sg_x185,
      clk_1 => clk_1_sg_x185,
      c_im => cast_c_im_dout_net_x0,
      c_re => cast_c_re_dout_net_x0
    );

  convert_of0_21ea647b07: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x185,
      clk_1 => clk_1_sg_x185,
      din => mux0_y_net_x1,
      dout => adder_s_net_x3,
      of_x0 => and_y_net_x0
    );

  convert_of1_90fb63505d: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x185,
      clk_1 => clk_1_sg_x185,
      din => mux1_y_net_x1,
      dout => adder_s_net_x4,
      of_x0 => and_y_net_x1
    );

  convert_of2_0dba853999: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x185,
      clk_1 => clk_1_sg_x185,
      din => mux2_y_net_x1,
      dout => adder_s_net_x5,
      of_x0 => and_y_net_x2
    );

  convert_of3_143c683b1a: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x185,
      clk_1 => clk_1_sg_x185,
      din => mux3_y_net_x1,
      dout => adder_s_net_x6,
      of_x0 => and_y_net_x3
    );

  csub_dd1d1952b1: entity work.csub_entity_394eae4754
    port map (
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      b_im => convert1_dout_net_x2,
      b_re => convert0_dout_net_x2,
      ce_1 => ce_1_sg_x185,
      clk_1 => clk_1_sg_x185,
      c_im => cast_c_im_dout_net_x1,
      c_re => cast_c_re_dout_net_x1
    );

  logical: entity work.logical_a6d07705dd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => and_y_net_x0,
      d1(0) => and_y_net_x1,
      d2(0) => and_y_net_x2,
      d3(0) => and_y_net_x3,
      y(0) => logical_y_net_x0
    );

  mux0: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x185,
      clk => clk_1_sg_x185,
      clr => '0',
      d0 => cast_c_re_dout_net_x0,
      d1 => scale0_op_net,
      sel(0) => shift_delay_q_net,
      y => mux0_y_net_x1
    );

  mux1: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x185,
      clk => clk_1_sg_x185,
      clr => '0',
      d0 => cast_c_im_dout_net_x0,
      d1 => scale1_op_net,
      sel(0) => shift_delay_q_net,
      y => mux1_y_net_x1
    );

  mux2: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x185,
      clk => clk_1_sg_x185,
      clr => '0',
      d0 => cast_c_re_dout_net_x1,
      d1 => scale2_op_net,
      sel(0) => shift_delay_q_net,
      y => mux2_y_net_x1
    );

  mux3: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x185,
      clk => clk_1_sg_x185,
      clr => '0',
      d0 => cast_c_im_dout_net_x1,
      d1 => scale3_op_net,
      sel(0) => shift_delay_q_net,
      y => mux3_y_net_x1
    );

  ri_to_c01_c8c1f5c1e0: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => adder_s_net_x4,
      re => adder_s_net_x3,
      c => concat_y_net_x11
    );

  ri_to_c23_d87fcdeb81: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => adder_s_net_x6,
      re => adder_s_net_x5,
      c => concat_y_net_x12
    );

  scale0: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x0,
      op => scale0_op_net
    );

  scale1: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x0,
      op => scale1_op_net
    );

  scale2: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x1,
      op => scale2_op_net
    );

  scale3: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x1,
      op => scale3_op_net
    );

  shift_delay: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x185,
      clk => clk_1_sg_x185,
      d(0) => slice_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => shift_delay_q_net
    );

  sync_delay: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x185,
      clk => clk_1_sg_x185,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => sync_delay_q_net_x3
    );

  twiddle_general_4mult_00c35e5a44: entity work.twiddle_general_4mult_entity_00c35e5a44
    port map (
      a => delay_slr_q_net_x1,
      b => mux_y_net_x3,
      ce_1 => ce_1_sg_x185,
      clk_1 => clk_1_sg_x185,
      sync => mux_y_net_x4,
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      bw_im => convert1_dout_net_x2,
      bw_re => convert0_dout_net_x2,
      sync_out => delay2_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_7/delay_b"

entity delay_b_entity_512883e072 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    out1: out std_logic_vector(35 downto 0)
  );
end delay_b_entity_512883e072;

architecture structural of delay_b_entity_512883e072 is
  signal ce_1_sg_x186: std_logic;
  signal clk_1_sg_x186: std_logic;
  signal delay_slr_q_net_x2: std_logic_vector(35 downto 0);
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x186 <= ce_1;
  clk_1_sg_x186 <= clk_1;
  mux1_y_net_x0 <= in1;
  out1 <= delay_slr_q_net_x2;

  delay_slr: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x186,
      clk => clk_1_sg_x186,
      d => mux1_y_net_x0,
      en => '1',
      rst => '1',
      q => delay_slr_q_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_7/sync_delay"

entity sync_delay_entity_11d0f399ba is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_11d0f399ba;

architecture structural of sync_delay_entity_11d0f399ba is
  signal ce_1_sg_x188: std_logic;
  signal clk_1_sg_x188: std_logic;
  signal constant1_op_net: std_logic_vector(1 downto 0);
  signal constant2_op_net: std_logic_vector(1 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(1 downto 0);
  signal counter_op_net: std_logic_vector(1 downto 0);
  signal delay_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x5: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x188 <= ce_1;
  clk_1_sg_x188 <= clk_1;
  delay_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x5;

  constant1: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_93187ca4b7bc144e",
      op_arith => xlUnsigned,
      op_width => 2
    )
    port map (
      ce => ce_1_sg_x188,
      clk => clk_1_sg_x188,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => delay_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x5
    );

  relational: entity work.relational_5f1eb17108
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_f9928864ea
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core/fft_stage_7"

entity fft_stage_7_entity_5823de238c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    of_in: in std_logic; 
    shift: in std_logic_vector(9 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_7_entity_5823de238c;

architecture structural of fft_stage_7_entity_5823de238c is
  signal ce_1_sg_x189: std_logic;
  signal clk_1_sg_x189: std_logic;
  signal concat_y_net_x13: std_logic_vector(35 downto 0);
  signal concat_y_net_x16: std_logic_vector(35 downto 0);
  signal concat_y_net_x17: std_logic_vector(35 downto 0);
  signal concat_y_net_x18: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic;
  signal delay_q_net_x0: std_logic;
  signal delay_slr_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_slr_q_net_x2: std_logic_vector(35 downto 0);
  signal logical1_y_net_x0: std_logic;
  signal logical1_y_net_x3: std_logic;
  signal logical_y_net_x0: std_logic;
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);
  signal mux_y_net_x3: std_logic_vector(35 downto 0);
  signal mux_y_net_x5: std_logic;
  signal slice1_y_net: std_logic;
  signal slice6_y_net_x6: std_logic_vector(9 downto 0);
  signal slice_y_net_x0: std_logic;
  signal sync_delay_q_net_x6: std_logic;
  signal sync_delay_q_net_x7: std_logic;

begin
  ce_1_sg_x189 <= ce_1;
  clk_1_sg_x189 <= clk_1;
  concat_y_net_x16 <= in1;
  concat_y_net_x17 <= in2;
  logical1_y_net_x3 <= of_in;
  slice6_y_net_x6 <= shift;
  sync_delay_q_net_x6 <= sync;
  of_x0 <= logical1_y_net_x0;
  out1 <= concat_y_net_x13;
  out2 <= concat_y_net_x18;
  sync_out <= sync_delay_q_net_x7;

  butterfly_direct_82622f77fc: entity work.butterfly_direct_entity_82622f77fc
    port map (
      a => delay_slr_q_net_x2,
      b => mux_y_net_x3,
      ce_1 => ce_1_sg_x189,
      clk_1 => clk_1_sg_x189,
      shift => slice_y_net_x0,
      sync => mux_y_net_x5,
      a_bw => concat_y_net_x13,
      a_bw_x0 => concat_y_net_x18,
      of_x0 => logical_y_net_x0,
      sync_out => sync_delay_q_net_x7
    );

  counter: entity work.counter_223a0f3237
    port map (
      ce => ce_1_sg_x189,
      clk => clk_1_sg_x189,
      clr => '0',
      rst(0) => sync_delay_q_net_x6,
      op(0) => counter_op_net
    );

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x189,
      clk => clk_1_sg_x189,
      d(0) => sync_delay_q_net_x6,
      en => '1',
      rst => '1',
      q(0) => delay_q_net_x0
    );

  delay_b_512883e072: entity work.delay_b_entity_512883e072
    port map (
      ce_1 => ce_1_sg_x189,
      clk_1 => clk_1_sg_x189,
      in1 => mux1_y_net_x0,
      out1 => delay_slr_q_net_x2
    );

  delay_f_57cf16aa10: entity work.delay_b_entity_512883e072
    port map (
      ce_1 => ce_1_sg_x189,
      clk_1 => clk_1_sg_x189,
      in1 => concat_y_net_x17,
      out1 => delay_slr_q_net_x0
    );

  logical1: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x189,
      clk => clk_1_sg_x189,
      clr => '0',
      d0(0) => logical_y_net_x0,
      d1(0) => logical1_y_net_x3,
      y(0) => logical1_y_net_x0
    );

  mux: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x189,
      clk => clk_1_sg_x189,
      clr => '0',
      d0 => delay_slr_q_net_x0,
      d1 => concat_y_net_x16,
      sel(0) => slice1_y_net,
      y => mux_y_net_x3
    );

  mux1: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x189,
      clk => clk_1_sg_x189,
      clr => '0',
      d0 => concat_y_net_x16,
      d1 => delay_slr_q_net_x0,
      sel(0) => slice1_y_net,
      y => mux1_y_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 6,
      x_width => 10,
      y_width => 1
    )
    port map (
      x => slice6_y_net_x6,
      y(0) => slice_y_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 1,
      y_width => 1
    )
    port map (
      x(0) => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_11d0f399ba: entity work.sync_delay_entity_11d0f399ba
    port map (
      ce_1 => ce_1_sg_x189,
      clk_1 => clk_1_sg_x189,
      in_x0 => delay_q_net_x0,
      out_x0 => mux_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0/biplex_core"

entity biplex_core_entity_ce6e11ad41 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pol1: in std_logic_vector(35 downto 0); 
    pol2: in std_logic_vector(35 downto 0); 
    shift: in std_logic_vector(9 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end biplex_core_entity_ce6e11ad41;

architecture structural of biplex_core_entity_ce6e11ad41 is
  signal ce_1_sg_x190: std_logic;
  signal clk_1_sg_x190: std_logic;
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concat_y_net_x12: std_logic_vector(35 downto 0);
  signal concat_y_net_x13: std_logic_vector(35 downto 0);
  signal concat_y_net_x16: std_logic_vector(35 downto 0);
  signal concat_y_net_x17: std_logic_vector(35 downto 0);
  signal concat_y_net_x18: std_logic_vector(35 downto 0);
  signal concat_y_net_x19: std_logic_vector(35 downto 0);
  signal concat_y_net_x20: std_logic_vector(35 downto 0);
  signal concat_y_net_x24: std_logic_vector(35 downto 0);
  signal concat_y_net_x25: std_logic_vector(35 downto 0);
  signal concat_y_net_x26: std_logic_vector(35 downto 0);
  signal concat_y_net_x27: std_logic_vector(35 downto 0);
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concat_y_net_x7: std_logic_vector(35 downto 0);
  signal concat_y_net_x8: std_logic_vector(35 downto 0);
  signal concat_y_net_x9: std_logic_vector(35 downto 0);
  signal constant_op_net_x0: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical1_y_net_x2: std_logic;
  signal logical1_y_net_x3: std_logic;
  signal logical1_y_net_x4: std_logic;
  signal logical1_y_net_x5: std_logic;
  signal logical1_y_net_x6: std_logic;
  signal logical1_y_net_x7: std_logic;
  signal register0_q_net_x1: std_logic;
  signal slice6_y_net_x7: std_logic_vector(9 downto 0);
  signal sync_delay_q_net_x2: std_logic;
  signal sync_delay_q_net_x3: std_logic;
  signal sync_delay_q_net_x4: std_logic;
  signal sync_delay_q_net_x5: std_logic;
  signal sync_delay_q_net_x6: std_logic;
  signal sync_delay_q_net_x7: std_logic;
  signal sync_delay_q_net_x9: std_logic;

begin
  ce_1_sg_x190 <= ce_1;
  clk_1_sg_x190 <= clk_1;
  concat_y_net_x24 <= pol1;
  concat_y_net_x25 <= pol2;
  slice6_y_net_x7 <= shift;
  register0_q_net_x1 <= sync;
  of_x0 <= logical1_y_net_x7;
  out1 <= concat_y_net_x26;
  out2 <= concat_y_net_x27;
  sync_out <= sync_delay_q_net_x9;

  constant_x0: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net_x0
    );

  fft_stage_1_7a0acaf727: entity work.fft_stage_1_entity_7a0acaf727
    port map (
      ce_1 => ce_1_sg_x190,
      clk_1 => clk_1_sg_x190,
      in1 => concat_y_net_x24,
      in2 => concat_y_net_x25,
      of_in => constant_op_net_x0,
      shift => slice6_y_net_x7,
      sync => register0_q_net_x1,
      of_x0 => logical1_y_net_x1,
      out1 => concat_y_net_x7,
      out2 => concat_y_net_x9,
      sync_out => sync_delay_q_net_x2
    );

  fft_stage_2_3adc821d91: entity work.fft_stage_2_entity_3adc821d91
    port map (
      ce_1 => ce_1_sg_x190,
      clk_1 => clk_1_sg_x190,
      in1 => concat_y_net_x7,
      in2 => concat_y_net_x9,
      of_in => logical1_y_net_x1,
      shift => slice6_y_net_x7,
      sync => sync_delay_q_net_x2,
      of_x0 => logical1_y_net_x3,
      out1 => concat_y_net_x11,
      out2 => concat_y_net_x13,
      sync_out => sync_delay_q_net_x4
    );

  fft_stage_3_aa15e84fae: entity work.fft_stage_3_entity_aa15e84fae
    port map (
      ce_1 => ce_1_sg_x190,
      clk_1 => clk_1_sg_x190,
      in1 => concat_y_net_x11,
      in2 => concat_y_net_x13,
      of_in => logical1_y_net_x3,
      shift => slice6_y_net_x7,
      sync => sync_delay_q_net_x4,
      of_x0 => logical1_y_net_x2,
      out1 => concat_y_net_x5,
      out2 => concat_y_net_x16,
      sync_out => sync_delay_q_net_x6
    );

  fft_stage_4_f91b655483: entity work.fft_stage_4_entity_f91b655483
    port map (
      ce_1 => ce_1_sg_x190,
      clk_1 => clk_1_sg_x190,
      in1 => concat_y_net_x5,
      in2 => concat_y_net_x16,
      of_in => logical1_y_net_x2,
      shift => slice6_y_net_x7,
      sync => sync_delay_q_net_x6,
      of_x0 => logical1_y_net_x4,
      out1 => concat_y_net_x8,
      out2 => concat_y_net_x17,
      sync_out => sync_delay_q_net_x3
    );

  fft_stage_5_f0b8f37405: entity work.fft_stage_5_entity_f0b8f37405
    port map (
      ce_1 => ce_1_sg_x190,
      clk_1 => clk_1_sg_x190,
      in1 => concat_y_net_x8,
      in2 => concat_y_net_x17,
      of_in => logical1_y_net_x4,
      shift => slice6_y_net_x7,
      sync => sync_delay_q_net_x3,
      of_x0 => logical1_y_net_x5,
      out1 => concat_y_net_x12,
      out2 => concat_y_net_x18,
      sync_out => sync_delay_q_net_x5
    );

  fft_stage_6_7e75795901: entity work.fft_stage_6_entity_7e75795901
    port map (
      ce_1 => ce_1_sg_x190,
      clk_1 => clk_1_sg_x190,
      in1 => concat_y_net_x12,
      in2 => concat_y_net_x18,
      of_in => logical1_y_net_x5,
      shift => slice6_y_net_x7,
      sync => sync_delay_q_net_x5,
      of_x0 => logical1_y_net_x6,
      out1 => concat_y_net_x19,
      out2 => concat_y_net_x20,
      sync_out => sync_delay_q_net_x7
    );

  fft_stage_7_5823de238c: entity work.fft_stage_7_entity_5823de238c
    port map (
      ce_1 => ce_1_sg_x190,
      clk_1 => clk_1_sg_x190,
      in1 => concat_y_net_x19,
      in2 => concat_y_net_x20,
      of_in => logical1_y_net_x6,
      shift => slice6_y_net_x7,
      sync => sync_delay_q_net_x7,
      of_x0 => logical1_y_net_x7,
      out1 => concat_y_net_x26,
      out2 => concat_y_net_x27,
      sync_out => sync_delay_q_net_x9
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_biplex_real_4x0"

entity fft_biplex_real_4x0_entity_d1b89c22a9 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pol1: in std_logic_vector(17 downto 0); 
    pol2: in std_logic_vector(17 downto 0); 
    pol3: in std_logic_vector(17 downto 0); 
    pol4: in std_logic_vector(17 downto 0); 
    shift: in std_logic_vector(9 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    pol1_out: out std_logic_vector(35 downto 0); 
    pol2_out: out std_logic_vector(35 downto 0); 
    pol3_out: out std_logic_vector(35 downto 0); 
    pol4_out: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_biplex_real_4x0_entity_d1b89c22a9;

architecture structural of fft_biplex_real_4x0_entity_d1b89c22a9 is
  signal ce_1_sg_x191: std_logic;
  signal clk_1_sg_x191: std_logic;
  signal concat_y_net_x25: std_logic_vector(35 downto 0);
  signal concat_y_net_x26: std_logic_vector(35 downto 0);
  signal concat_y_net_x27: std_logic_vector(35 downto 0);
  signal concat_y_net_x28: std_logic_vector(35 downto 0);
  signal delay2_q_net_x3: std_logic;
  signal logical1_y_net_x8: std_logic;
  signal mux1_y_net_x4: std_logic_vector(35 downto 0);
  signal mux2_y_net_x4: std_logic_vector(35 downto 0);
  signal mux3_y_net_x4: std_logic_vector(35 downto 0);
  signal mux_y_net_x4: std_logic_vector(35 downto 0);
  signal register0_q_net_x10: std_logic;
  signal register0_q_net_x6: std_logic_vector(17 downto 0);
  signal register0_q_net_x7: std_logic_vector(17 downto 0);
  signal register0_q_net_x8: std_logic_vector(17 downto 0);
  signal register0_q_net_x9: std_logic_vector(17 downto 0);
  signal slice6_y_net_x8: std_logic_vector(9 downto 0);
  signal sync_delay_q_net_x9: std_logic;

begin
  ce_1_sg_x191 <= ce_1;
  clk_1_sg_x191 <= clk_1;
  register0_q_net_x6 <= pol1;
  register0_q_net_x7 <= pol2;
  register0_q_net_x8 <= pol3;
  register0_q_net_x9 <= pol4;
  slice6_y_net_x8 <= shift;
  register0_q_net_x10 <= sync;
  of_x0 <= logical1_y_net_x8;
  pol1_out <= mux_y_net_x4;
  pol2_out <= mux1_y_net_x4;
  pol3_out <= mux2_y_net_x4;
  pol4_out <= mux3_y_net_x4;
  sync_out <= delay2_q_net_x3;

  bi_real_unscr_4x_3b8b394f08: entity work.bi_real_unscr_4x_entity_3b8b394f08
    port map (
      ce_1 => ce_1_sg_x191,
      clk_1 => clk_1_sg_x191,
      even => concat_y_net_x26,
      odd => concat_y_net_x27,
      sync => sync_delay_q_net_x9,
      pol1_out => mux_y_net_x4,
      pol2_out => mux1_y_net_x4,
      pol3_out => mux2_y_net_x4,
      pol4_out => mux3_y_net_x4,
      sync_out => delay2_q_net_x3
    );

  biplex_core_ce6e11ad41: entity work.biplex_core_entity_ce6e11ad41
    port map (
      ce_1 => ce_1_sg_x191,
      clk_1 => clk_1_sg_x191,
      pol1 => concat_y_net_x25,
      pol2 => concat_y_net_x28,
      shift => slice6_y_net_x8,
      sync => register0_q_net_x10,
      of_x0 => logical1_y_net_x8,
      out1 => concat_y_net_x26,
      out2 => concat_y_net_x27,
      sync_out => sync_delay_q_net_x9
    );

  ri_to_c0_d1f129f2ff: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => register0_q_net_x7,
      re => register0_q_net_x6,
      c => concat_y_net_x25
    );

  ri_to_c1_a503a6c376: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => register0_q_net_x9,
      re => register0_q_net_x8,
      c => concat_y_net_x28
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_direct/butterfly1_0/twiddle_general_4mult/coeff_gen"

entity coeff_gen_entity_d5f3ccee33 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    rst: in std_logic; 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_d5f3ccee33;

architecture structural of coeff_gen_entity_d5f3ccee33 is
  signal ce_1_sg_x202: std_logic;
  signal clk_1_sg_x202: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(6 downto 0);
  signal register0_q_net_x1: std_logic;
  signal rom1_data_net_x0: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(17 downto 0);
  signal slice_y_net: std_logic_vector(6 downto 0);

begin
  ce_1_sg_x202 <= ce_1;
  clk_1_sg_x202 <= clk_1;
  register0_q_net_x1 <= rst;
  w <= concat_y_net_x2;

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_aeada998ec385fcd",
      op_arith => xlUnsigned,
      op_width => 7
    )
    port map (
      ce => ce_1_sg_x202,
      clk => clk_1_sg_x202,
      clr => '0',
      en => "1",
      rst(0) => register0_q_net_x1,
      op => counter_op_net
    );

  ri_to_c_2ec330cf48: entity work.ri_to_c_entity_2abbfa7cd7
    port map (
      im => rom1_data_net_x0,
      re => rom_data_net_x0,
      c => concat_y_net_x2
    );

  rom: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 7,
      c_width => 18,
      core_name0 => "bmg_72_76e1be4e7480a75f",
      latency => 2
    )
    port map (
      addr => slice_y_net,
      ce => ce_1_sg_x202,
      clk => clk_1_sg_x202,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

  rom1: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 7,
      c_width => 18,
      core_name0 => "bmg_72_f55ad1fbb330c587",
      latency => 2
    )
    port map (
      addr => slice_y_net,
      ce => ce_1_sg_x202,
      clk => clk_1_sg_x202,
      en => "1",
      rst => "0",
      data => rom1_data_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 6,
      x_width => 7,
      y_width => 7
    )
    port map (
      x => counter_op_net,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_direct/butterfly1_0/twiddle_general_4mult"

entity twiddle_general_4mult_entity_d3f87a3d85 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync: in std_logic; 
    a_im: out std_logic_vector(17 downto 0); 
    a_re: out std_logic_vector(17 downto 0); 
    bw_im: out std_logic_vector(21 downto 0); 
    bw_re: out std_logic_vector(21 downto 0); 
    sync_out: out std_logic
  );
end twiddle_general_4mult_entity_d3f87a3d85;

architecture structural of twiddle_general_4mult_entity_d3f87a3d85 is
  signal addsub1_s_net: std_logic_vector(36 downto 0);
  signal addsub_s_net: std_logic_vector(36 downto 0);
  signal ce_1_sg_x203: std_logic;
  signal clk_1_sg_x203: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal convert0_dout_net_x2: std_logic_vector(21 downto 0);
  signal convert1_dout_net_x2: std_logic_vector(21 downto 0);
  signal delay0_q_net_x0: std_logic_vector(35 downto 0);
  signal delay1_q_net_x0: std_logic_vector(35 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal force_im_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal mult1_p_net: std_logic_vector(35 downto 0);
  signal mult2_p_net: std_logic_vector(35 downto 0);
  signal mult3_p_net: std_logic_vector(35 downto 0);
  signal mult_p_net: std_logic_vector(35 downto 0);
  signal node0_0_q_net_x0: std_logic_vector(35 downto 0);
  signal node0_2_q_net_x0: std_logic_vector(35 downto 0);
  signal register0_q_net_x2: std_logic;

begin
  node0_0_q_net_x0 <= a;
  node0_2_q_net_x0 <= b;
  ce_1_sg_x203 <= ce_1;
  clk_1_sg_x203 <= clk_1;
  register0_q_net_x2 <= sync;
  a_im <= force_im_output_port_net_x3;
  a_re <= force_re_output_port_net_x3;
  bw_im <= convert1_dout_net_x2;
  bw_re <= convert0_dout_net_x2;
  sync_out <= delay2_q_net_x0;

  addsub: entity work.addsub_be8c56327e
    port map (
      a => mult_p_net,
      b => mult2_p_net,
      ce => ce_1_sg_x203,
      clk => clk_1_sg_x203,
      clr => '0',
      s => addsub_s_net
    );

  addsub1: entity work.addsub_eb2273ac28
    port map (
      a => mult1_p_net,
      b => mult3_p_net,
      ce => ce_1_sg_x203,
      clk => clk_1_sg_x203,
      clr => '0',
      s => addsub1_s_net
    );

  c_to_ri1_d1047f47f2: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay0_q_net_x0,
      im => force_im_output_port_net_x3,
      re => force_re_output_port_net_x3
    );

  c_to_ri2_1f391dc9ba: entity work.c_to_ri2_entity_e1b86f6b2f
    port map (
      c => concat_y_net_x2,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  c_to_ri3_1f3064b34c: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay1_q_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  coeff_gen_d5f3ccee33: entity work.coeff_gen_entity_d5f3ccee33
    port map (
      ce_1 => ce_1_sg_x203,
      clk_1 => clk_1_sg_x203,
      rst => register0_q_net_x2,
      w => concat_y_net_x2
    );

  convert0: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 33,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 22,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x203,
      clk => clk_1_sg_x203,
      clr => '0',
      din => addsub_s_net,
      en => "1",
      dout => convert0_dout_net_x2
    );

  convert1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 33,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 22,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x203,
      clk => clk_1_sg_x203,
      clr => '0',
      din => addsub1_s_net,
      en => "1",
      dout => convert1_dout_net_x2
    );

  delay0: entity work.xldelay
    generic map (
      latency => 10,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x203,
      clk => clk_1_sg_x203,
      d => node0_0_q_net_x0,
      en => '1',
      rst => '1',
      q => delay0_q_net_x0
    );

  delay1: entity work.delay_4b00a70dea
    port map (
      ce => ce_1_sg_x203,
      clk => clk_1_sg_x203,
      clr => '0',
      d => node0_2_q_net_x0,
      q => delay1_q_net_x0
    );

  delay2: entity work.xldelay
    generic map (
      latency => 10,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x203,
      clk => clk_1_sg_x203,
      d(0) => register0_q_net_x2,
      en => '1',
      rst => '1',
      q(0) => delay2_q_net_x0
    );

  mult: entity work.mult_cfc8c45902
    port map (
      a => force_re_output_port_net_x1,
      b => force_re_output_port_net_x0,
      ce => ce_1_sg_x203,
      clk => clk_1_sg_x203,
      clr => '0',
      p => mult_p_net
    );

  mult1: entity work.mult_cfc8c45902
    port map (
      a => force_im_output_port_net_x1,
      b => force_re_output_port_net_x0,
      ce => ce_1_sg_x203,
      clk => clk_1_sg_x203,
      clr => '0',
      p => mult1_p_net
    );

  mult2: entity work.mult_cfc8c45902
    port map (
      a => force_im_output_port_net_x1,
      b => force_im_output_port_net_x0,
      ce => ce_1_sg_x203,
      clk => clk_1_sg_x203,
      clr => '0',
      p => mult2_p_net
    );

  mult3: entity work.mult_cfc8c45902
    port map (
      a => force_re_output_port_net_x1,
      b => force_im_output_port_net_x0,
      ce => ce_1_sg_x203,
      clk => clk_1_sg_x203,
      clr => '0',
      p => mult3_p_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_direct/butterfly1_0"

entity butterfly1_0_entity_2b561cf47f is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    a_bw_x0: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly1_0_entity_2b561cf47f;

architecture structural of butterfly1_0_entity_2b561cf47f is
  signal adder_s_net_x3: std_logic_vector(17 downto 0);
  signal adder_s_net_x4: std_logic_vector(17 downto 0);
  signal adder_s_net_x5: std_logic_vector(17 downto 0);
  signal adder_s_net_x6: std_logic_vector(17 downto 0);
  signal and_y_net_x0: std_logic;
  signal and_y_net_x1: std_logic;
  signal and_y_net_x2: std_logic;
  signal and_y_net_x3: std_logic;
  signal cast_c_im_dout_net_x0: std_logic_vector(22 downto 0);
  signal cast_c_im_dout_net_x1: std_logic_vector(22 downto 0);
  signal cast_c_re_dout_net_x0: std_logic_vector(22 downto 0);
  signal cast_c_re_dout_net_x1: std_logic_vector(22 downto 0);
  signal ce_1_sg_x204: std_logic;
  signal clk_1_sg_x204: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal concat_y_net_x3: std_logic_vector(35 downto 0);
  signal convert0_dout_net_x2: std_logic_vector(21 downto 0);
  signal convert1_dout_net_x2: std_logic_vector(21 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal logical_y_net_x0: std_logic;
  signal mux0_y_net_x1: std_logic_vector(23 downto 0);
  signal mux1_y_net_x1: std_logic_vector(23 downto 0);
  signal mux2_y_net_x1: std_logic_vector(23 downto 0);
  signal mux3_y_net_x1: std_logic_vector(23 downto 0);
  signal node0_0_q_net_x1: std_logic_vector(35 downto 0);
  signal node0_2_q_net_x1: std_logic_vector(35 downto 0);
  signal register0_q_net_x3: std_logic;
  signal scale0_op_net: std_logic_vector(22 downto 0);
  signal scale1_op_net: std_logic_vector(22 downto 0);
  signal scale2_op_net: std_logic_vector(22 downto 0);
  signal scale3_op_net: std_logic_vector(22 downto 0);
  signal shift_delay_q_net: std_logic;
  signal slice0_y_net_x0: std_logic;
  signal sync_delay_q_net_x0: std_logic;

begin
  node0_0_q_net_x1 <= a;
  node0_2_q_net_x1 <= b;
  ce_1_sg_x204 <= ce_1;
  clk_1_sg_x204 <= clk_1;
  slice0_y_net_x0 <= shift;
  register0_q_net_x3 <= sync;
  a_bw <= concat_y_net_x2;
  a_bw_x0 <= concat_y_net_x3;
  of_x0 <= logical_y_net_x0;
  sync_out <= sync_delay_q_net_x0;

  cadd_ec1b3ac481: entity work.cadd_entity_bd220e7516
    port map (
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      b_im => convert1_dout_net_x2,
      b_re => convert0_dout_net_x2,
      ce_1 => ce_1_sg_x204,
      clk_1 => clk_1_sg_x204,
      c_im => cast_c_im_dout_net_x0,
      c_re => cast_c_re_dout_net_x0
    );

  convert_of0_9dcbf9a678: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x204,
      clk_1 => clk_1_sg_x204,
      din => mux0_y_net_x1,
      dout => adder_s_net_x3,
      of_x0 => and_y_net_x0
    );

  convert_of1_bb2d1a4068: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x204,
      clk_1 => clk_1_sg_x204,
      din => mux1_y_net_x1,
      dout => adder_s_net_x4,
      of_x0 => and_y_net_x1
    );

  convert_of2_5607fed1f3: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x204,
      clk_1 => clk_1_sg_x204,
      din => mux2_y_net_x1,
      dout => adder_s_net_x5,
      of_x0 => and_y_net_x2
    );

  convert_of3_e62c0149b0: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x204,
      clk_1 => clk_1_sg_x204,
      din => mux3_y_net_x1,
      dout => adder_s_net_x6,
      of_x0 => and_y_net_x3
    );

  csub_4fc2bae275: entity work.csub_entity_394eae4754
    port map (
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      b_im => convert1_dout_net_x2,
      b_re => convert0_dout_net_x2,
      ce_1 => ce_1_sg_x204,
      clk_1 => clk_1_sg_x204,
      c_im => cast_c_im_dout_net_x1,
      c_re => cast_c_re_dout_net_x1
    );

  logical: entity work.logical_a6d07705dd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => and_y_net_x0,
      d1(0) => and_y_net_x1,
      d2(0) => and_y_net_x2,
      d3(0) => and_y_net_x3,
      y(0) => logical_y_net_x0
    );

  mux0: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x204,
      clk => clk_1_sg_x204,
      clr => '0',
      d0 => cast_c_re_dout_net_x0,
      d1 => scale0_op_net,
      sel(0) => shift_delay_q_net,
      y => mux0_y_net_x1
    );

  mux1: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x204,
      clk => clk_1_sg_x204,
      clr => '0',
      d0 => cast_c_im_dout_net_x0,
      d1 => scale1_op_net,
      sel(0) => shift_delay_q_net,
      y => mux1_y_net_x1
    );

  mux2: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x204,
      clk => clk_1_sg_x204,
      clr => '0',
      d0 => cast_c_re_dout_net_x1,
      d1 => scale2_op_net,
      sel(0) => shift_delay_q_net,
      y => mux2_y_net_x1
    );

  mux3: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x204,
      clk => clk_1_sg_x204,
      clr => '0',
      d0 => cast_c_im_dout_net_x1,
      d1 => scale3_op_net,
      sel(0) => shift_delay_q_net,
      y => mux3_y_net_x1
    );

  ri_to_c01_28b5f912d1: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => adder_s_net_x4,
      re => adder_s_net_x3,
      c => concat_y_net_x2
    );

  ri_to_c23_6b345371fb: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => adder_s_net_x6,
      re => adder_s_net_x5,
      c => concat_y_net_x3
    );

  scale0: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x0,
      op => scale0_op_net
    );

  scale1: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x0,
      op => scale1_op_net
    );

  scale2: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x1,
      op => scale2_op_net
    );

  scale3: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x1,
      op => scale3_op_net
    );

  shift_delay: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x204,
      clk => clk_1_sg_x204,
      d(0) => slice0_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => shift_delay_q_net
    );

  sync_delay: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x204,
      clk => clk_1_sg_x204,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => sync_delay_q_net_x0
    );

  twiddle_general_4mult_d3f87a3d85: entity work.twiddle_general_4mult_entity_d3f87a3d85
    port map (
      a => node0_0_q_net_x1,
      b => node0_2_q_net_x1,
      ce_1 => ce_1_sg_x204,
      clk_1 => clk_1_sg_x204,
      sync => register0_q_net_x3,
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      bw_im => convert1_dout_net_x2,
      bw_re => convert0_dout_net_x2,
      sync_out => delay2_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_direct/butterfly2_0/convert_of2"

entity convert_of2_entity_8d054482eb is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(23 downto 0); 
    of_x0: out std_logic
  );
end convert_of2_entity_8d054482eb;

architecture structural of convert_of2_entity_8d054482eb is
  signal all_0s_y_net: std_logic;
  signal all_1s_y_net: std_logic;
  signal and_y_net_x0: std_logic;
  signal ce_1_sg_x223: std_logic;
  signal clk_1_sg_x223: std_logic;
  signal invert1_op_net: std_logic;
  signal invert2_op_net: std_logic;
  signal invert3_op_net: std_logic;
  signal invert4_op_net: std_logic;
  signal mux2_y_net_x0: std_logic_vector(23 downto 0);
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic;
  signal slice3_y_net: std_logic;
  signal slice4_y_net: std_logic;

begin
  ce_1_sg_x223 <= ce_1;
  clk_1_sg_x223 <= clk_1;
  mux2_y_net_x0 <= din;
  of_x0 <= and_y_net_x0;

  all_0s: entity work.logical_f5b5b4645f
    port map (
      ce => ce_1_sg_x223,
      clk => clk_1_sg_x223,
      clr => '0',
      d0(0) => invert1_op_net,
      d1(0) => invert2_op_net,
      d2(0) => invert3_op_net,
      d3(0) => invert4_op_net,
      y(0) => all_0s_y_net
    );

  all_1s: entity work.logical_f5b5b4645f
    port map (
      ce => ce_1_sg_x223,
      clk => clk_1_sg_x223,
      clr => '0',
      d0(0) => slice1_y_net,
      d1(0) => slice2_y_net,
      d2(0) => slice3_y_net,
      d3(0) => slice4_y_net,
      y(0) => all_1s_y_net
    );

  and_x0: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => all_0s_y_net,
      d1(0) => all_1s_y_net,
      y(0) => and_y_net_x0
    );

  invert1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x223,
      clk => clk_1_sg_x223,
      clr => '0',
      ip(0) => slice1_y_net,
      op(0) => invert1_op_net
    );

  invert2: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x223,
      clk => clk_1_sg_x223,
      clr => '0',
      ip(0) => slice2_y_net,
      op(0) => invert2_op_net
    );

  invert3: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x223,
      clk => clk_1_sg_x223,
      clr => '0',
      ip(0) => slice3_y_net,
      op(0) => invert3_op_net
    );

  invert4: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x223,
      clk => clk_1_sg_x223,
      clr => '0',
      ip(0) => slice4_y_net,
      op(0) => invert4_op_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 23,
      new_msb => 23,
      x_width => 24,
      y_width => 1
    )
    port map (
      x => mux2_y_net_x0,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 22,
      new_msb => 22,
      x_width => 24,
      y_width => 1
    )
    port map (
      x => mux2_y_net_x0,
      y(0) => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 21,
      new_msb => 21,
      x_width => 24,
      y_width => 1
    )
    port map (
      x => mux2_y_net_x0,
      y(0) => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 20,
      x_width => 24,
      y_width => 1
    )
    port map (
      x => mux2_y_net_x0,
      y(0) => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_direct/butterfly2_0/twiddle_general_4mult/coeff_gen"

entity coeff_gen_entity_a6d75bcd87 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    rst: in std_logic; 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_a6d75bcd87;

architecture structural of coeff_gen_entity_a6d75bcd87 is
  signal ce_1_sg_x226: std_logic;
  signal clk_1_sg_x226: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(6 downto 0);
  signal rom1_data_net_x0: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(17 downto 0);
  signal slice_y_net: std_logic_vector(6 downto 0);
  signal sync_delay_q_net_x1: std_logic;

begin
  ce_1_sg_x226 <= ce_1;
  clk_1_sg_x226 <= clk_1;
  sync_delay_q_net_x1 <= rst;
  w <= concat_y_net_x2;

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_aeada998ec385fcd",
      op_arith => xlUnsigned,
      op_width => 7
    )
    port map (
      ce => ce_1_sg_x226,
      clk => clk_1_sg_x226,
      clr => '0',
      en => "1",
      rst(0) => sync_delay_q_net_x1,
      op => counter_op_net
    );

  ri_to_c_da97709734: entity work.ri_to_c_entity_2abbfa7cd7
    port map (
      im => rom1_data_net_x0,
      re => rom_data_net_x0,
      c => concat_y_net_x2
    );

  rom: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 7,
      c_width => 18,
      core_name0 => "bmg_72_8ed993a9a42f84a8",
      latency => 2
    )
    port map (
      addr => slice_y_net,
      ce => ce_1_sg_x226,
      clk => clk_1_sg_x226,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

  rom1: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 7,
      c_width => 18,
      core_name0 => "bmg_72_7884e23b5c653602",
      latency => 2
    )
    port map (
      addr => slice_y_net,
      ce => ce_1_sg_x226,
      clk => clk_1_sg_x226,
      en => "1",
      rst => "0",
      data => rom1_data_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 6,
      x_width => 7,
      y_width => 7
    )
    port map (
      x => counter_op_net,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_direct/butterfly2_0/twiddle_general_4mult"

entity twiddle_general_4mult_entity_2915d7f7f4 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync: in std_logic; 
    a_im: out std_logic_vector(17 downto 0); 
    a_re: out std_logic_vector(17 downto 0); 
    bw_im: out std_logic_vector(21 downto 0); 
    bw_re: out std_logic_vector(21 downto 0); 
    sync_out: out std_logic
  );
end twiddle_general_4mult_entity_2915d7f7f4;

architecture structural of twiddle_general_4mult_entity_2915d7f7f4 is
  signal addsub1_s_net: std_logic_vector(36 downto 0);
  signal addsub_s_net: std_logic_vector(36 downto 0);
  signal ce_1_sg_x227: std_logic;
  signal clk_1_sg_x227: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal convert0_dout_net_x2: std_logic_vector(21 downto 0);
  signal convert1_dout_net_x2: std_logic_vector(21 downto 0);
  signal delay0_q_net_x0: std_logic_vector(35 downto 0);
  signal delay1_q_net_x0: std_logic_vector(35 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal force_im_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal mult1_p_net: std_logic_vector(35 downto 0);
  signal mult2_p_net: std_logic_vector(35 downto 0);
  signal mult3_p_net: std_logic_vector(35 downto 0);
  signal mult_p_net: std_logic_vector(35 downto 0);
  signal node1_0_q_net_x0: std_logic_vector(35 downto 0);
  signal node1_1_q_net_x0: std_logic_vector(35 downto 0);
  signal sync_delay_q_net_x2: std_logic;

begin
  node1_0_q_net_x0 <= a;
  node1_1_q_net_x0 <= b;
  ce_1_sg_x227 <= ce_1;
  clk_1_sg_x227 <= clk_1;
  sync_delay_q_net_x2 <= sync;
  a_im <= force_im_output_port_net_x3;
  a_re <= force_re_output_port_net_x3;
  bw_im <= convert1_dout_net_x2;
  bw_re <= convert0_dout_net_x2;
  sync_out <= delay2_q_net_x0;

  addsub: entity work.addsub_be8c56327e
    port map (
      a => mult_p_net,
      b => mult2_p_net,
      ce => ce_1_sg_x227,
      clk => clk_1_sg_x227,
      clr => '0',
      s => addsub_s_net
    );

  addsub1: entity work.addsub_eb2273ac28
    port map (
      a => mult1_p_net,
      b => mult3_p_net,
      ce => ce_1_sg_x227,
      clk => clk_1_sg_x227,
      clr => '0',
      s => addsub1_s_net
    );

  c_to_ri1_b38f0e97c3: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay0_q_net_x0,
      im => force_im_output_port_net_x3,
      re => force_re_output_port_net_x3
    );

  c_to_ri2_189ef0e76d: entity work.c_to_ri2_entity_e1b86f6b2f
    port map (
      c => concat_y_net_x2,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  c_to_ri3_b28a4e444a: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay1_q_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  coeff_gen_a6d75bcd87: entity work.coeff_gen_entity_a6d75bcd87
    port map (
      ce_1 => ce_1_sg_x227,
      clk_1 => clk_1_sg_x227,
      rst => sync_delay_q_net_x2,
      w => concat_y_net_x2
    );

  convert0: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 33,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 22,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x227,
      clk => clk_1_sg_x227,
      clr => '0',
      din => addsub_s_net,
      en => "1",
      dout => convert0_dout_net_x2
    );

  convert1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 33,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 22,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x227,
      clk => clk_1_sg_x227,
      clr => '0',
      din => addsub1_s_net,
      en => "1",
      dout => convert1_dout_net_x2
    );

  delay0: entity work.xldelay
    generic map (
      latency => 10,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x227,
      clk => clk_1_sg_x227,
      d => node1_0_q_net_x0,
      en => '1',
      rst => '1',
      q => delay0_q_net_x0
    );

  delay1: entity work.delay_4b00a70dea
    port map (
      ce => ce_1_sg_x227,
      clk => clk_1_sg_x227,
      clr => '0',
      d => node1_1_q_net_x0,
      q => delay1_q_net_x0
    );

  delay2: entity work.xldelay
    generic map (
      latency => 10,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x227,
      clk => clk_1_sg_x227,
      d(0) => sync_delay_q_net_x2,
      en => '1',
      rst => '1',
      q(0) => delay2_q_net_x0
    );

  mult: entity work.mult_cfc8c45902
    port map (
      a => force_re_output_port_net_x1,
      b => force_re_output_port_net_x0,
      ce => ce_1_sg_x227,
      clk => clk_1_sg_x227,
      clr => '0',
      p => mult_p_net
    );

  mult1: entity work.mult_cfc8c45902
    port map (
      a => force_im_output_port_net_x1,
      b => force_re_output_port_net_x0,
      ce => ce_1_sg_x227,
      clk => clk_1_sg_x227,
      clr => '0',
      p => mult1_p_net
    );

  mult2: entity work.mult_cfc8c45902
    port map (
      a => force_im_output_port_net_x1,
      b => force_im_output_port_net_x0,
      ce => ce_1_sg_x227,
      clk => clk_1_sg_x227,
      clr => '0',
      p => mult2_p_net
    );

  mult3: entity work.mult_cfc8c45902
    port map (
      a => force_re_output_port_net_x1,
      b => force_im_output_port_net_x0,
      ce => ce_1_sg_x227,
      clk => clk_1_sg_x227,
      clr => '0',
      p => mult3_p_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_direct/butterfly2_0"

entity butterfly2_0_entity_d3942396c3 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly2_0_entity_d3942396c3;

architecture structural of butterfly2_0_entity_d3942396c3 is
  signal adder_s_net_x3: std_logic_vector(17 downto 0);
  signal adder_s_net_x4: std_logic_vector(17 downto 0);
  signal and_y_net_x0: std_logic;
  signal and_y_net_x1: std_logic;
  signal and_y_net_x2: std_logic;
  signal and_y_net_x3: std_logic;
  signal cast_c_im_dout_net_x0: std_logic_vector(22 downto 0);
  signal cast_c_im_dout_net_x1: std_logic_vector(22 downto 0);
  signal cast_c_re_dout_net_x0: std_logic_vector(22 downto 0);
  signal cast_c_re_dout_net_x1: std_logic_vector(22 downto 0);
  signal ce_1_sg_x228: std_logic;
  signal clk_1_sg_x228: std_logic;
  signal concat_y_net_x1: std_logic_vector(35 downto 0);
  signal convert0_dout_net_x2: std_logic_vector(21 downto 0);
  signal convert1_dout_net_x2: std_logic_vector(21 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal logical_y_net_x0: std_logic;
  signal mux0_y_net_x1: std_logic_vector(23 downto 0);
  signal mux1_y_net_x1: std_logic_vector(23 downto 0);
  signal mux2_y_net_x0: std_logic_vector(23 downto 0);
  signal mux3_y_net_x0: std_logic_vector(23 downto 0);
  signal node1_0_q_net_x1: std_logic_vector(35 downto 0);
  signal node1_1_q_net_x1: std_logic_vector(35 downto 0);
  signal scale0_op_net: std_logic_vector(22 downto 0);
  signal scale1_op_net: std_logic_vector(22 downto 0);
  signal scale2_op_net: std_logic_vector(22 downto 0);
  signal scale3_op_net: std_logic_vector(22 downto 0);
  signal shift_delay_q_net: std_logic;
  signal slice1_y_net_x0: std_logic;
  signal sync_delay_q_net_x0: std_logic;
  signal sync_delay_q_net_x3: std_logic;

begin
  node1_0_q_net_x1 <= a;
  node1_1_q_net_x1 <= b;
  ce_1_sg_x228 <= ce_1;
  clk_1_sg_x228 <= clk_1;
  slice1_y_net_x0 <= shift;
  sync_delay_q_net_x3 <= sync;
  a_bw <= concat_y_net_x1;
  of_x0 <= logical_y_net_x0;
  sync_out <= sync_delay_q_net_x0;

  cadd_21c3fcefd3: entity work.cadd_entity_bd220e7516
    port map (
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      b_im => convert1_dout_net_x2,
      b_re => convert0_dout_net_x2,
      ce_1 => ce_1_sg_x228,
      clk_1 => clk_1_sg_x228,
      c_im => cast_c_im_dout_net_x0,
      c_re => cast_c_re_dout_net_x0
    );

  convert_of0_305f6a8c50: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x228,
      clk_1 => clk_1_sg_x228,
      din => mux0_y_net_x1,
      dout => adder_s_net_x3,
      of_x0 => and_y_net_x0
    );

  convert_of1_9c4e0d4c02: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x228,
      clk_1 => clk_1_sg_x228,
      din => mux1_y_net_x1,
      dout => adder_s_net_x4,
      of_x0 => and_y_net_x1
    );

  convert_of2_8d054482eb: entity work.convert_of2_entity_8d054482eb
    port map (
      ce_1 => ce_1_sg_x228,
      clk_1 => clk_1_sg_x228,
      din => mux2_y_net_x0,
      of_x0 => and_y_net_x2
    );

  convert_of3_d0ab42ec28: entity work.convert_of2_entity_8d054482eb
    port map (
      ce_1 => ce_1_sg_x228,
      clk_1 => clk_1_sg_x228,
      din => mux3_y_net_x0,
      of_x0 => and_y_net_x3
    );

  csub_a30436b326: entity work.csub_entity_394eae4754
    port map (
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      b_im => convert1_dout_net_x2,
      b_re => convert0_dout_net_x2,
      ce_1 => ce_1_sg_x228,
      clk_1 => clk_1_sg_x228,
      c_im => cast_c_im_dout_net_x1,
      c_re => cast_c_re_dout_net_x1
    );

  logical: entity work.logical_a6d07705dd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => and_y_net_x0,
      d1(0) => and_y_net_x1,
      d2(0) => and_y_net_x2,
      d3(0) => and_y_net_x3,
      y(0) => logical_y_net_x0
    );

  mux0: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x228,
      clk => clk_1_sg_x228,
      clr => '0',
      d0 => cast_c_re_dout_net_x0,
      d1 => scale0_op_net,
      sel(0) => shift_delay_q_net,
      y => mux0_y_net_x1
    );

  mux1: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x228,
      clk => clk_1_sg_x228,
      clr => '0',
      d0 => cast_c_im_dout_net_x0,
      d1 => scale1_op_net,
      sel(0) => shift_delay_q_net,
      y => mux1_y_net_x1
    );

  mux2: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x228,
      clk => clk_1_sg_x228,
      clr => '0',
      d0 => cast_c_re_dout_net_x1,
      d1 => scale2_op_net,
      sel(0) => shift_delay_q_net,
      y => mux2_y_net_x0
    );

  mux3: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x228,
      clk => clk_1_sg_x228,
      clr => '0',
      d0 => cast_c_im_dout_net_x1,
      d1 => scale3_op_net,
      sel(0) => shift_delay_q_net,
      y => mux3_y_net_x0
    );

  ri_to_c01_e7017690be: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => adder_s_net_x4,
      re => adder_s_net_x3,
      c => concat_y_net_x1
    );

  scale0: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x0,
      op => scale0_op_net
    );

  scale1: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x0,
      op => scale1_op_net
    );

  scale2: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x1,
      op => scale2_op_net
    );

  scale3: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x1,
      op => scale3_op_net
    );

  shift_delay: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x228,
      clk => clk_1_sg_x228,
      d(0) => slice1_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => shift_delay_q_net
    );

  sync_delay: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x228,
      clk => clk_1_sg_x228,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => sync_delay_q_net_x0
    );

  twiddle_general_4mult_2915d7f7f4: entity work.twiddle_general_4mult_entity_2915d7f7f4
    port map (
      a => node1_0_q_net_x1,
      b => node1_1_q_net_x1,
      ce_1 => ce_1_sg_x228,
      clk_1 => clk_1_sg_x228,
      sync => sync_delay_q_net_x3,
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      bw_im => convert1_dout_net_x2,
      bw_re => convert0_dout_net_x2,
      sync_out => delay2_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_direct/butterfly2_1/twiddle_general_4mult/coeff_gen"

entity coeff_gen_entity_c23c8c532e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    rst: in std_logic; 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_c23c8c532e;

architecture structural of coeff_gen_entity_c23c8c532e is
  signal ce_1_sg_x237: std_logic;
  signal clk_1_sg_x237: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(6 downto 0);
  signal rom1_data_net_x0: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(17 downto 0);
  signal slice_y_net: std_logic_vector(6 downto 0);
  signal sync_delay_q_net_x1: std_logic;

begin
  ce_1_sg_x237 <= ce_1;
  clk_1_sg_x237 <= clk_1;
  sync_delay_q_net_x1 <= rst;
  w <= concat_y_net_x2;

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_aeada998ec385fcd",
      op_arith => xlUnsigned,
      op_width => 7
    )
    port map (
      ce => ce_1_sg_x237,
      clk => clk_1_sg_x237,
      clr => '0',
      en => "1",
      rst(0) => sync_delay_q_net_x1,
      op => counter_op_net
    );

  ri_to_c_d37a4bcc0f: entity work.ri_to_c_entity_2abbfa7cd7
    port map (
      im => rom1_data_net_x0,
      re => rom_data_net_x0,
      c => concat_y_net_x2
    );

  rom: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 7,
      c_width => 18,
      core_name0 => "bmg_72_7884e23b5c653602",
      latency => 2
    )
    port map (
      addr => slice_y_net,
      ce => ce_1_sg_x237,
      clk => clk_1_sg_x237,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

  rom1: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 7,
      c_width => 18,
      core_name0 => "bmg_72_f27fe95e91d868c0",
      latency => 2
    )
    port map (
      addr => slice_y_net,
      ce => ce_1_sg_x237,
      clk => clk_1_sg_x237,
      en => "1",
      rst => "0",
      data => rom1_data_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 6,
      x_width => 7,
      y_width => 7
    )
    port map (
      x => counter_op_net,
      y => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_direct/butterfly2_1/twiddle_general_4mult"

entity twiddle_general_4mult_entity_affa3848a0 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync: in std_logic; 
    a_im: out std_logic_vector(17 downto 0); 
    a_re: out std_logic_vector(17 downto 0); 
    bw_im: out std_logic_vector(21 downto 0); 
    bw_re: out std_logic_vector(21 downto 0)
  );
end twiddle_general_4mult_entity_affa3848a0;

architecture structural of twiddle_general_4mult_entity_affa3848a0 is
  signal addsub1_s_net: std_logic_vector(36 downto 0);
  signal addsub_s_net: std_logic_vector(36 downto 0);
  signal ce_1_sg_x238: std_logic;
  signal clk_1_sg_x238: std_logic;
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal convert0_dout_net_x2: std_logic_vector(21 downto 0);
  signal convert1_dout_net_x2: std_logic_vector(21 downto 0);
  signal delay0_q_net_x0: std_logic_vector(35 downto 0);
  signal delay1_q_net_x0: std_logic_vector(35 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal mult1_p_net: std_logic_vector(35 downto 0);
  signal mult2_p_net: std_logic_vector(35 downto 0);
  signal mult3_p_net: std_logic_vector(35 downto 0);
  signal mult_p_net: std_logic_vector(35 downto 0);
  signal node1_2_q_net_x0: std_logic_vector(35 downto 0);
  signal node1_3_q_net_x0: std_logic_vector(35 downto 0);
  signal sync_delay_q_net_x2: std_logic;

begin
  node1_2_q_net_x0 <= a;
  node1_3_q_net_x0 <= b;
  ce_1_sg_x238 <= ce_1;
  clk_1_sg_x238 <= clk_1;
  sync_delay_q_net_x2 <= sync;
  a_im <= force_im_output_port_net_x3;
  a_re <= force_re_output_port_net_x3;
  bw_im <= convert1_dout_net_x2;
  bw_re <= convert0_dout_net_x2;

  addsub: entity work.addsub_be8c56327e
    port map (
      a => mult_p_net,
      b => mult2_p_net,
      ce => ce_1_sg_x238,
      clk => clk_1_sg_x238,
      clr => '0',
      s => addsub_s_net
    );

  addsub1: entity work.addsub_eb2273ac28
    port map (
      a => mult1_p_net,
      b => mult3_p_net,
      ce => ce_1_sg_x238,
      clk => clk_1_sg_x238,
      clr => '0',
      s => addsub1_s_net
    );

  c_to_ri1_68a1d4a33c: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay0_q_net_x0,
      im => force_im_output_port_net_x3,
      re => force_re_output_port_net_x3
    );

  c_to_ri2_3124f5a6dd: entity work.c_to_ri2_entity_e1b86f6b2f
    port map (
      c => concat_y_net_x2,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  c_to_ri3_b6972f6ecf: entity work.c_to_ri0_entity_ac3e6eb705
    port map (
      c => delay1_q_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  coeff_gen_c23c8c532e: entity work.coeff_gen_entity_c23c8c532e
    port map (
      ce_1 => ce_1_sg_x238,
      clk_1 => clk_1_sg_x238,
      rst => sync_delay_q_net_x2,
      w => concat_y_net_x2
    );

  convert0: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 33,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 22,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x238,
      clk => clk_1_sg_x238,
      clr => '0',
      din => addsub_s_net,
      en => "1",
      dout => convert0_dout_net_x2
    );

  convert1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 33,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 19,
      dout_width => 22,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x238,
      clk => clk_1_sg_x238,
      clr => '0',
      din => addsub1_s_net,
      en => "1",
      dout => convert1_dout_net_x2
    );

  delay0: entity work.xldelay
    generic map (
      latency => 10,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x238,
      clk => clk_1_sg_x238,
      d => node1_2_q_net_x0,
      en => '1',
      rst => '1',
      q => delay0_q_net_x0
    );

  delay1: entity work.delay_4b00a70dea
    port map (
      ce => ce_1_sg_x238,
      clk => clk_1_sg_x238,
      clr => '0',
      d => node1_3_q_net_x0,
      q => delay1_q_net_x0
    );

  mult: entity work.mult_cfc8c45902
    port map (
      a => force_re_output_port_net_x1,
      b => force_re_output_port_net_x0,
      ce => ce_1_sg_x238,
      clk => clk_1_sg_x238,
      clr => '0',
      p => mult_p_net
    );

  mult1: entity work.mult_cfc8c45902
    port map (
      a => force_im_output_port_net_x1,
      b => force_re_output_port_net_x0,
      ce => ce_1_sg_x238,
      clk => clk_1_sg_x238,
      clr => '0',
      p => mult1_p_net
    );

  mult2: entity work.mult_cfc8c45902
    port map (
      a => force_im_output_port_net_x1,
      b => force_im_output_port_net_x0,
      ce => ce_1_sg_x238,
      clk => clk_1_sg_x238,
      clr => '0',
      p => mult2_p_net
    );

  mult3: entity work.mult_cfc8c45902
    port map (
      a => force_re_output_port_net_x1,
      b => force_im_output_port_net_x0,
      ce => ce_1_sg_x238,
      clk => clk_1_sg_x238,
      clr => '0',
      p => mult3_p_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_direct/butterfly2_1"

entity butterfly2_1_entity_5ca2c00a71 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic
  );
end butterfly2_1_entity_5ca2c00a71;

architecture structural of butterfly2_1_entity_5ca2c00a71 is
  signal adder_s_net_x3: std_logic_vector(17 downto 0);
  signal adder_s_net_x4: std_logic_vector(17 downto 0);
  signal and_y_net_x0: std_logic;
  signal and_y_net_x1: std_logic;
  signal and_y_net_x2: std_logic;
  signal and_y_net_x3: std_logic;
  signal cast_c_im_dout_net_x0: std_logic_vector(22 downto 0);
  signal cast_c_im_dout_net_x1: std_logic_vector(22 downto 0);
  signal cast_c_re_dout_net_x0: std_logic_vector(22 downto 0);
  signal cast_c_re_dout_net_x1: std_logic_vector(22 downto 0);
  signal ce_1_sg_x239: std_logic;
  signal clk_1_sg_x239: std_logic;
  signal concat_y_net_x1: std_logic_vector(35 downto 0);
  signal convert0_dout_net_x2: std_logic_vector(21 downto 0);
  signal convert1_dout_net_x2: std_logic_vector(21 downto 0);
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal logical_y_net_x0: std_logic;
  signal mux0_y_net_x1: std_logic_vector(23 downto 0);
  signal mux1_y_net_x1: std_logic_vector(23 downto 0);
  signal mux2_y_net_x0: std_logic_vector(23 downto 0);
  signal mux3_y_net_x0: std_logic_vector(23 downto 0);
  signal node1_2_q_net_x1: std_logic_vector(35 downto 0);
  signal node1_3_q_net_x1: std_logic_vector(35 downto 0);
  signal scale0_op_net: std_logic_vector(22 downto 0);
  signal scale1_op_net: std_logic_vector(22 downto 0);
  signal scale2_op_net: std_logic_vector(22 downto 0);
  signal scale3_op_net: std_logic_vector(22 downto 0);
  signal shift_delay_q_net: std_logic;
  signal slice1_y_net_x1: std_logic;
  signal sync_delay_q_net_x3: std_logic;

begin
  node1_2_q_net_x1 <= a;
  node1_3_q_net_x1 <= b;
  ce_1_sg_x239 <= ce_1;
  clk_1_sg_x239 <= clk_1;
  slice1_y_net_x1 <= shift;
  sync_delay_q_net_x3 <= sync;
  a_bw <= concat_y_net_x1;
  of_x0 <= logical_y_net_x0;

  cadd_c736eeb5a7: entity work.cadd_entity_bd220e7516
    port map (
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      b_im => convert1_dout_net_x2,
      b_re => convert0_dout_net_x2,
      ce_1 => ce_1_sg_x239,
      clk_1 => clk_1_sg_x239,
      c_im => cast_c_im_dout_net_x0,
      c_re => cast_c_re_dout_net_x0
    );

  convert_of0_9a3b709ef9: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x239,
      clk_1 => clk_1_sg_x239,
      din => mux0_y_net_x1,
      dout => adder_s_net_x3,
      of_x0 => and_y_net_x0
    );

  convert_of1_9a450b6d70: entity work.convert_of0_entity_6501bdd0bd
    port map (
      ce_1 => ce_1_sg_x239,
      clk_1 => clk_1_sg_x239,
      din => mux1_y_net_x1,
      dout => adder_s_net_x4,
      of_x0 => and_y_net_x1
    );

  convert_of2_6a2db987bd: entity work.convert_of2_entity_8d054482eb
    port map (
      ce_1 => ce_1_sg_x239,
      clk_1 => clk_1_sg_x239,
      din => mux2_y_net_x0,
      of_x0 => and_y_net_x2
    );

  convert_of3_58355e838e: entity work.convert_of2_entity_8d054482eb
    port map (
      ce_1 => ce_1_sg_x239,
      clk_1 => clk_1_sg_x239,
      din => mux3_y_net_x0,
      of_x0 => and_y_net_x3
    );

  csub_82ad6e32e5: entity work.csub_entity_394eae4754
    port map (
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      b_im => convert1_dout_net_x2,
      b_re => convert0_dout_net_x2,
      ce_1 => ce_1_sg_x239,
      clk_1 => clk_1_sg_x239,
      c_im => cast_c_im_dout_net_x1,
      c_re => cast_c_re_dout_net_x1
    );

  logical: entity work.logical_a6d07705dd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => and_y_net_x0,
      d1(0) => and_y_net_x1,
      d2(0) => and_y_net_x2,
      d3(0) => and_y_net_x3,
      y(0) => logical_y_net_x0
    );

  mux0: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x239,
      clk => clk_1_sg_x239,
      clr => '0',
      d0 => cast_c_re_dout_net_x0,
      d1 => scale0_op_net,
      sel(0) => shift_delay_q_net,
      y => mux0_y_net_x1
    );

  mux1: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x239,
      clk => clk_1_sg_x239,
      clr => '0',
      d0 => cast_c_im_dout_net_x0,
      d1 => scale1_op_net,
      sel(0) => shift_delay_q_net,
      y => mux1_y_net_x1
    );

  mux2: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x239,
      clk => clk_1_sg_x239,
      clr => '0',
      d0 => cast_c_re_dout_net_x1,
      d1 => scale2_op_net,
      sel(0) => shift_delay_q_net,
      y => mux2_y_net_x0
    );

  mux3: entity work.mux_f1f44b96f0
    port map (
      ce => ce_1_sg_x239,
      clk => clk_1_sg_x239,
      clr => '0',
      d0 => cast_c_im_dout_net_x1,
      d1 => scale3_op_net,
      sel(0) => shift_delay_q_net,
      y => mux3_y_net_x0
    );

  ri_to_c01_5ce2eeb2a7: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => adder_s_net_x4,
      re => adder_s_net_x3,
      c => concat_y_net_x1
    );

  scale0: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x0,
      op => scale0_op_net
    );

  scale1: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x0,
      op => scale1_op_net
    );

  scale2: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_re_dout_net_x1,
      op => scale2_op_net
    );

  scale3: entity work.scale_e5d0b4a1ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => cast_c_im_dout_net_x1,
      op => scale3_op_net
    );

  shift_delay: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x239,
      clk => clk_1_sg_x239,
      d(0) => slice1_y_net_x1,
      en => '1',
      rst => '1',
      q(0) => shift_delay_q_net
    );

  twiddle_general_4mult_affa3848a0: entity work.twiddle_general_4mult_entity_affa3848a0
    port map (
      a => node1_2_q_net_x1,
      b => node1_3_q_net_x1,
      ce_1 => ce_1_sg_x239,
      clk_1 => clk_1_sg_x239,
      sync => sync_delay_q_net_x3,
      a_im => force_im_output_port_net_x3,
      a_re => force_re_output_port_net_x3,
      bw_im => convert1_dout_net_x2,
      bw_re => convert0_dout_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_direct"

entity fft_direct_entity_ee646f7bda is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in0: in std_logic_vector(35 downto 0); 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    in3: in std_logic_vector(35 downto 0); 
    shift: in std_logic_vector(1 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out0: out std_logic_vector(35 downto 0); 
    out1: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_direct_entity_ee646f7bda;

architecture structural of fft_direct_entity_ee646f7bda is
  signal ce_1_sg_x240: std_logic;
  signal clk_1_sg_x240: std_logic;
  signal concat_y_net_x1: std_logic_vector(35 downto 0);
  signal concat_y_net_x2: std_logic_vector(35 downto 0);
  signal concat_y_net_x3: std_logic_vector(35 downto 0);
  signal concat_y_net_x4: std_logic_vector(35 downto 0);
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concat_y_net_x6: std_logic_vector(35 downto 0);
  signal logical_y_net_x0: std_logic;
  signal logical_y_net_x1: std_logic;
  signal logical_y_net_x2: std_logic;
  signal logical_y_net_x3: std_logic;
  signal node0_0_q_net_x1: std_logic_vector(35 downto 0);
  signal node0_1_q_net_x1: std_logic_vector(35 downto 0);
  signal node0_2_q_net_x1: std_logic_vector(35 downto 0);
  signal node0_3_q_net_x1: std_logic_vector(35 downto 0);
  signal node1_0_q_net_x1: std_logic_vector(35 downto 0);
  signal node1_1_q_net_x1: std_logic_vector(35 downto 0);
  signal node1_2_q_net_x1: std_logic_vector(35 downto 0);
  signal node1_3_q_net_x1: std_logic_vector(35 downto 0);
  signal node2_0_q_net_x0: std_logic_vector(35 downto 0);
  signal node2_2_q_net_x0: std_logic_vector(35 downto 0);
  signal of_1_y_net: std_logic;
  signal of_2_y_net: std_logic;
  signal of_or_y_net_x0: std_logic;
  signal register0_q_net_x4: std_logic_vector(35 downto 0);
  signal register0_q_net_x5: std_logic_vector(35 downto 0);
  signal register0_q_net_x7: std_logic_vector(35 downto 0);
  signal register0_q_net_x8: std_logic_vector(35 downto 0);
  signal register0_q_net_x9: std_logic;
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net_x1: std_logic;
  signal slice_y_net_x0: std_logic_vector(1 downto 0);
  signal sync_delay_q_net_x3: std_logic;
  signal sync_delay_q_net_x4: std_logic;
  signal sync_delay_q_net_x5: std_logic;

begin
  ce_1_sg_x240 <= ce_1;
  clk_1_sg_x240 <= clk_1;
  register0_q_net_x4 <= in0;
  register0_q_net_x7 <= in1;
  register0_q_net_x5 <= in2;
  register0_q_net_x8 <= in3;
  slice_y_net_x0 <= shift;
  register0_q_net_x9 <= sync;
  of_x0 <= of_or_y_net_x0;
  out0 <= node2_0_q_net_x0;
  out1 <= node2_2_q_net_x0;
  sync_out <= sync_delay_q_net_x5;

  butterfly1_0_2b561cf47f: entity work.butterfly1_0_entity_2b561cf47f
    port map (
      a => node0_0_q_net_x1,
      b => node0_2_q_net_x1,
      ce_1 => ce_1_sg_x240,
      clk_1 => clk_1_sg_x240,
      shift => slice0_y_net_x1,
      sync => register0_q_net_x9,
      a_bw => concat_y_net_x2,
      a_bw_x0 => concat_y_net_x3,
      of_x0 => logical_y_net_x0,
      sync_out => sync_delay_q_net_x3
    );

  butterfly1_1_fe5e105b19: entity work.butterfly1_0_entity_2b561cf47f
    port map (
      a => node0_1_q_net_x1,
      b => node0_3_q_net_x1,
      ce_1 => ce_1_sg_x240,
      clk_1 => clk_1_sg_x240,
      shift => slice0_y_net_x1,
      sync => register0_q_net_x9,
      a_bw => concat_y_net_x4,
      a_bw_x0 => concat_y_net_x5,
      of_x0 => logical_y_net_x1,
      sync_out => sync_delay_q_net_x4
    );

  butterfly2_0_d3942396c3: entity work.butterfly2_0_entity_d3942396c3
    port map (
      a => node1_0_q_net_x1,
      b => node1_1_q_net_x1,
      ce_1 => ce_1_sg_x240,
      clk_1 => clk_1_sg_x240,
      shift => slice1_y_net_x1,
      sync => sync_delay_q_net_x3,
      a_bw => concat_y_net_x1,
      of_x0 => logical_y_net_x2,
      sync_out => sync_delay_q_net_x5
    );

  butterfly2_1_5ca2c00a71: entity work.butterfly2_1_entity_5ca2c00a71
    port map (
      a => node1_2_q_net_x1,
      b => node1_3_q_net_x1,
      ce_1 => ce_1_sg_x240,
      clk_1 => clk_1_sg_x240,
      shift => slice1_y_net_x1,
      sync => sync_delay_q_net_x4,
      a_bw => concat_y_net_x6,
      of_x0 => logical_y_net_x3
    );

  node0_0: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => register0_q_net_x4,
      q => node0_0_q_net_x1
    );

  node0_1: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => register0_q_net_x7,
      q => node0_1_q_net_x1
    );

  node0_2: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => register0_q_net_x5,
      q => node0_2_q_net_x1
    );

  node0_3: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => register0_q_net_x8,
      q => node0_3_q_net_x1
    );

  node1_0: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => concat_y_net_x2,
      q => node1_0_q_net_x1
    );

  node1_1: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => concat_y_net_x4,
      q => node1_1_q_net_x1
    );

  node1_2: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => concat_y_net_x3,
      q => node1_2_q_net_x1
    );

  node1_3: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => concat_y_net_x5,
      q => node1_3_q_net_x1
    );

  node2_0: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => concat_y_net_x1,
      q => node2_0_q_net_x0
    );

  node2_2: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => concat_y_net_x6,
      q => node2_2_q_net_x0
    );

  of_1: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x240,
      clk => clk_1_sg_x240,
      clr => '0',
      d0(0) => logical_y_net_x0,
      d1(0) => logical_y_net_x1,
      y(0) => of_1_y_net
    );

  of_2: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x240,
      clk => clk_1_sg_x240,
      clr => '0',
      d0(0) => logical_y_net_x2,
      d1(0) => logical_y_net_x3,
      y(0) => of_2_y_net
    );

  of_or: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => of_1_y_net,
      d1(0) => of_2_y_net,
      y(0) => of_or_y_net_x0
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => slice1_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_unscrambler/reorder/sync_delay_en"

entity sync_delay_en_entity_76a743294e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    en: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_en_entity_76a743294e;

architecture structural of sync_delay_en_entity_76a743294e is
  signal ce_1_sg_x241: std_logic;
  signal clk_1_sg_x241: std_logic;
  signal constant1_op_net: std_logic_vector(7 downto 0);
  signal constant2_op_net: std_logic_vector(7 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(7 downto 0);
  signal counter_op_net: std_logic_vector(7 downto 0);
  signal logical1_y_net: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x0: std_logic;
  signal or_y_net_x0: std_logic;
  signal pre_sync_delay_q_net_x0: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x241 <= ce_1;
  clk_1_sg_x241 <= clk_1;
  or_y_net_x0 <= en;
  pre_sync_delay_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x0;

  constant1: entity work.constant_91ef1678ca
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_e8aae5d3bb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_b437b02512
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_7eefee4be204e56b",
      op_arith => xlUnsigned,
      op_width => 8
    )
    port map (
      ce => ce_1_sg_x241,
      clk => clk_1_sg_x241,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical1_y_net,
      load(0) => pre_sync_delay_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => pre_sync_delay_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical_y_net,
      d1(0) => or_y_net_x0,
      y(0) => logical1_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => pre_sync_delay_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x0
    );

  relational: entity work.relational_54048c8b02
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_16235eb2bf
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_unscrambler/reorder"

entity reorder_entity_10fc6fb340 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din0: in std_logic_vector(35 downto 0); 
    din1: in std_logic_vector(35 downto 0); 
    en: in std_logic; 
    sync: in std_logic; 
    dout0: out std_logic_vector(35 downto 0); 
    dout1: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end reorder_entity_10fc6fb340;

architecture structural of reorder_entity_10fc6fb340 is
  signal bram0_data_out_net_x1: std_logic_vector(35 downto 0);
  signal bram1_data_out_net_x1: std_logic_vector(35 downto 0);
  signal ce_1_sg_x242: std_logic;
  signal clk_1_sg_x242: std_logic;
  signal const_op_net_x0: std_logic;
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal delay_d0_q_net: std_logic_vector(6 downto 0);
  signal delay_din0_q_net: std_logic_vector(35 downto 0);
  signal delay_din1_q_net: std_logic_vector(35 downto 0);
  signal delay_map1_q_net: std_logic_vector(6 downto 0);
  signal delay_map2_q_net: std_logic_vector(6 downto 0);
  signal delay_map3_q_net: std_logic_vector(6 downto 0);
  signal delay_map4_q_net: std_logic_vector(6 downto 0);
  signal delay_map5_q_net: std_logic_vector(6 downto 0);
  signal delay_map6_q_net: std_logic_vector(6 downto 0);
  signal delay_sel_q_net: std_logic_vector(2 downto 0);
  signal delay_we_q_net: std_logic;
  signal delayb1_q_net_x0: std_logic_vector(35 downto 0);
  signal delayb2_q_net_x0: std_logic_vector(35 downto 0);
  signal map1_data_net: std_logic_vector(6 downto 0);
  signal map2_data_net: std_logic_vector(6 downto 0);
  signal map3_data_net: std_logic_vector(6 downto 0);
  signal map4_data_net: std_logic_vector(6 downto 0);
  signal map5_data_net: std_logic_vector(6 downto 0);
  signal map6_data_net: std_logic_vector(6 downto 0);
  signal mux_y_net: std_logic_vector(6 downto 0);
  signal mux_y_net_x0: std_logic;
  signal or_y_net_x0: std_logic;
  signal post_sync_delay_q_net_x1: std_logic;
  signal pre_sync_delay_q_net_x0: std_logic;
  signal slice1_y_net: std_logic_vector(2 downto 0);
  signal slice2_y_net: std_logic_vector(6 downto 0);

begin
  ce_1_sg_x242 <= ce_1;
  clk_1_sg_x242 <= clk_1;
  delayb1_q_net_x0 <= din0;
  delayb2_q_net_x0 <= din1;
  const_op_net_x0 <= en;
  delay0_q_net_x0 <= sync;
  dout0 <= bram0_data_out_net_x1;
  dout1 <= bram1_data_out_net_x1;
  sync_out <= post_sync_delay_q_net_x1;

  bram0: entity work.xlspram_c09f12_01
    generic map (
      c_address_width => 7,
      c_width => 36,
      core_name0 => "bmg_72_deac774267b579f6",
      latency => 2
    )
    port map (
      addr => mux_y_net,
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      data_in => delay_din0_q_net,
      en => "1",
      rst => "0",
      we(0) => delay_we_q_net,
      data_out => bram0_data_out_net_x1
    );

  bram1: entity work.xlspram_c09f12_01
    generic map (
      c_address_width => 7,
      c_width => 36,
      core_name0 => "bmg_72_deac774267b579f6",
      latency => 2
    )
    port map (
      addr => mux_y_net,
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      data_in => delay_din1_q_net,
      en => "1",
      rst => "0",
      we(0) => delay_we_q_net,
      data_out => bram1_data_out_net_x1
    );

  counter: entity work.xlcounter_limit_c09f12_01
    generic map (
      cnt_15_0 => 895,
      cnt_31_16 => 0,
      cnt_47_32 => 0,
      cnt_63_48 => 0,
      core_name0 => "cntr_11_0_467594213c284489",
      count_limited => 1,
      op_arith => xlUnsigned,
      op_width => 10
    )
    port map (
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      clr => '0',
      en(0) => const_op_net_x0,
      rst(0) => delay0_q_net_x0,
      op => counter_op_net
    );

  delay_d0: entity work.xldelay
    generic map (
      latency => 6,
      reg_retiming => 0,
      reset => 0,
      width => 7
    )
    port map (
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      d => slice2_y_net,
      en => '1',
      rst => '1',
      q => delay_d0_q_net
    );

  delay_din0: entity work.xldelay
    generic map (
      latency => 7,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      d => delayb1_q_net_x0,
      en => '1',
      rst => '1',
      q => delay_din0_q_net
    );

  delay_din1: entity work.xldelay
    generic map (
      latency => 7,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      d => delayb2_q_net_x0,
      en => '1',
      rst => '1',
      q => delay_din1_q_net
    );

  delay_map1: entity work.xldelay
    generic map (
      latency => 5,
      reg_retiming => 0,
      reset => 0,
      width => 7
    )
    port map (
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      d => map1_data_net,
      en => '1',
      rst => '1',
      q => delay_map1_q_net
    );

  delay_map2: entity work.xldelay
    generic map (
      latency => 4,
      reg_retiming => 0,
      reset => 0,
      width => 7
    )
    port map (
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      d => map2_data_net,
      en => '1',
      rst => '1',
      q => delay_map2_q_net
    );

  delay_map3: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 7
    )
    port map (
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      d => map3_data_net,
      en => '1',
      rst => '1',
      q => delay_map3_q_net
    );

  delay_map4: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 7
    )
    port map (
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      d => map4_data_net,
      en => '1',
      rst => '1',
      q => delay_map4_q_net
    );

  delay_map5: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 7
    )
    port map (
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      d => map5_data_net,
      en => '1',
      rst => '1',
      q => delay_map5_q_net
    );

  delay_map6: entity work.delay_092ab65ed6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => map6_data_net,
      q => delay_map6_q_net
    );

  delay_sel: entity work.xldelay
    generic map (
      latency => 6,
      reg_retiming => 0,
      reset => 0,
      width => 3
    )
    port map (
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      d => slice1_y_net,
      en => '1',
      rst => '1',
      q => delay_sel_q_net
    );

  delay_we: entity work.xldelay
    generic map (
      latency => 7,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      d(0) => const_op_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_we_q_net
    );

  map1: entity work.xlsprom_dist_c09f12_01
    generic map (
      addr_width => 7,
      c_address_width => 7,
      c_width => 7,
      core_name0 => "dmg_72_8ff5c16d3b09b3bb",
      latency => 1
    )
    port map (
      addr => slice2_y_net,
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      en => "1",
      data => map1_data_net
    );

  map2: entity work.xlsprom_dist_c09f12_01
    generic map (
      addr_width => 7,
      c_address_width => 7,
      c_width => 7,
      core_name0 => "dmg_72_8ff5c16d3b09b3bb",
      latency => 1
    )
    port map (
      addr => map1_data_net,
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      en => "1",
      data => map2_data_net
    );

  map3: entity work.xlsprom_dist_c09f12_01
    generic map (
      addr_width => 7,
      c_address_width => 7,
      c_width => 7,
      core_name0 => "dmg_72_8ff5c16d3b09b3bb",
      latency => 1
    )
    port map (
      addr => map2_data_net,
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      en => "1",
      data => map3_data_net
    );

  map4: entity work.xlsprom_dist_c09f12_01
    generic map (
      addr_width => 7,
      c_address_width => 7,
      c_width => 7,
      core_name0 => "dmg_72_8ff5c16d3b09b3bb",
      latency => 1
    )
    port map (
      addr => map3_data_net,
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      en => "1",
      data => map4_data_net
    );

  map5: entity work.xlsprom_dist_c09f12_01
    generic map (
      addr_width => 7,
      c_address_width => 7,
      c_width => 7,
      core_name0 => "dmg_72_8ff5c16d3b09b3bb",
      latency => 1
    )
    port map (
      addr => map4_data_net,
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      en => "1",
      data => map5_data_net
    );

  map6: entity work.xlsprom_dist_c09f12_01
    generic map (
      addr_width => 7,
      c_address_width => 7,
      c_width => 7,
      core_name0 => "dmg_72_8ff5c16d3b09b3bb",
      latency => 1
    )
    port map (
      addr => map5_data_net,
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      en => "1",
      data => map6_data_net
    );

  mux: entity work.mux_f3852fb470
    port map (
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      clr => '0',
      d0 => delay_d0_q_net,
      d1 => delay_map1_q_net,
      d2 => delay_map2_q_net,
      d3 => delay_map3_q_net,
      d4 => delay_map4_q_net,
      d5 => delay_map5_q_net,
      d6 => delay_map6_q_net,
      sel => delay_sel_q_net,
      y => mux_y_net
    );

  or_x0: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => pre_sync_delay_q_net_x0,
      d1(0) => delay_we_q_net,
      y(0) => or_y_net_x0
    );

  post_sync_delay: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      d(0) => mux_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => post_sync_delay_q_net_x1
    );

  pre_sync_delay: entity work.xldelay
    generic map (
      latency => 7,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x242,
      clk => clk_1_sg_x242,
      d(0) => delay0_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => pre_sync_delay_q_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 9,
      x_width => 10,
      y_width => 3
    )
    port map (
      x => counter_op_net,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 6,
      x_width => 10,
      y_width => 7
    )
    port map (
      x => counter_op_net,
      y => slice2_y_net
    );

  sync_delay_en_76a743294e: entity work.sync_delay_en_entity_76a743294e
    port map (
      ce_1 => ce_1_sg_x242,
      clk_1 => clk_1_sg_x242,
      en => or_y_net_x0,
      in_x0 => pre_sync_delay_q_net_x0,
      out_x0 => mux_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_unscrambler/square_transposer/barrel_switcher"

entity barrel_switcher_entity_bbeeae4836 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    sel: in std_logic; 
    sync_in: in std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end barrel_switcher_entity_bbeeae4836;

architecture structural of barrel_switcher_entity_bbeeae4836 is
  signal ce_1_sg_x243: std_logic;
  signal clk_1_sg_x243: std_logic;
  signal counter_op_net_x0: std_logic;
  signal delay_sync_q_net_x0: std_logic;
  signal delayf1_q_net_x0: std_logic_vector(35 downto 0);
  signal delayf2_q_net_x0: std_logic_vector(35 downto 0);
  signal mux11_y_net_x0: std_logic_vector(35 downto 0);
  signal mux21_y_net_x0: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic;
  signal sync_delay_q_net_x6: std_logic;

begin
  ce_1_sg_x243 <= ce_1;
  clk_1_sg_x243 <= clk_1;
  delayf1_q_net_x0 <= in1;
  delayf2_q_net_x0 <= in2;
  counter_op_net_x0 <= sel;
  sync_delay_q_net_x6 <= sync_in;
  out1 <= mux11_y_net_x0;
  out2 <= mux21_y_net_x0;
  sync_out <= delay_sync_q_net_x0;

  delay_sync: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x243,
      clk => clk_1_sg_x243,
      d(0) => sync_delay_q_net_x6,
      en => '1',
      rst => '1',
      q(0) => delay_sync_q_net_x0
    );

  mux11: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x243,
      clk => clk_1_sg_x243,
      clr => '0',
      d0 => delayf1_q_net_x0,
      d1 => delayf2_q_net_x0,
      sel(0) => slice1_y_net,
      y => mux11_y_net_x0
    );

  mux21: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x243,
      clk => clk_1_sg_x243,
      clr => '0',
      d0 => delayf2_q_net_x0,
      d1 => delayf1_q_net_x0,
      sel(0) => slice1_y_net,
      y => mux21_y_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 1,
      y_width => 1
    )
    port map (
      x(0) => counter_op_net_x0,
      y(0) => slice1_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_unscrambler/square_transposer"

entity square_transposer_entity_191862f244 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    sync: in std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end square_transposer_entity_191862f244;

architecture structural of square_transposer_entity_191862f244 is
  signal ce_1_sg_x244: std_logic;
  signal clk_1_sg_x244: std_logic;
  signal counter_op_net_x0: std_logic;
  signal delay0_q_net_x1: std_logic;
  signal delay_sync_q_net_x0: std_logic;
  signal delayb1_q_net_x1: std_logic_vector(35 downto 0);
  signal delayb2_q_net_x1: std_logic_vector(35 downto 0);
  signal delayf1_q_net_x0: std_logic_vector(35 downto 0);
  signal delayf2_q_net_x0: std_logic_vector(35 downto 0);
  signal mux11_y_net_x0: std_logic_vector(35 downto 0);
  signal mux21_y_net_x0: std_logic_vector(35 downto 0);
  signal node2_0_q_net_x1: std_logic_vector(35 downto 0);
  signal node2_2_q_net_x1: std_logic_vector(35 downto 0);
  signal sync_delay_q_net_x7: std_logic;

begin
  ce_1_sg_x244 <= ce_1;
  clk_1_sg_x244 <= clk_1;
  node2_0_q_net_x1 <= in1;
  node2_2_q_net_x1 <= in2;
  sync_delay_q_net_x7 <= sync;
  out1 <= delayb1_q_net_x1;
  out2 <= delayb2_q_net_x1;
  sync_out <= delay0_q_net_x1;

  barrel_switcher_bbeeae4836: entity work.barrel_switcher_entity_bbeeae4836
    port map (
      ce_1 => ce_1_sg_x244,
      clk_1 => clk_1_sg_x244,
      in1 => delayf1_q_net_x0,
      in2 => delayf2_q_net_x0,
      sel => counter_op_net_x0,
      sync_in => sync_delay_q_net_x7,
      out1 => mux11_y_net_x0,
      out2 => mux21_y_net_x0,
      sync_out => delay_sync_q_net_x0
    );

  counter: entity work.counter_0009e314f5
    port map (
      ce => ce_1_sg_x244,
      clk => clk_1_sg_x244,
      clr => '0',
      rst(0) => sync_delay_q_net_x7,
      op(0) => counter_op_net_x0
    );

  delay0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x244,
      clk => clk_1_sg_x244,
      d(0) => delay_sync_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay0_q_net_x1
    );

  delayb1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x244,
      clk => clk_1_sg_x244,
      d => mux11_y_net_x0,
      en => '1',
      rst => '1',
      q => delayb1_q_net_x1
    );

  delayb2: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux21_y_net_x0,
      q => delayb2_q_net_x1
    );

  delayf1: entity work.delay_0c0a0420a6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => node2_0_q_net_x1,
      q => delayf1_q_net_x0
    );

  delayf2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x244,
      clk => clk_1_sg_x244,
      d => node2_2_q_net_x1,
      en => '1',
      rst => '1',
      q => delayf2_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/fft_unscrambler"

entity fft_unscrambler_entity_b73bf557ac is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    sync: in std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_unscrambler_entity_b73bf557ac;

architecture structural of fft_unscrambler_entity_b73bf557ac is
  signal bram0_data_out_net_x2: std_logic_vector(35 downto 0);
  signal bram1_data_out_net_x2: std_logic_vector(35 downto 0);
  signal ce_1_sg_x245: std_logic;
  signal clk_1_sg_x245: std_logic;
  signal const_op_net_x0: std_logic;
  signal delay0_q_net_x1: std_logic;
  signal delayb1_q_net_x1: std_logic_vector(35 downto 0);
  signal delayb2_q_net_x1: std_logic_vector(35 downto 0);
  signal node2_0_q_net_x2: std_logic_vector(35 downto 0);
  signal node2_2_q_net_x2: std_logic_vector(35 downto 0);
  signal post_sync_delay_q_net_x2: std_logic;
  signal sync_delay_q_net_x8: std_logic;

begin
  ce_1_sg_x245 <= ce_1;
  clk_1_sg_x245 <= clk_1;
  node2_0_q_net_x2 <= in1;
  node2_2_q_net_x2 <= in2;
  sync_delay_q_net_x8 <= sync;
  out1 <= bram0_data_out_net_x2;
  out2 <= bram1_data_out_net_x2;
  sync_out <= post_sync_delay_q_net_x2;

  const: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => const_op_net_x0
    );

  reorder_10fc6fb340: entity work.reorder_entity_10fc6fb340
    port map (
      ce_1 => ce_1_sg_x245,
      clk_1 => clk_1_sg_x245,
      din0 => delayb1_q_net_x1,
      din1 => delayb2_q_net_x1,
      en => const_op_net_x0,
      sync => delay0_q_net_x1,
      dout0 => bram0_data_out_net_x2,
      dout1 => bram1_data_out_net_x2,
      sync_out => post_sync_delay_q_net_x2
    );

  square_transposer_191862f244: entity work.square_transposer_entity_191862f244
    port map (
      ce_1 => ce_1_sg_x245,
      clk_1 => clk_1_sg_x245,
      in1 => node2_0_q_net_x2,
      in2 => node2_2_q_net_x2,
      sync => sync_delay_q_net_x8,
      out1 => delayb1_q_net_x1,
      out2 => delayb2_q_net_x1,
      sync_out => delay0_q_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0/in_del_4x0_pol1"

entity in_del_4x0_pol1_entity_96a59b4013 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d: in std_logic_vector(17 downto 0); 
    q: out std_logic_vector(17 downto 0)
  );
end in_del_4x0_pol1_entity_96a59b4013;

architecture structural of in_del_4x0_pol1_entity_96a59b4013 is
  signal ce_1_sg_x246: std_logic;
  signal clk_1_sg_x246: std_logic;
  signal register0_q_net_x7: std_logic_vector(17 downto 0);
  signal shift3_op_net_x1: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x246 <= ce_1;
  clk_1_sg_x246 <= clk_1;
  shift3_op_net_x1 <= d;
  q <= register0_q_net_x7;

  register0: entity work.xlregister
    generic map (
      d_width => 18,
      init_value => b"000000000000000000"
    )
    port map (
      ce => ce_1_sg_x246,
      clk => clk_1_sg_x246,
      d => shift3_op_net_x1,
      en => "1",
      rst => "0",
      q => register0_q_net_x7
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real0"

entity fft_wideband_real0_entity_c512b4816a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in0: in std_logic_vector(17 downto 0); 
    in1: in std_logic_vector(17 downto 0); 
    in2: in std_logic_vector(17 downto 0); 
    in3: in std_logic_vector(17 downto 0); 
    shift: in std_logic_vector(9 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out0: out std_logic_vector(35 downto 0); 
    out1: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_wideband_real0_entity_c512b4816a;

architecture structural of fft_wideband_real0_entity_c512b4816a is
  signal bram0_data_out_net_x3: std_logic_vector(35 downto 0);
  signal bram1_data_out_net_x3: std_logic_vector(35 downto 0);
  signal ce_1_sg_x251: std_logic;
  signal clk_1_sg_x251: std_logic;
  signal delay2_q_net_x3: std_logic;
  signal delay_q_net_x2: std_logic;
  signal logical1_y_net_x8: std_logic;
  signal mux1_y_net_x4: std_logic_vector(35 downto 0);
  signal mux2_y_net_x4: std_logic_vector(35 downto 0);
  signal mux3_y_net_x4: std_logic_vector(35 downto 0);
  signal mux_y_net_x4: std_logic_vector(35 downto 0);
  signal node2_0_q_net_x2: std_logic_vector(35 downto 0);
  signal node2_2_q_net_x2: std_logic_vector(35 downto 0);
  signal of_or_y_net_x0: std_logic;
  signal of_or_y_net_x1: std_logic;
  signal post_sync_delay_q_net_x3: std_logic;
  signal register0_q_net_x10: std_logic_vector(17 downto 0);
  signal register0_q_net_x11: std_logic_vector(17 downto 0);
  signal register0_q_net_x12: std_logic_vector(17 downto 0);
  signal register0_q_net_x13: std_logic_vector(17 downto 0);
  signal register0_q_net_x14: std_logic;
  signal register0_q_net_x4: std_logic_vector(35 downto 0);
  signal register0_q_net_x5: std_logic_vector(35 downto 0);
  signal register0_q_net_x7: std_logic_vector(35 downto 0);
  signal register0_q_net_x8: std_logic_vector(35 downto 0);
  signal register0_q_net_x9: std_logic;
  signal shift1_op_net_x2: std_logic_vector(17 downto 0);
  signal shift2_op_net_x2: std_logic_vector(17 downto 0);
  signal shift3_op_net_x2: std_logic_vector(17 downto 0);
  signal shift4_op_net_x2: std_logic_vector(17 downto 0);
  signal slice6_y_net_x9: std_logic_vector(9 downto 0);
  signal slice_y_net_x0: std_logic_vector(1 downto 0);
  signal sync_delay_q_net_x8: std_logic;

begin
  ce_1_sg_x251 <= ce_1;
  clk_1_sg_x251 <= clk_1;
  shift3_op_net_x2 <= in0;
  shift1_op_net_x2 <= in1;
  shift2_op_net_x2 <= in2;
  shift4_op_net_x2 <= in3;
  slice6_y_net_x9 <= shift;
  delay_q_net_x2 <= sync;
  of_x0 <= of_or_y_net_x1;
  out0 <= bram0_data_out_net_x3;
  out1 <= bram1_data_out_net_x3;
  sync_out <= post_sync_delay_q_net_x3;

  del_4x0_pol1_49de411777: entity work.del_4x0_pol1_entity_49de411777
    port map (
      ce_1 => ce_1_sg_x251,
      clk_1 => clk_1_sg_x251,
      d => mux_y_net_x4,
      q => register0_q_net_x4
    );

  del_4x0_pol2_346a6b7ed2: entity work.del_4x0_pol1_entity_49de411777
    port map (
      ce_1 => ce_1_sg_x251,
      clk_1 => clk_1_sg_x251,
      d => mux1_y_net_x4,
      q => register0_q_net_x7
    );

  del_4x0_pol3_77e810b85d: entity work.del_4x0_pol1_entity_49de411777
    port map (
      ce_1 => ce_1_sg_x251,
      clk_1 => clk_1_sg_x251,
      d => mux2_y_net_x4,
      q => register0_q_net_x5
    );

  del_4x0_pol4_cff0a8ccbc: entity work.del_4x0_pol1_entity_49de411777
    port map (
      ce_1 => ce_1_sg_x251,
      clk_1 => clk_1_sg_x251,
      d => mux3_y_net_x4,
      q => register0_q_net_x8
    );

  del_sync_4x0_d1731592de: entity work.delay11_entity_c2a06abd76
    port map (
      ce_1 => ce_1_sg_x251,
      clk_1 => clk_1_sg_x251,
      d => delay2_q_net_x3,
      q => register0_q_net_x9
    );

  fft_biplex_real_4x0_d1b89c22a9: entity work.fft_biplex_real_4x0_entity_d1b89c22a9
    port map (
      ce_1 => ce_1_sg_x251,
      clk_1 => clk_1_sg_x251,
      pol1 => register0_q_net_x10,
      pol2 => register0_q_net_x11,
      pol3 => register0_q_net_x12,
      pol4 => register0_q_net_x13,
      shift => slice6_y_net_x9,
      sync => register0_q_net_x14,
      of_x0 => logical1_y_net_x8,
      pol1_out => mux_y_net_x4,
      pol2_out => mux1_y_net_x4,
      pol3_out => mux2_y_net_x4,
      pol4_out => mux3_y_net_x4,
      sync_out => delay2_q_net_x3
    );

  fft_direct_ee646f7bda: entity work.fft_direct_entity_ee646f7bda
    port map (
      ce_1 => ce_1_sg_x251,
      clk_1 => clk_1_sg_x251,
      in0 => register0_q_net_x4,
      in1 => register0_q_net_x7,
      in2 => register0_q_net_x5,
      in3 => register0_q_net_x8,
      shift => slice_y_net_x0,
      sync => register0_q_net_x9,
      of_x0 => of_or_y_net_x0,
      out0 => node2_0_q_net_x2,
      out1 => node2_2_q_net_x2,
      sync_out => sync_delay_q_net_x8
    );

  fft_unscrambler_b73bf557ac: entity work.fft_unscrambler_entity_b73bf557ac
    port map (
      ce_1 => ce_1_sg_x251,
      clk_1 => clk_1_sg_x251,
      in1 => node2_0_q_net_x2,
      in2 => node2_2_q_net_x2,
      sync => sync_delay_q_net_x8,
      out1 => bram0_data_out_net_x3,
      out2 => bram1_data_out_net_x3,
      sync_out => post_sync_delay_q_net_x3
    );

  in_del_4x0_pol1_96a59b4013: entity work.in_del_4x0_pol1_entity_96a59b4013
    port map (
      ce_1 => ce_1_sg_x251,
      clk_1 => clk_1_sg_x251,
      d => shift3_op_net_x2,
      q => register0_q_net_x10
    );

  in_del_4x0_pol2_bd75100b65: entity work.in_del_4x0_pol1_entity_96a59b4013
    port map (
      ce_1 => ce_1_sg_x251,
      clk_1 => clk_1_sg_x251,
      d => shift1_op_net_x2,
      q => register0_q_net_x11
    );

  in_del_4x0_pol3_429154a324: entity work.in_del_4x0_pol1_entity_96a59b4013
    port map (
      ce_1 => ce_1_sg_x251,
      clk_1 => clk_1_sg_x251,
      d => shift2_op_net_x2,
      q => register0_q_net_x12
    );

  in_del_4x0_pol4_91e98dcf32: entity work.in_del_4x0_pol1_entity_96a59b4013
    port map (
      ce_1 => ce_1_sg_x251,
      clk_1 => clk_1_sg_x251,
      d => shift4_op_net_x2,
      q => register0_q_net_x13
    );

  in_del_sync_4x0_62f3fa77eb: entity work.delay11_entity_c2a06abd76
    port map (
      ce_1 => ce_1_sg_x251,
      clk_1 => clk_1_sg_x251,
      d => delay_q_net_x2,
      q => register0_q_net_x14
    );

  of_or: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x251,
      clk => clk_1_sg_x251,
      clr => '0',
      d0(0) => of_or_y_net_x0,
      d1(0) => logical1_y_net_x8,
      y(0) => of_or_y_net_x1
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 8,
      x_width => 10,
      y_width => 2
    )
    port map (
      x => slice6_y_net_x9,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real1/fft_unscrambler/reorder"

entity reorder_entity_f9ba1c1d4b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din0: in std_logic_vector(35 downto 0); 
    din1: in std_logic_vector(35 downto 0); 
    en: in std_logic; 
    sync: in std_logic; 
    dout0: out std_logic_vector(35 downto 0); 
    dout1: out std_logic_vector(35 downto 0)
  );
end reorder_entity_f9ba1c1d4b;

architecture structural of reorder_entity_f9ba1c1d4b is
  signal bram0_data_out_net_x1: std_logic_vector(35 downto 0);
  signal bram1_data_out_net_x1: std_logic_vector(35 downto 0);
  signal ce_1_sg_x439: std_logic;
  signal clk_1_sg_x439: std_logic;
  signal const_op_net_x0: std_logic;
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal delay_d0_q_net: std_logic_vector(6 downto 0);
  signal delay_din0_q_net: std_logic_vector(35 downto 0);
  signal delay_din1_q_net: std_logic_vector(35 downto 0);
  signal delay_map1_q_net: std_logic_vector(6 downto 0);
  signal delay_map2_q_net: std_logic_vector(6 downto 0);
  signal delay_map3_q_net: std_logic_vector(6 downto 0);
  signal delay_map4_q_net: std_logic_vector(6 downto 0);
  signal delay_map5_q_net: std_logic_vector(6 downto 0);
  signal delay_map6_q_net: std_logic_vector(6 downto 0);
  signal delay_sel_q_net: std_logic_vector(2 downto 0);
  signal delay_we_q_net: std_logic;
  signal delayb1_q_net_x0: std_logic_vector(35 downto 0);
  signal delayb2_q_net_x0: std_logic_vector(35 downto 0);
  signal map1_data_net: std_logic_vector(6 downto 0);
  signal map2_data_net: std_logic_vector(6 downto 0);
  signal map3_data_net: std_logic_vector(6 downto 0);
  signal map4_data_net: std_logic_vector(6 downto 0);
  signal map5_data_net: std_logic_vector(6 downto 0);
  signal map6_data_net: std_logic_vector(6 downto 0);
  signal mux_y_net: std_logic_vector(6 downto 0);
  signal slice1_y_net: std_logic_vector(2 downto 0);
  signal slice2_y_net: std_logic_vector(6 downto 0);

begin
  ce_1_sg_x439 <= ce_1;
  clk_1_sg_x439 <= clk_1;
  delayb1_q_net_x0 <= din0;
  delayb2_q_net_x0 <= din1;
  const_op_net_x0 <= en;
  delay0_q_net_x0 <= sync;
  dout0 <= bram0_data_out_net_x1;
  dout1 <= bram1_data_out_net_x1;

  bram0: entity work.xlspram_c09f12_01
    generic map (
      c_address_width => 7,
      c_width => 36,
      core_name0 => "bmg_72_deac774267b579f6",
      latency => 2
    )
    port map (
      addr => mux_y_net,
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      data_in => delay_din0_q_net,
      en => "1",
      rst => "0",
      we(0) => delay_we_q_net,
      data_out => bram0_data_out_net_x1
    );

  bram1: entity work.xlspram_c09f12_01
    generic map (
      c_address_width => 7,
      c_width => 36,
      core_name0 => "bmg_72_deac774267b579f6",
      latency => 2
    )
    port map (
      addr => mux_y_net,
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      data_in => delay_din1_q_net,
      en => "1",
      rst => "0",
      we(0) => delay_we_q_net,
      data_out => bram1_data_out_net_x1
    );

  counter: entity work.xlcounter_limit_c09f12_01
    generic map (
      cnt_15_0 => 895,
      cnt_31_16 => 0,
      cnt_47_32 => 0,
      cnt_63_48 => 0,
      core_name0 => "cntr_11_0_467594213c284489",
      count_limited => 1,
      op_arith => xlUnsigned,
      op_width => 10
    )
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      clr => '0',
      en(0) => const_op_net_x0,
      rst(0) => delay0_q_net_x0,
      op => counter_op_net
    );

  delay_d0: entity work.xldelay
    generic map (
      latency => 6,
      reg_retiming => 0,
      reset => 0,
      width => 7
    )
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      d => slice2_y_net,
      en => '1',
      rst => '1',
      q => delay_d0_q_net
    );

  delay_din0: entity work.xldelay
    generic map (
      latency => 7,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      d => delayb1_q_net_x0,
      en => '1',
      rst => '1',
      q => delay_din0_q_net
    );

  delay_din1: entity work.xldelay
    generic map (
      latency => 7,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      d => delayb2_q_net_x0,
      en => '1',
      rst => '1',
      q => delay_din1_q_net
    );

  delay_map1: entity work.xldelay
    generic map (
      latency => 5,
      reg_retiming => 0,
      reset => 0,
      width => 7
    )
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      d => map1_data_net,
      en => '1',
      rst => '1',
      q => delay_map1_q_net
    );

  delay_map2: entity work.xldelay
    generic map (
      latency => 4,
      reg_retiming => 0,
      reset => 0,
      width => 7
    )
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      d => map2_data_net,
      en => '1',
      rst => '1',
      q => delay_map2_q_net
    );

  delay_map3: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 7
    )
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      d => map3_data_net,
      en => '1',
      rst => '1',
      q => delay_map3_q_net
    );

  delay_map4: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 7
    )
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      d => map4_data_net,
      en => '1',
      rst => '1',
      q => delay_map4_q_net
    );

  delay_map5: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 7
    )
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      d => map5_data_net,
      en => '1',
      rst => '1',
      q => delay_map5_q_net
    );

  delay_map6: entity work.delay_092ab65ed6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => map6_data_net,
      q => delay_map6_q_net
    );

  delay_sel: entity work.xldelay
    generic map (
      latency => 6,
      reg_retiming => 0,
      reset => 0,
      width => 3
    )
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      d => slice1_y_net,
      en => '1',
      rst => '1',
      q => delay_sel_q_net
    );

  delay_we: entity work.xldelay
    generic map (
      latency => 7,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      d(0) => const_op_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_we_q_net
    );

  map1: entity work.xlsprom_dist_c09f12_01
    generic map (
      addr_width => 7,
      c_address_width => 7,
      c_width => 7,
      core_name0 => "dmg_72_8ff5c16d3b09b3bb",
      latency => 1
    )
    port map (
      addr => slice2_y_net,
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      en => "1",
      data => map1_data_net
    );

  map2: entity work.xlsprom_dist_c09f12_01
    generic map (
      addr_width => 7,
      c_address_width => 7,
      c_width => 7,
      core_name0 => "dmg_72_8ff5c16d3b09b3bb",
      latency => 1
    )
    port map (
      addr => map1_data_net,
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      en => "1",
      data => map2_data_net
    );

  map3: entity work.xlsprom_dist_c09f12_01
    generic map (
      addr_width => 7,
      c_address_width => 7,
      c_width => 7,
      core_name0 => "dmg_72_8ff5c16d3b09b3bb",
      latency => 1
    )
    port map (
      addr => map2_data_net,
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      en => "1",
      data => map3_data_net
    );

  map4: entity work.xlsprom_dist_c09f12_01
    generic map (
      addr_width => 7,
      c_address_width => 7,
      c_width => 7,
      core_name0 => "dmg_72_8ff5c16d3b09b3bb",
      latency => 1
    )
    port map (
      addr => map3_data_net,
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      en => "1",
      data => map4_data_net
    );

  map5: entity work.xlsprom_dist_c09f12_01
    generic map (
      addr_width => 7,
      c_address_width => 7,
      c_width => 7,
      core_name0 => "dmg_72_8ff5c16d3b09b3bb",
      latency => 1
    )
    port map (
      addr => map4_data_net,
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      en => "1",
      data => map5_data_net
    );

  map6: entity work.xlsprom_dist_c09f12_01
    generic map (
      addr_width => 7,
      c_address_width => 7,
      c_width => 7,
      core_name0 => "dmg_72_8ff5c16d3b09b3bb",
      latency => 1
    )
    port map (
      addr => map5_data_net,
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      en => "1",
      data => map6_data_net
    );

  mux: entity work.mux_f3852fb470
    port map (
      ce => ce_1_sg_x439,
      clk => clk_1_sg_x439,
      clr => '0',
      d0 => delay_d0_q_net,
      d1 => delay_map1_q_net,
      d2 => delay_map2_q_net,
      d3 => delay_map3_q_net,
      d4 => delay_map4_q_net,
      d5 => delay_map5_q_net,
      d6 => delay_map6_q_net,
      sel => delay_sel_q_net,
      y => mux_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 9,
      x_width => 10,
      y_width => 3
    )
    port map (
      x => counter_op_net,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 6,
      x_width => 10,
      y_width => 7
    )
    port map (
      x => counter_op_net,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real1/fft_unscrambler"

entity fft_unscrambler_entity_704f296532 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    sync: in std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0)
  );
end fft_unscrambler_entity_704f296532;

architecture structural of fft_unscrambler_entity_704f296532 is
  signal bram0_data_out_net_x2: std_logic_vector(35 downto 0);
  signal bram1_data_out_net_x2: std_logic_vector(35 downto 0);
  signal ce_1_sg_x442: std_logic;
  signal clk_1_sg_x442: std_logic;
  signal const_op_net_x0: std_logic;
  signal delay0_q_net_x1: std_logic;
  signal delayb1_q_net_x1: std_logic_vector(35 downto 0);
  signal delayb2_q_net_x1: std_logic_vector(35 downto 0);
  signal node2_0_q_net_x2: std_logic_vector(35 downto 0);
  signal node2_2_q_net_x2: std_logic_vector(35 downto 0);
  signal sync_delay_q_net_x8: std_logic;

begin
  ce_1_sg_x442 <= ce_1;
  clk_1_sg_x442 <= clk_1;
  node2_0_q_net_x2 <= in1;
  node2_2_q_net_x2 <= in2;
  sync_delay_q_net_x8 <= sync;
  out1 <= bram0_data_out_net_x2;
  out2 <= bram1_data_out_net_x2;

  const: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => const_op_net_x0
    );

  reorder_f9ba1c1d4b: entity work.reorder_entity_f9ba1c1d4b
    port map (
      ce_1 => ce_1_sg_x442,
      clk_1 => clk_1_sg_x442,
      din0 => delayb1_q_net_x1,
      din1 => delayb2_q_net_x1,
      en => const_op_net_x0,
      sync => delay0_q_net_x1,
      dout0 => bram0_data_out_net_x2,
      dout1 => bram1_data_out_net_x2
    );

  square_transposer_fb47dc1a31: entity work.square_transposer_entity_191862f244
    port map (
      ce_1 => ce_1_sg_x442,
      clk_1 => clk_1_sg_x442,
      in1 => node2_0_q_net_x2,
      in2 => node2_2_q_net_x2,
      sync => sync_delay_q_net_x8,
      out1 => delayb1_q_net_x1,
      out2 => delayb2_q_net_x1,
      sync_out => delay0_q_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/fft_wideband_real1"

entity fft_wideband_real1_entity_9c10afbb70 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in0: in std_logic_vector(17 downto 0); 
    in1: in std_logic_vector(17 downto 0); 
    in2: in std_logic_vector(17 downto 0); 
    in3: in std_logic_vector(17 downto 0); 
    shift: in std_logic_vector(9 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out0: out std_logic_vector(35 downto 0); 
    out1: out std_logic_vector(35 downto 0)
  );
end fft_wideband_real1_entity_9c10afbb70;

architecture structural of fft_wideband_real1_entity_9c10afbb70 is
  signal bram0_data_out_net_x3: std_logic_vector(35 downto 0);
  signal bram1_data_out_net_x3: std_logic_vector(35 downto 0);
  signal ce_1_sg_x448: std_logic;
  signal clk_1_sg_x448: std_logic;
  signal delay2_q_net_x3: std_logic;
  signal delay_q_net_x2: std_logic;
  signal logical1_y_net_x8: std_logic;
  signal mux1_y_net_x4: std_logic_vector(35 downto 0);
  signal mux2_y_net_x4: std_logic_vector(35 downto 0);
  signal mux3_y_net_x4: std_logic_vector(35 downto 0);
  signal mux_y_net_x4: std_logic_vector(35 downto 0);
  signal node2_0_q_net_x2: std_logic_vector(35 downto 0);
  signal node2_2_q_net_x2: std_logic_vector(35 downto 0);
  signal of_or_y_net_x0: std_logic;
  signal of_or_y_net_x1: std_logic;
  signal register0_q_net_x10: std_logic_vector(17 downto 0);
  signal register0_q_net_x11: std_logic_vector(17 downto 0);
  signal register0_q_net_x12: std_logic_vector(17 downto 0);
  signal register0_q_net_x13: std_logic_vector(17 downto 0);
  signal register0_q_net_x14: std_logic;
  signal register0_q_net_x4: std_logic_vector(35 downto 0);
  signal register0_q_net_x5: std_logic_vector(35 downto 0);
  signal register0_q_net_x7: std_logic_vector(35 downto 0);
  signal register0_q_net_x8: std_logic_vector(35 downto 0);
  signal register0_q_net_x9: std_logic;
  signal shift1_op_net_x2: std_logic_vector(17 downto 0);
  signal shift2_op_net_x2: std_logic_vector(17 downto 0);
  signal shift3_op_net_x2: std_logic_vector(17 downto 0);
  signal shift4_op_net_x2: std_logic_vector(17 downto 0);
  signal slice6_y_net_x19: std_logic_vector(9 downto 0);
  signal slice_y_net_x0: std_logic_vector(1 downto 0);
  signal sync_delay_q_net_x8: std_logic;

begin
  ce_1_sg_x448 <= ce_1;
  clk_1_sg_x448 <= clk_1;
  shift3_op_net_x2 <= in0;
  shift1_op_net_x2 <= in1;
  shift2_op_net_x2 <= in2;
  shift4_op_net_x2 <= in3;
  slice6_y_net_x19 <= shift;
  delay_q_net_x2 <= sync;
  of_x0 <= of_or_y_net_x1;
  out0 <= bram0_data_out_net_x3;
  out1 <= bram1_data_out_net_x3;

  del_4x0_pol1_eec0dddd8c: entity work.del_4x0_pol1_entity_49de411777
    port map (
      ce_1 => ce_1_sg_x448,
      clk_1 => clk_1_sg_x448,
      d => mux_y_net_x4,
      q => register0_q_net_x4
    );

  del_4x0_pol2_e885270dd1: entity work.del_4x0_pol1_entity_49de411777
    port map (
      ce_1 => ce_1_sg_x448,
      clk_1 => clk_1_sg_x448,
      d => mux1_y_net_x4,
      q => register0_q_net_x7
    );

  del_4x0_pol3_0e91210785: entity work.del_4x0_pol1_entity_49de411777
    port map (
      ce_1 => ce_1_sg_x448,
      clk_1 => clk_1_sg_x448,
      d => mux2_y_net_x4,
      q => register0_q_net_x5
    );

  del_4x0_pol4_b6ec0e10aa: entity work.del_4x0_pol1_entity_49de411777
    port map (
      ce_1 => ce_1_sg_x448,
      clk_1 => clk_1_sg_x448,
      d => mux3_y_net_x4,
      q => register0_q_net_x8
    );

  del_sync_4x0_83f758c068: entity work.delay11_entity_c2a06abd76
    port map (
      ce_1 => ce_1_sg_x448,
      clk_1 => clk_1_sg_x448,
      d => delay2_q_net_x3,
      q => register0_q_net_x9
    );

  fft_biplex_real_4x0_74800c449d: entity work.fft_biplex_real_4x0_entity_d1b89c22a9
    port map (
      ce_1 => ce_1_sg_x448,
      clk_1 => clk_1_sg_x448,
      pol1 => register0_q_net_x10,
      pol2 => register0_q_net_x11,
      pol3 => register0_q_net_x12,
      pol4 => register0_q_net_x13,
      shift => slice6_y_net_x19,
      sync => register0_q_net_x14,
      of_x0 => logical1_y_net_x8,
      pol1_out => mux_y_net_x4,
      pol2_out => mux1_y_net_x4,
      pol3_out => mux2_y_net_x4,
      pol4_out => mux3_y_net_x4,
      sync_out => delay2_q_net_x3
    );

  fft_direct_ff4fd4788b: entity work.fft_direct_entity_ee646f7bda
    port map (
      ce_1 => ce_1_sg_x448,
      clk_1 => clk_1_sg_x448,
      in0 => register0_q_net_x4,
      in1 => register0_q_net_x7,
      in2 => register0_q_net_x5,
      in3 => register0_q_net_x8,
      shift => slice_y_net_x0,
      sync => register0_q_net_x9,
      of_x0 => of_or_y_net_x0,
      out0 => node2_0_q_net_x2,
      out1 => node2_2_q_net_x2,
      sync_out => sync_delay_q_net_x8
    );

  fft_unscrambler_704f296532: entity work.fft_unscrambler_entity_704f296532
    port map (
      ce_1 => ce_1_sg_x448,
      clk_1 => clk_1_sg_x448,
      in1 => node2_0_q_net_x2,
      in2 => node2_2_q_net_x2,
      sync => sync_delay_q_net_x8,
      out1 => bram0_data_out_net_x3,
      out2 => bram1_data_out_net_x3
    );

  in_del_4x0_pol1_5a2cb5cdbc: entity work.in_del_4x0_pol1_entity_96a59b4013
    port map (
      ce_1 => ce_1_sg_x448,
      clk_1 => clk_1_sg_x448,
      d => shift3_op_net_x2,
      q => register0_q_net_x10
    );

  in_del_4x0_pol2_dcb130ad53: entity work.in_del_4x0_pol1_entity_96a59b4013
    port map (
      ce_1 => ce_1_sg_x448,
      clk_1 => clk_1_sg_x448,
      d => shift1_op_net_x2,
      q => register0_q_net_x11
    );

  in_del_4x0_pol3_22e0a05376: entity work.in_del_4x0_pol1_entity_96a59b4013
    port map (
      ce_1 => ce_1_sg_x448,
      clk_1 => clk_1_sg_x448,
      d => shift2_op_net_x2,
      q => register0_q_net_x12
    );

  in_del_4x0_pol4_98451403ae: entity work.in_del_4x0_pol1_entity_96a59b4013
    port map (
      ce_1 => ce_1_sg_x448,
      clk_1 => clk_1_sg_x448,
      d => shift4_op_net_x2,
      q => register0_q_net_x13
    );

  in_del_sync_4x0_e70915ff39: entity work.delay11_entity_c2a06abd76
    port map (
      ce_1 => ce_1_sg_x448,
      clk_1 => clk_1_sg_x448,
      d => delay_q_net_x2,
      q => register0_q_net_x14
    );

  of_or: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x448,
      clk => clk_1_sg_x448,
      clr => '0',
      d0(0) => of_or_y_net_x0,
      d1(0) => logical1_y_net_x8,
      y(0) => of_or_y_net_x1
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 8,
      x_width => 10,
      y_width => 2
    )
    port map (
      x => slice6_y_net_x19,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/pfb_fir_real/adder_1_1"

entity adder_1_1_entity_13a6851d97 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din1: in std_logic_vector(25 downto 0); 
    din2: in std_logic_vector(25 downto 0); 
    sync: in std_logic; 
    dout: out std_logic_vector(25 downto 0); 
    sync_out: out std_logic
  );
end adder_1_1_entity_13a6851d97;

architecture structural of adder_1_1_entity_13a6851d97 is
  signal addr1_s_net_x0: std_logic_vector(25 downto 0);
  signal ce_1_sg_x449: std_logic;
  signal clk_1_sg_x449: std_logic;
  signal delay_q_net_x0: std_logic;
  signal mult_p_net_x1: std_logic_vector(25 downto 0);
  signal mult_p_net_x2: std_logic_vector(25 downto 0);
  signal sync_delay_q_net_x0: std_logic;

begin
  ce_1_sg_x449 <= ce_1;
  clk_1_sg_x449 <= clk_1;
  mult_p_net_x1 <= din1;
  mult_p_net_x2 <= din2;
  delay_q_net_x0 <= sync;
  dout <= addr1_s_net_x0;
  sync_out <= sync_delay_q_net_x0;

  addr1: entity work.addsub_43a374a7af
    port map (
      a => mult_p_net_x1,
      b => mult_p_net_x2,
      ce => ce_1_sg_x449,
      clk => clk_1_sg_x449,
      clr => '0',
      s => addr1_s_net_x0
    );

  sync_delay: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x449,
      clk => clk_1_sg_x449,
      clr => '0',
      d(0) => delay_q_net_x0,
      q(0) => sync_delay_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/pfb_fir_real/adder_1_2"

entity adder_1_2_entity_59287c1711 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din1: in std_logic_vector(25 downto 0); 
    din2: in std_logic_vector(25 downto 0); 
    dout: out std_logic_vector(25 downto 0)
  );
end adder_1_2_entity_59287c1711;

architecture structural of adder_1_2_entity_59287c1711 is
  signal addr1_s_net_x0: std_logic_vector(25 downto 0);
  signal ce_1_sg_x450: std_logic;
  signal clk_1_sg_x450: std_logic;
  signal mult_p_net_x1: std_logic_vector(25 downto 0);
  signal mult_p_net_x2: std_logic_vector(25 downto 0);

begin
  ce_1_sg_x450 <= ce_1;
  clk_1_sg_x450 <= clk_1;
  mult_p_net_x1 <= din1;
  mult_p_net_x2 <= din2;
  dout <= addr1_s_net_x0;

  addr1: entity work.addsub_43a374a7af
    port map (
      a => mult_p_net_x1,
      b => mult_p_net_x2,
      ce => ce_1_sg_x450,
      clk => clk_1_sg_x450,
      clr => '0',
      s => addr1_s_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/pfb_fir_real/pol1_in1_coeffs"

entity pol1_in1_coeffs_entity_c8afea88ae is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(7 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(7 downto 0); 
    sync_out: out std_logic
  );
end pol1_in1_coeffs_entity_c8afea88ae;

architecture structural of pol1_in1_coeffs_entity_c8afea88ae is
  signal ce_1_sg_x457: std_logic;
  signal clk_1_sg_x457: std_logic;
  signal concat_y_net: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(2 downto 0);
  signal delay1_q_net_x0: std_logic_vector(7 downto 0);
  signal delay_q_net_x0: std_logic;
  signal delay_sync_q_net_x0: std_logic;
  signal fan_delay1_q_net: std_logic_vector(2 downto 0);
  signal fan_delay2_q_net: std_logic_vector(2 downto 0);
  signal register_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(7 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x457 <= ce_1;
  clk_1_sg_x457 <= clk_1;
  reinterpret4_output_port_net_x1 <= din;
  delay_sync_q_net_x0 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;
  sync_out <= delay_q_net_x0;

  concat: entity work.concat_b198bd62b0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concat_y_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_514048f9c72a30b1",
      op_arith => xlUnsigned,
      op_width => 3
    )
    port map (
      ce => ce_1_sg_x457,
      clk => clk_1_sg_x457,
      clr => '0',
      en => "1",
      rst(0) => delay_sync_q_net_x0,
      op => counter_op_net
    );

  delay: entity work.xldelay
    generic map (
      latency => 5,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x457,
      clk => clk_1_sg_x457,
      d(0) => delay_sync_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_q_net_x0
    );

  delay1: entity work.xldelay
    generic map (
      latency => 5,
      reg_retiming => 0,
      reset => 0,
      width => 8
    )
    port map (
      ce => ce_1_sg_x457,
      clk => clk_1_sg_x457,
      d => reinterpret4_output_port_net_x1,
      en => '1',
      rst => '1',
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 3
    )
    port map (
      ce => ce_1_sg_x457,
      clk => clk_1_sg_x457,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 3
    )
    port map (
      ce => ce_1_sg_x457,
      clk => clk_1_sg_x457,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay2_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 36,
      init_value => b"000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x457,
      clk => clk_1_sg_x457,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  rom1: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 3,
      c_width => 18,
      core_name0 => "bmg_72_7923a80e2a3186d3",
      latency => 2
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x457,
      clk => clk_1_sg_x457,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 3,
      c_width => 18,
      core_name0 => "bmg_72_22ecfdf9c708a18d",
      latency => 2
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x457,
      clk => clk_1_sg_x457,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/pfb_fir_real/pol1_in1_first_tap/delay_bram"

entity delay_bram_entity_7dc358dce0 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(7 downto 0); 
    out1: out std_logic_vector(7 downto 0)
  );
end delay_bram_entity_7dc358dce0;

architecture structural of delay_bram_entity_7dc358dce0 is
  signal ce_1_sg_x458: std_logic;
  signal clk_1_sg_x458: std_logic;
  signal constant2_op_net: std_logic;
  signal counter_op_net: std_logic_vector(2 downto 0);
  signal delay1_q_net_x1: std_logic_vector(7 downto 0);
  signal single_port_ram_data_out_net_x0: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x458 <= ce_1;
  clk_1_sg_x458 <= clk_1;
  delay1_q_net_x1 <= in1;
  out1 <= single_port_ram_data_out_net_x0;

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  counter: entity work.xlcounter_limit_c09f12_01
    generic map (
      cnt_15_0 => 4,
      cnt_31_16 => 0,
      cnt_47_32 => 0,
      cnt_63_48 => 0,
      core_name0 => "cntr_11_0_514048f9c72a30b1",
      count_limited => 1,
      op_arith => xlUnsigned,
      op_width => 3
    )
    port map (
      ce => ce_1_sg_x458,
      clk => clk_1_sg_x458,
      clr => '0',
      en => "1",
      rst => "0",
      op => counter_op_net
    );

  single_port_ram: entity work.xlspram_c09f12_01
    generic map (
      c_address_width => 3,
      c_width => 8,
      core_name0 => "bmg_72_b673a6c277a0b565",
      latency => 2
    )
    port map (
      addr => counter_op_net,
      ce => ce_1_sg_x458,
      clk => clk_1_sg_x458,
      data_in => delay1_q_net_x1,
      en => "1",
      rst => "0",
      we(0) => constant2_op_net,
      data_out => single_port_ram_data_out_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/pfb_fir_real/pol1_in1_first_tap"

entity pol1_in1_first_tap_entity_5927e1c3d2 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeffs: in std_logic_vector(35 downto 0); 
    din: in std_logic_vector(7 downto 0); 
    sync: in std_logic; 
    coeff_out: out std_logic_vector(17 downto 0); 
    dout: out std_logic_vector(7 downto 0); 
    sync_out: out std_logic; 
    taps_out: out std_logic_vector(25 downto 0)
  );
end pol1_in1_first_tap_entity_5927e1c3d2;

architecture structural of pol1_in1_first_tap_entity_5927e1c3d2 is
  signal ce_1_sg_x460: std_logic;
  signal clk_1_sg_x460: std_logic;
  signal delay1_q_net_x2: std_logic_vector(7 downto 0);
  signal delay_q_net_x2: std_logic;
  signal mult_p_net_x2: std_logic_vector(25 downto 0);
  signal mux_y_net_x1: std_logic;
  signal register_q_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(17 downto 0);
  signal single_port_ram_data_out_net_x1: std_logic_vector(7 downto 0);
  signal slice1_y_net_x0: std_logic_vector(17 downto 0);
  signal slice_y_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x460 <= ce_1;
  clk_1_sg_x460 <= clk_1;
  register_q_net_x1 <= coeffs;
  delay1_q_net_x2 <= din;
  delay_q_net_x2 <= sync;
  coeff_out <= slice1_y_net_x0;
  dout <= single_port_ram_data_out_net_x1;
  sync_out <= mux_y_net_x1;
  taps_out <= mult_p_net_x2;

  delay_bram_7dc358dce0: entity work.delay_bram_entity_7dc358dce0
    port map (
      ce_1 => ce_1_sg_x460,
      clk_1 => clk_1_sg_x460,
      in1 => delay1_q_net_x2,
      out1 => single_port_ram_data_out_net_x1
    );

  mult: entity work.mult_4fae336f61
    port map (
      a => reinterpret2_output_port_net,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x460,
      clk => clk_1_sg_x460,
      clr => '0',
      p => mult_p_net_x2
    );

  reinterpret: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_y_net,
      output_port => reinterpret_output_port_net
    );

  reinterpret2: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => delay1_q_net_x2,
      output_port => reinterpret2_output_port_net
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => register_q_net_x1,
      y => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 35,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => register_q_net_x1,
      y => slice1_y_net_x0
    );

  sync_delay_0e477d1b64: entity work.sync_delay_entity_053eb37e18
    port map (
      ce_1 => ce_1_sg_x460,
      clk_1 => clk_1_sg_x460,
      in_x0 => delay_q_net_x2,
      out_x0 => mux_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/pfb_fir_real/pol1_in1_last_tap"

entity pol1_in1_last_tap_entity_ca67f62992 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeff: in std_logic_vector(17 downto 0); 
    din: in std_logic_vector(7 downto 0); 
    sync: in std_logic; 
    sync_out: out std_logic; 
    tap_out: out std_logic_vector(25 downto 0)
  );
end pol1_in1_last_tap_entity_ca67f62992;

architecture structural of pol1_in1_last_tap_entity_ca67f62992 is
  signal ce_1_sg_x461: std_logic;
  signal clk_1_sg_x461: std_logic;
  signal delay_q_net_x1: std_logic;
  signal mult_p_net_x3: std_logic_vector(25 downto 0);
  signal mux_y_net_x2: std_logic;
  signal reinterpret1_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(17 downto 0);
  signal single_port_ram_data_out_net_x2: std_logic_vector(7 downto 0);
  signal slice1_y_net_x1: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x461 <= ce_1;
  clk_1_sg_x461 <= clk_1;
  slice1_y_net_x1 <= coeff;
  single_port_ram_data_out_net_x2 <= din;
  mux_y_net_x2 <= sync;
  sync_out <= delay_q_net_x1;
  tap_out <= mult_p_net_x3;

  delay: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x461,
      clk => clk_1_sg_x461,
      d(0) => mux_y_net_x2,
      en => '1',
      rst => '1',
      q(0) => delay_q_net_x1
    );

  mult: entity work.mult_4fae336f61
    port map (
      a => reinterpret1_output_port_net,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x461,
      clk => clk_1_sg_x461,
      clr => '0',
      p => mult_p_net_x3
    );

  reinterpret: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net_x1,
      output_port => reinterpret_output_port_net
    );

  reinterpret1: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => single_port_ram_data_out_net_x2,
      output_port => reinterpret1_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/pfb_fir_real/pol1_in2_coeffs"

entity pol1_in2_coeffs_entity_7f5932e35b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(7 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(7 downto 0)
  );
end pol1_in2_coeffs_entity_7f5932e35b;

architecture structural of pol1_in2_coeffs_entity_7f5932e35b is
  signal ce_1_sg_x462: std_logic;
  signal clk_1_sg_x462: std_logic;
  signal concat_y_net: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(2 downto 0);
  signal delay1_q_net_x0: std_logic_vector(7 downto 0);
  signal delay_sync_q_net_x1: std_logic;
  signal fan_delay1_q_net: std_logic_vector(2 downto 0);
  signal fan_delay2_q_net: std_logic_vector(2 downto 0);
  signal register_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(7 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x462 <= ce_1;
  clk_1_sg_x462 <= clk_1;
  reinterpret3_output_port_net_x1 <= din;
  delay_sync_q_net_x1 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_b198bd62b0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concat_y_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_514048f9c72a30b1",
      op_arith => xlUnsigned,
      op_width => 3
    )
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      clr => '0',
      en => "1",
      rst(0) => delay_sync_q_net_x1,
      op => counter_op_net
    );

  delay1: entity work.xldelay
    generic map (
      latency => 5,
      reg_retiming => 0,
      reset => 0,
      width => 8
    )
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      d => reinterpret3_output_port_net_x1,
      en => '1',
      rst => '1',
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 3
    )
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 3
    )
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay2_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 36,
      init_value => b"000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  rom1: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 3,
      c_width => 18,
      core_name0 => "bmg_72_def2631b070914b0",
      latency => 2
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 3,
      c_width => 18,
      core_name0 => "bmg_72_bf7d8227d376109b",
      latency => 2
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/pfb_fir_real/pol1_in2_first_tap"

entity pol1_in2_first_tap_entity_54cafea8b2 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeffs: in std_logic_vector(35 downto 0); 
    din: in std_logic_vector(7 downto 0); 
    coeff_out: out std_logic_vector(17 downto 0); 
    dout: out std_logic_vector(7 downto 0); 
    taps_out: out std_logic_vector(25 downto 0)
  );
end pol1_in2_first_tap_entity_54cafea8b2;

architecture structural of pol1_in2_first_tap_entity_54cafea8b2 is
  signal ce_1_sg_x464: std_logic;
  signal clk_1_sg_x464: std_logic;
  signal delay1_q_net_x2: std_logic_vector(7 downto 0);
  signal mult_p_net_x2: std_logic_vector(25 downto 0);
  signal register_q_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(17 downto 0);
  signal single_port_ram_data_out_net_x1: std_logic_vector(7 downto 0);
  signal slice1_y_net_x0: std_logic_vector(17 downto 0);
  signal slice_y_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x464 <= ce_1;
  clk_1_sg_x464 <= clk_1;
  register_q_net_x1 <= coeffs;
  delay1_q_net_x2 <= din;
  coeff_out <= slice1_y_net_x0;
  dout <= single_port_ram_data_out_net_x1;
  taps_out <= mult_p_net_x2;

  delay_bram_d31b332f74: entity work.delay_bram_entity_7dc358dce0
    port map (
      ce_1 => ce_1_sg_x464,
      clk_1 => clk_1_sg_x464,
      in1 => delay1_q_net_x2,
      out1 => single_port_ram_data_out_net_x1
    );

  mult: entity work.mult_4fae336f61
    port map (
      a => reinterpret2_output_port_net,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x464,
      clk => clk_1_sg_x464,
      clr => '0',
      p => mult_p_net_x2
    );

  reinterpret: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_y_net,
      output_port => reinterpret_output_port_net
    );

  reinterpret2: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => delay1_q_net_x2,
      output_port => reinterpret2_output_port_net
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => register_q_net_x1,
      y => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 35,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => register_q_net_x1,
      y => slice1_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/pfb_fir_real/pol1_in2_last_tap"

entity pol1_in2_last_tap_entity_3d20e72b5f is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeff: in std_logic_vector(17 downto 0); 
    din: in std_logic_vector(7 downto 0); 
    tap_out: out std_logic_vector(25 downto 0)
  );
end pol1_in2_last_tap_entity_3d20e72b5f;

architecture structural of pol1_in2_last_tap_entity_3d20e72b5f is
  signal ce_1_sg_x465: std_logic;
  signal clk_1_sg_x465: std_logic;
  signal mult_p_net_x3: std_logic_vector(25 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(17 downto 0);
  signal single_port_ram_data_out_net_x2: std_logic_vector(7 downto 0);
  signal slice1_y_net_x1: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x465 <= ce_1;
  clk_1_sg_x465 <= clk_1;
  slice1_y_net_x1 <= coeff;
  single_port_ram_data_out_net_x2 <= din;
  tap_out <= mult_p_net_x3;

  mult: entity work.mult_4fae336f61
    port map (
      a => reinterpret1_output_port_net,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x465,
      clk => clk_1_sg_x465,
      clr => '0',
      p => mult_p_net_x3
    );

  reinterpret: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net_x1,
      output_port => reinterpret_output_port_net
    );

  reinterpret1: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => single_port_ram_data_out_net_x2,
      output_port => reinterpret1_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/pfb_fir_real/pol1_in3_coeffs"

entity pol1_in3_coeffs_entity_37d644e242 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(7 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(7 downto 0)
  );
end pol1_in3_coeffs_entity_37d644e242;

architecture structural of pol1_in3_coeffs_entity_37d644e242 is
  signal ce_1_sg_x466: std_logic;
  signal clk_1_sg_x466: std_logic;
  signal concat_y_net: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(2 downto 0);
  signal delay1_q_net_x0: std_logic_vector(7 downto 0);
  signal delay_sync_q_net_x2: std_logic;
  signal fan_delay1_q_net: std_logic_vector(2 downto 0);
  signal fan_delay2_q_net: std_logic_vector(2 downto 0);
  signal register_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(7 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x466 <= ce_1;
  clk_1_sg_x466 <= clk_1;
  reinterpret2_output_port_net_x1 <= din;
  delay_sync_q_net_x2 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_b198bd62b0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concat_y_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_514048f9c72a30b1",
      op_arith => xlUnsigned,
      op_width => 3
    )
    port map (
      ce => ce_1_sg_x466,
      clk => clk_1_sg_x466,
      clr => '0',
      en => "1",
      rst(0) => delay_sync_q_net_x2,
      op => counter_op_net
    );

  delay1: entity work.xldelay
    generic map (
      latency => 5,
      reg_retiming => 0,
      reset => 0,
      width => 8
    )
    port map (
      ce => ce_1_sg_x466,
      clk => clk_1_sg_x466,
      d => reinterpret2_output_port_net_x1,
      en => '1',
      rst => '1',
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 3
    )
    port map (
      ce => ce_1_sg_x466,
      clk => clk_1_sg_x466,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 3
    )
    port map (
      ce => ce_1_sg_x466,
      clk => clk_1_sg_x466,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay2_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 36,
      init_value => b"000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x466,
      clk => clk_1_sg_x466,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  rom1: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 3,
      c_width => 18,
      core_name0 => "bmg_72_82d7e698d6cd5771",
      latency => 2
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x466,
      clk => clk_1_sg_x466,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 3,
      c_width => 18,
      core_name0 => "bmg_72_4394a065975be75e",
      latency => 2
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x466,
      clk => clk_1_sg_x466,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/pfb_fir_real/pol1_in4_coeffs"

entity pol1_in4_coeffs_entity_21b114648a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(7 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(7 downto 0)
  );
end pol1_in4_coeffs_entity_21b114648a;

architecture structural of pol1_in4_coeffs_entity_21b114648a is
  signal ce_1_sg_x470: std_logic;
  signal clk_1_sg_x470: std_logic;
  signal concat_y_net: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(2 downto 0);
  signal delay1_q_net_x0: std_logic_vector(7 downto 0);
  signal delay_sync_q_net_x3: std_logic;
  signal fan_delay1_q_net: std_logic_vector(2 downto 0);
  signal fan_delay2_q_net: std_logic_vector(2 downto 0);
  signal register_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x470 <= ce_1;
  clk_1_sg_x470 <= clk_1;
  reinterpret1_output_port_net_x1 <= din;
  delay_sync_q_net_x3 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_b198bd62b0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concat_y_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_514048f9c72a30b1",
      op_arith => xlUnsigned,
      op_width => 3
    )
    port map (
      ce => ce_1_sg_x470,
      clk => clk_1_sg_x470,
      clr => '0',
      en => "1",
      rst(0) => delay_sync_q_net_x3,
      op => counter_op_net
    );

  delay1: entity work.xldelay
    generic map (
      latency => 5,
      reg_retiming => 0,
      reset => 0,
      width => 8
    )
    port map (
      ce => ce_1_sg_x470,
      clk => clk_1_sg_x470,
      d => reinterpret1_output_port_net_x1,
      en => '1',
      rst => '1',
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 3
    )
    port map (
      ce => ce_1_sg_x470,
      clk => clk_1_sg_x470,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 3
    )
    port map (
      ce => ce_1_sg_x470,
      clk => clk_1_sg_x470,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay2_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 36,
      init_value => b"000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x470,
      clk => clk_1_sg_x470,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  rom1: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 3,
      c_width => 18,
      core_name0 => "bmg_72_35957677be9347c5",
      latency => 2
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x470,
      clk => clk_1_sg_x470,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 3,
      c_width => 18,
      core_name0 => "bmg_72_48d0f511ba241493",
      latency => 2
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x470,
      clk => clk_1_sg_x470,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/pfb_fir_real/pol2_in1_coeffs"

entity pol2_in1_coeffs_entity_0ba1f52945 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(7 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(7 downto 0)
  );
end pol2_in1_coeffs_entity_0ba1f52945;

architecture structural of pol2_in1_coeffs_entity_0ba1f52945 is
  signal ce_1_sg_x474: std_logic;
  signal clk_1_sg_x474: std_logic;
  signal concat_y_net: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(2 downto 0);
  signal delay1_q_net_x0: std_logic_vector(7 downto 0);
  signal delay_sync_q_net_x4: std_logic;
  signal fan_delay1_q_net: std_logic_vector(2 downto 0);
  signal fan_delay2_q_net: std_logic_vector(2 downto 0);
  signal register_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(7 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x474 <= ce_1;
  clk_1_sg_x474 <= clk_1;
  reinterpret4_output_port_net_x1 <= din;
  delay_sync_q_net_x4 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_b198bd62b0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concat_y_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_514048f9c72a30b1",
      op_arith => xlUnsigned,
      op_width => 3
    )
    port map (
      ce => ce_1_sg_x474,
      clk => clk_1_sg_x474,
      clr => '0',
      en => "1",
      rst(0) => delay_sync_q_net_x4,
      op => counter_op_net
    );

  delay1: entity work.xldelay
    generic map (
      latency => 5,
      reg_retiming => 0,
      reset => 0,
      width => 8
    )
    port map (
      ce => ce_1_sg_x474,
      clk => clk_1_sg_x474,
      d => reinterpret4_output_port_net_x1,
      en => '1',
      rst => '1',
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 3
    )
    port map (
      ce => ce_1_sg_x474,
      clk => clk_1_sg_x474,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 3
    )
    port map (
      ce => ce_1_sg_x474,
      clk => clk_1_sg_x474,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay2_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 36,
      init_value => b"000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x474,
      clk => clk_1_sg_x474,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  rom1: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 3,
      c_width => 18,
      core_name0 => "bmg_72_7923a80e2a3186d3",
      latency => 2
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x474,
      clk => clk_1_sg_x474,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 3,
      c_width => 18,
      core_name0 => "bmg_72_22ecfdf9c708a18d",
      latency => 2
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x474,
      clk => clk_1_sg_x474,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse/pfb_fir_real"

entity pfb_fir_real_entity_63f9757e89 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pol1_in1: in std_logic_vector(7 downto 0); 
    pol1_in2: in std_logic_vector(7 downto 0); 
    pol1_in3: in std_logic_vector(7 downto 0); 
    pol1_in4: in std_logic_vector(7 downto 0); 
    pol2_in1: in std_logic_vector(7 downto 0); 
    pol2_in2: in std_logic_vector(7 downto 0); 
    pol2_in3: in std_logic_vector(7 downto 0); 
    pol2_in4: in std_logic_vector(7 downto 0); 
    sync: in std_logic; 
    pol1_out1: out std_logic_vector(17 downto 0); 
    pol1_out2: out std_logic_vector(17 downto 0); 
    pol1_out3: out std_logic_vector(17 downto 0); 
    pol1_out4: out std_logic_vector(17 downto 0); 
    pol2_out1: out std_logic_vector(17 downto 0); 
    pol2_out2: out std_logic_vector(17 downto 0); 
    pol2_out3: out std_logic_vector(17 downto 0); 
    pol2_out4: out std_logic_vector(17 downto 0); 
    sync_out: out std_logic
  );
end pfb_fir_real_entity_63f9757e89;

architecture structural of pfb_fir_real_entity_63f9757e89 is
  signal addr1_s_net_x0: std_logic_vector(25 downto 0);
  signal addr1_s_net_x1: std_logic_vector(25 downto 0);
  signal addr1_s_net_x2: std_logic_vector(25 downto 0);
  signal addr1_s_net_x3: std_logic_vector(25 downto 0);
  signal addr1_s_net_x4: std_logic_vector(25 downto 0);
  signal addr1_s_net_x5: std_logic_vector(25 downto 0);
  signal addr1_s_net_x6: std_logic_vector(25 downto 0);
  signal addr1_s_net_x7: std_logic_vector(25 downto 0);
  signal ce_1_sg_x490: std_logic;
  signal clk_1_sg_x490: std_logic;
  signal convert_1_1_dout_net_x1: std_logic_vector(17 downto 0);
  signal convert_1_2_dout_net_x1: std_logic_vector(17 downto 0);
  signal convert_1_3_dout_net_x1: std_logic_vector(17 downto 0);
  signal convert_1_4_dout_net_x1: std_logic_vector(17 downto 0);
  signal convert_2_1_dout_net_x1: std_logic_vector(17 downto 0);
  signal convert_2_2_dout_net_x1: std_logic_vector(17 downto 0);
  signal convert_2_3_dout_net_x1: std_logic_vector(17 downto 0);
  signal convert_2_4_dout_net_x1: std_logic_vector(17 downto 0);
  signal delay1_q_net_x10: std_logic;
  signal delay1_q_net_x2: std_logic_vector(7 downto 0);
  signal delay1_q_net_x3: std_logic_vector(7 downto 0);
  signal delay1_q_net_x4: std_logic_vector(7 downto 0);
  signal delay1_q_net_x5: std_logic_vector(7 downto 0);
  signal delay1_q_net_x6: std_logic_vector(7 downto 0);
  signal delay1_q_net_x7: std_logic_vector(7 downto 0);
  signal delay1_q_net_x8: std_logic_vector(7 downto 0);
  signal delay1_q_net_x9: std_logic_vector(7 downto 0);
  signal delay_q_net_x1: std_logic;
  signal delay_q_net_x2: std_logic;
  signal delay_sync_q_net_x8: std_logic;
  signal mult_p_net_x10: std_logic_vector(25 downto 0);
  signal mult_p_net_x11: std_logic_vector(25 downto 0);
  signal mult_p_net_x12: std_logic_vector(25 downto 0);
  signal mult_p_net_x13: std_logic_vector(25 downto 0);
  signal mult_p_net_x14: std_logic_vector(25 downto 0);
  signal mult_p_net_x15: std_logic_vector(25 downto 0);
  signal mult_p_net_x16: std_logic_vector(25 downto 0);
  signal mult_p_net_x17: std_logic_vector(25 downto 0);
  signal mult_p_net_x2: std_logic_vector(25 downto 0);
  signal mult_p_net_x3: std_logic_vector(25 downto 0);
  signal mult_p_net_x4: std_logic_vector(25 downto 0);
  signal mult_p_net_x5: std_logic_vector(25 downto 0);
  signal mult_p_net_x6: std_logic_vector(25 downto 0);
  signal mult_p_net_x7: std_logic_vector(25 downto 0);
  signal mult_p_net_x8: std_logic_vector(25 downto 0);
  signal mult_p_net_x9: std_logic_vector(25 downto 0);
  signal mux_y_net_x2: std_logic;
  signal register_q_net_x1: std_logic_vector(35 downto 0);
  signal register_q_net_x2: std_logic_vector(35 downto 0);
  signal register_q_net_x3: std_logic_vector(35 downto 0);
  signal register_q_net_x4: std_logic_vector(35 downto 0);
  signal register_q_net_x5: std_logic_vector(35 downto 0);
  signal register_q_net_x6: std_logic_vector(35 downto 0);
  signal register_q_net_x7: std_logic_vector(35 downto 0);
  signal register_q_net_x8: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(7 downto 0);
  signal reinterpret3_output_port_net_x3: std_logic_vector(7 downto 0);
  signal reinterpret3_output_port_net_x4: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net_x3: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net_x4: std_logic_vector(7 downto 0);
  signal scale_1_1_op_net: std_logic_vector(25 downto 0);
  signal scale_1_2_op_net: std_logic_vector(25 downto 0);
  signal scale_1_3_op_net: std_logic_vector(25 downto 0);
  signal scale_1_4_op_net: std_logic_vector(25 downto 0);
  signal scale_2_1_op_net: std_logic_vector(25 downto 0);
  signal scale_2_2_op_net: std_logic_vector(25 downto 0);
  signal scale_2_3_op_net: std_logic_vector(25 downto 0);
  signal scale_2_4_op_net: std_logic_vector(25 downto 0);
  signal single_port_ram_data_out_net_x2: std_logic_vector(7 downto 0);
  signal single_port_ram_data_out_net_x3: std_logic_vector(7 downto 0);
  signal single_port_ram_data_out_net_x4: std_logic_vector(7 downto 0);
  signal single_port_ram_data_out_net_x5: std_logic_vector(7 downto 0);
  signal single_port_ram_data_out_net_x6: std_logic_vector(7 downto 0);
  signal single_port_ram_data_out_net_x7: std_logic_vector(7 downto 0);
  signal single_port_ram_data_out_net_x8: std_logic_vector(7 downto 0);
  signal single_port_ram_data_out_net_x9: std_logic_vector(7 downto 0);
  signal slice1_y_net_x1: std_logic_vector(17 downto 0);
  signal slice1_y_net_x2: std_logic_vector(17 downto 0);
  signal slice1_y_net_x3: std_logic_vector(17 downto 0);
  signal slice1_y_net_x4: std_logic_vector(17 downto 0);
  signal slice1_y_net_x5: std_logic_vector(17 downto 0);
  signal slice1_y_net_x6: std_logic_vector(17 downto 0);
  signal slice1_y_net_x7: std_logic_vector(17 downto 0);
  signal slice1_y_net_x8: std_logic_vector(17 downto 0);
  signal sync_delay_q_net_x0: std_logic;

begin
  ce_1_sg_x490 <= ce_1;
  clk_1_sg_x490 <= clk_1;
  reinterpret4_output_port_net_x4 <= pol1_in1;
  reinterpret3_output_port_net_x4 <= pol1_in2;
  reinterpret2_output_port_net_x4 <= pol1_in3;
  reinterpret1_output_port_net_x4 <= pol1_in4;
  reinterpret4_output_port_net_x3 <= pol2_in1;
  reinterpret3_output_port_net_x3 <= pol2_in2;
  reinterpret2_output_port_net_x3 <= pol2_in3;
  reinterpret1_output_port_net_x3 <= pol2_in4;
  delay_sync_q_net_x8 <= sync;
  pol1_out1 <= convert_1_1_dout_net_x1;
  pol1_out2 <= convert_1_2_dout_net_x1;
  pol1_out3 <= convert_1_3_dout_net_x1;
  pol1_out4 <= convert_1_4_dout_net_x1;
  pol2_out1 <= convert_2_1_dout_net_x1;
  pol2_out2 <= convert_2_2_dout_net_x1;
  pol2_out3 <= convert_2_3_dout_net_x1;
  pol2_out4 <= convert_2_4_dout_net_x1;
  sync_out <= delay1_q_net_x10;

  adder_1_1_13a6851d97: entity work.adder_1_1_entity_13a6851d97
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      din1 => mult_p_net_x2,
      din2 => mult_p_net_x3,
      sync => delay_q_net_x1,
      dout => addr1_s_net_x0,
      sync_out => sync_delay_q_net_x0
    );

  adder_1_2_59287c1711: entity work.adder_1_2_entity_59287c1711
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      din1 => mult_p_net_x4,
      din2 => mult_p_net_x5,
      dout => addr1_s_net_x1
    );

  adder_1_3_381c1e8a2d: entity work.adder_1_2_entity_59287c1711
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      din1 => mult_p_net_x6,
      din2 => mult_p_net_x7,
      dout => addr1_s_net_x2
    );

  adder_1_4_8da36f3793: entity work.adder_1_2_entity_59287c1711
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      din1 => mult_p_net_x8,
      din2 => mult_p_net_x9,
      dout => addr1_s_net_x3
    );

  adder_2_1_6847588ad1: entity work.adder_1_2_entity_59287c1711
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      din1 => mult_p_net_x10,
      din2 => mult_p_net_x11,
      dout => addr1_s_net_x4
    );

  adder_2_2_477c794ec9: entity work.adder_1_2_entity_59287c1711
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      din1 => mult_p_net_x12,
      din2 => mult_p_net_x13,
      dout => addr1_s_net_x5
    );

  adder_2_3_1e24dff8d7: entity work.adder_1_2_entity_59287c1711
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      din1 => mult_p_net_x14,
      din2 => mult_p_net_x15,
      dout => addr1_s_net_x6
    );

  adder_2_4_a18cf77529: entity work.adder_1_2_entity_59287c1711
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      din1 => mult_p_net_x16,
      din2 => mult_p_net_x17,
      dout => addr1_s_net_x7
    );

  convert_1_1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 25,
      din_width => 26,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x490,
      clk => clk_1_sg_x490,
      clr => '0',
      din => scale_1_1_op_net,
      en => "1",
      dout => convert_1_1_dout_net_x1
    );

  convert_1_2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 25,
      din_width => 26,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x490,
      clk => clk_1_sg_x490,
      clr => '0',
      din => scale_1_2_op_net,
      en => "1",
      dout => convert_1_2_dout_net_x1
    );

  convert_1_3: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 25,
      din_width => 26,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x490,
      clk => clk_1_sg_x490,
      clr => '0',
      din => scale_1_3_op_net,
      en => "1",
      dout => convert_1_3_dout_net_x1
    );

  convert_1_4: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 25,
      din_width => 26,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x490,
      clk => clk_1_sg_x490,
      clr => '0',
      din => scale_1_4_op_net,
      en => "1",
      dout => convert_1_4_dout_net_x1
    );

  convert_2_1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 25,
      din_width => 26,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x490,
      clk => clk_1_sg_x490,
      clr => '0',
      din => scale_2_1_op_net,
      en => "1",
      dout => convert_2_1_dout_net_x1
    );

  convert_2_2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 25,
      din_width => 26,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x490,
      clk => clk_1_sg_x490,
      clr => '0',
      din => scale_2_2_op_net,
      en => "1",
      dout => convert_2_2_dout_net_x1
    );

  convert_2_3: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 25,
      din_width => 26,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x490,
      clk => clk_1_sg_x490,
      clr => '0',
      din => scale_2_3_op_net,
      en => "1",
      dout => convert_2_3_dout_net_x1
    );

  convert_2_4: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 25,
      din_width => 26,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x490,
      clk => clk_1_sg_x490,
      clr => '0',
      din => scale_2_4_op_net,
      en => "1",
      dout => convert_2_4_dout_net_x1
    );

  delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x490,
      clk => clk_1_sg_x490,
      d(0) => sync_delay_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay1_q_net_x10
    );

  pol1_in1_coeffs_c8afea88ae: entity work.pol1_in1_coeffs_entity_c8afea88ae
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      din => reinterpret4_output_port_net_x4,
      sync => delay_sync_q_net_x8,
      coeff => register_q_net_x1,
      dout => delay1_q_net_x2,
      sync_out => delay_q_net_x2
    );

  pol1_in1_first_tap_5927e1c3d2: entity work.pol1_in1_first_tap_entity_5927e1c3d2
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      coeffs => register_q_net_x1,
      din => delay1_q_net_x2,
      sync => delay_q_net_x2,
      coeff_out => slice1_y_net_x1,
      dout => single_port_ram_data_out_net_x2,
      sync_out => mux_y_net_x2,
      taps_out => mult_p_net_x2
    );

  pol1_in1_last_tap_ca67f62992: entity work.pol1_in1_last_tap_entity_ca67f62992
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      coeff => slice1_y_net_x1,
      din => single_port_ram_data_out_net_x2,
      sync => mux_y_net_x2,
      sync_out => delay_q_net_x1,
      tap_out => mult_p_net_x3
    );

  pol1_in2_coeffs_7f5932e35b: entity work.pol1_in2_coeffs_entity_7f5932e35b
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      din => reinterpret3_output_port_net_x4,
      sync => delay_sync_q_net_x8,
      coeff => register_q_net_x2,
      dout => delay1_q_net_x3
    );

  pol1_in2_first_tap_54cafea8b2: entity work.pol1_in2_first_tap_entity_54cafea8b2
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      coeffs => register_q_net_x2,
      din => delay1_q_net_x3,
      coeff_out => slice1_y_net_x2,
      dout => single_port_ram_data_out_net_x3,
      taps_out => mult_p_net_x4
    );

  pol1_in2_last_tap_3d20e72b5f: entity work.pol1_in2_last_tap_entity_3d20e72b5f
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      coeff => slice1_y_net_x2,
      din => single_port_ram_data_out_net_x3,
      tap_out => mult_p_net_x5
    );

  pol1_in3_coeffs_37d644e242: entity work.pol1_in3_coeffs_entity_37d644e242
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      din => reinterpret2_output_port_net_x4,
      sync => delay_sync_q_net_x8,
      coeff => register_q_net_x3,
      dout => delay1_q_net_x4
    );

  pol1_in3_first_tap_03601c15e7: entity work.pol1_in2_first_tap_entity_54cafea8b2
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      coeffs => register_q_net_x3,
      din => delay1_q_net_x4,
      coeff_out => slice1_y_net_x3,
      dout => single_port_ram_data_out_net_x4,
      taps_out => mult_p_net_x6
    );

  pol1_in3_last_tap_23caf883ed: entity work.pol1_in2_last_tap_entity_3d20e72b5f
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      coeff => slice1_y_net_x3,
      din => single_port_ram_data_out_net_x4,
      tap_out => mult_p_net_x7
    );

  pol1_in4_coeffs_21b114648a: entity work.pol1_in4_coeffs_entity_21b114648a
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      din => reinterpret1_output_port_net_x4,
      sync => delay_sync_q_net_x8,
      coeff => register_q_net_x4,
      dout => delay1_q_net_x5
    );

  pol1_in4_first_tap_baa6d27c64: entity work.pol1_in2_first_tap_entity_54cafea8b2
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      coeffs => register_q_net_x4,
      din => delay1_q_net_x5,
      coeff_out => slice1_y_net_x4,
      dout => single_port_ram_data_out_net_x5,
      taps_out => mult_p_net_x8
    );

  pol1_in4_last_tap_9dcfddb3fb: entity work.pol1_in2_last_tap_entity_3d20e72b5f
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      coeff => slice1_y_net_x4,
      din => single_port_ram_data_out_net_x5,
      tap_out => mult_p_net_x9
    );

  pol2_in1_coeffs_0ba1f52945: entity work.pol2_in1_coeffs_entity_0ba1f52945
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      din => reinterpret4_output_port_net_x3,
      sync => delay_sync_q_net_x8,
      coeff => register_q_net_x5,
      dout => delay1_q_net_x6
    );

  pol2_in1_first_tap_2b4314a0aa: entity work.pol1_in2_first_tap_entity_54cafea8b2
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      coeffs => register_q_net_x5,
      din => delay1_q_net_x6,
      coeff_out => slice1_y_net_x5,
      dout => single_port_ram_data_out_net_x6,
      taps_out => mult_p_net_x10
    );

  pol2_in1_last_tap_6ff8b80765: entity work.pol1_in2_last_tap_entity_3d20e72b5f
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      coeff => slice1_y_net_x5,
      din => single_port_ram_data_out_net_x6,
      tap_out => mult_p_net_x11
    );

  pol2_in2_coeffs_6c55d0e788: entity work.pol1_in2_coeffs_entity_7f5932e35b
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      din => reinterpret3_output_port_net_x3,
      sync => delay_sync_q_net_x8,
      coeff => register_q_net_x6,
      dout => delay1_q_net_x7
    );

  pol2_in2_first_tap_27fa8a42e8: entity work.pol1_in2_first_tap_entity_54cafea8b2
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      coeffs => register_q_net_x6,
      din => delay1_q_net_x7,
      coeff_out => slice1_y_net_x6,
      dout => single_port_ram_data_out_net_x7,
      taps_out => mult_p_net_x12
    );

  pol2_in2_last_tap_29d43901e7: entity work.pol1_in2_last_tap_entity_3d20e72b5f
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      coeff => slice1_y_net_x6,
      din => single_port_ram_data_out_net_x7,
      tap_out => mult_p_net_x13
    );

  pol2_in3_coeffs_587b3ffd23: entity work.pol1_in3_coeffs_entity_37d644e242
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      din => reinterpret2_output_port_net_x3,
      sync => delay_sync_q_net_x8,
      coeff => register_q_net_x7,
      dout => delay1_q_net_x8
    );

  pol2_in3_first_tap_c2f39dd85f: entity work.pol1_in2_first_tap_entity_54cafea8b2
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      coeffs => register_q_net_x7,
      din => delay1_q_net_x8,
      coeff_out => slice1_y_net_x7,
      dout => single_port_ram_data_out_net_x8,
      taps_out => mult_p_net_x14
    );

  pol2_in3_last_tap_a2568c50ff: entity work.pol1_in2_last_tap_entity_3d20e72b5f
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      coeff => slice1_y_net_x7,
      din => single_port_ram_data_out_net_x8,
      tap_out => mult_p_net_x15
    );

  pol2_in4_coeffs_8ce587ee14: entity work.pol1_in4_coeffs_entity_21b114648a
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      din => reinterpret1_output_port_net_x3,
      sync => delay_sync_q_net_x8,
      coeff => register_q_net_x8,
      dout => delay1_q_net_x9
    );

  pol2_in4_first_tap_66bf157440: entity work.pol1_in2_first_tap_entity_54cafea8b2
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      coeffs => register_q_net_x8,
      din => delay1_q_net_x9,
      coeff_out => slice1_y_net_x8,
      dout => single_port_ram_data_out_net_x9,
      taps_out => mult_p_net_x16
    );

  pol2_in4_last_tap_6e0294821f: entity work.pol1_in2_last_tap_entity_3d20e72b5f
    port map (
      ce_1 => ce_1_sg_x490,
      clk_1 => clk_1_sg_x490,
      coeff => slice1_y_net_x8,
      din => single_port_ram_data_out_net_x9,
      tap_out => mult_p_net_x17
    );

  scale_1_1: entity work.scale_f01f7ce486
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr1_s_net_x0,
      op => scale_1_1_op_net
    );

  scale_1_2: entity work.scale_f01f7ce486
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr1_s_net_x1,
      op => scale_1_2_op_net
    );

  scale_1_3: entity work.scale_f01f7ce486
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr1_s_net_x2,
      op => scale_1_3_op_net
    );

  scale_1_4: entity work.scale_f01f7ce486
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr1_s_net_x3,
      op => scale_1_4_op_net
    );

  scale_2_1: entity work.scale_f01f7ce486
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr1_s_net_x4,
      op => scale_2_1_op_net
    );

  scale_2_2: entity work.scale_f01f7ce486
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr1_s_net_x5,
      op => scale_2_2_op_net
    );

  scale_2_3: entity work.scale_f01f7ce486
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr1_s_net_x6,
      op => scale_2_3_op_net
    );

  scale_2_4: entity work.scale_f01f7ce486
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr1_s_net_x7,
      op => scale_2_4_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse"

entity coarse_entity_a91220dfb7 is
  port (
    ce_1: in std_logic; 
    channel_select: in std_logic_vector(9 downto 0); 
    clk_1: in std_logic; 
    data0: in std_logic_vector(31 downto 0); 
    data1: in std_logic_vector(31 downto 0); 
    debug_chan: in std_logic_vector(5 downto 0); 
    debug_chansel: in std_logic; 
    debug_polsel: in std_logic; 
    fft_shift: in std_logic_vector(9 downto 0); 
    sync: in std_logic; 
    data_out: out std_logic_vector(71 downto 0); 
    fft_of0: out std_logic; 
    fft_of1: out std_logic; 
    snap72: out std_logic_vector(73 downto 0); 
    sync_out: out std_logic
  );
end coarse_entity_a91220dfb7;

architecture structural of coarse_entity_a91220dfb7 is
  signal bram0_data_out_net_x3: std_logic_vector(35 downto 0);
  signal bram0_data_out_net_x4: std_logic_vector(35 downto 0);
  signal bram1_data_out_net_x3: std_logic_vector(35 downto 0);
  signal bram1_data_out_net_x4: std_logic_vector(35 downto 0);
  signal ce_1_sg_x491: std_logic;
  signal clk_1_sg_x491: std_logic;
  signal concatenate_y_net_x16: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x17: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x19: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x20: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x21: std_logic_vector(73 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(71 downto 0);
  signal convert_1_1_dout_net_x1: std_logic_vector(17 downto 0);
  signal convert_1_2_dout_net_x1: std_logic_vector(17 downto 0);
  signal convert_1_3_dout_net_x1: std_logic_vector(17 downto 0);
  signal convert_1_4_dout_net_x1: std_logic_vector(17 downto 0);
  signal convert_2_1_dout_net_x1: std_logic_vector(17 downto 0);
  signal convert_2_2_dout_net_x1: std_logic_vector(17 downto 0);
  signal convert_2_3_dout_net_x1: std_logic_vector(17 downto 0);
  signal convert_2_4_dout_net_x1: std_logic_vector(17 downto 0);
  signal delay1_q_net_x0: std_logic;
  signal delay1_q_net_x10: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay3_q_net_x1: std_logic;
  signal delay_q_net_x2: std_logic;
  signal delay_q_net_x3: std_logic;
  signal delay_sync_q_net_x9: std_logic;
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);
  signal mux2_y_net_x0: std_logic_vector(35 downto 0);
  signal of_or_y_net_x1: std_logic;
  signal of_or_y_net_x2: std_logic;
  signal post_sync_delay_q_net_x3: std_logic;
  signal reinterpret1_output_port_net_x3: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(7 downto 0);
  signal reinterpret3_output_port_net_x3: std_logic_vector(7 downto 0);
  signal reinterpret3_output_port_net_x4: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net_x3: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net_x4: std_logic_vector(7 downto 0);
  signal shift1_op_net_x2: std_logic_vector(17 downto 0);
  signal shift1_op_net_x3: std_logic_vector(17 downto 0);
  signal shift2_op_net_x2: std_logic_vector(17 downto 0);
  signal shift2_op_net_x3: std_logic_vector(17 downto 0);
  signal shift3_op_net_x2: std_logic_vector(17 downto 0);
  signal shift3_op_net_x3: std_logic_vector(17 downto 0);
  signal shift4_op_net_x2: std_logic_vector(17 downto 0);
  signal shift4_op_net_x3: std_logic_vector(17 downto 0);
  signal slice17_y_net_x1: std_logic;
  signal slice18_y_net_x1: std_logic;
  signal slice19_y_net_x1: std_logic_vector(5 downto 0);
  signal slice21_y_net_x0: std_logic_vector(9 downto 0);
  signal slice3_y_net: std_logic;
  signal slice6_y_net_x20: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x491 <= ce_1;
  slice21_y_net_x0 <= channel_select;
  clk_1_sg_x491 <= clk_1;
  concatenate_y_net_x20 <= data0;
  concatenate_y_net_x19 <= data1;
  slice19_y_net_x1 <= debug_chan;
  slice18_y_net_x1 <= debug_chansel;
  slice17_y_net_x1 <= debug_polsel;
  slice6_y_net_x20 <= fft_shift;
  delay_sync_q_net_x9 <= sync;
  data_out <= concatenate_y_net_x3;
  fft_of0 <= delay2_q_net_x1;
  fft_of1 <= delay3_q_net_x1;
  snap72 <= concatenate_y_net_x21;
  sync_out <= delay1_q_net_x0;

  bus_create1_3f464d45e8: entity work.bus_create1_entity_3f464d45e8
    port map (
      in1 => bram0_data_out_net_x4,
      in2 => bram1_data_out_net_x4,
      bus_out => concatenate_y_net_x16
    );

  bus_create2_342ca7abf4: entity work.bus_create1_entity_3f464d45e8
    port map (
      in1 => mux1_y_net_x0,
      in2 => mux2_y_net_x0,
      bus_out => concatenate_y_net_x3
    );

  bus_create4_5480fff498: entity work.bus_create1_entity_3f464d45e8
    port map (
      in1 => bram0_data_out_net_x3,
      in2 => bram1_data_out_net_x3,
      bus_out => concatenate_y_net_x17
    );

  bus_expand1_4a80f53028: entity work.bus_expand1_entity_4a80f53028
    port map (
      bus_in => concatenate_y_net_x19,
      lsb_out1 => reinterpret1_output_port_net_x3,
      msb_out4 => reinterpret4_output_port_net_x3,
      out2 => reinterpret2_output_port_net_x3,
      out3 => reinterpret3_output_port_net_x3
    );

  bus_expand2_e85f2e4e78: entity work.bus_expand1_entity_4a80f53028
    port map (
      bus_in => concatenate_y_net_x20,
      lsb_out1 => reinterpret1_output_port_net_x4,
      msb_out4 => reinterpret4_output_port_net_x4,
      out2 => reinterpret2_output_port_net_x4,
      out3 => reinterpret3_output_port_net_x4
    );

  crs_snap_70bbc1e976: entity work.crs_snap_entity_70bbc1e976
    port map (
      ce_1 => ce_1_sg_x491,
      clk_1 => clk_1_sg_x491,
      data_pol0 => concatenate_y_net_x17,
      data_pol1 => concatenate_y_net_x16,
      pol_select => slice17_y_net_x1,
      select_chan => slice18_y_net_x1,
      selected_chan => slice19_y_net_x1,
      sync => post_sync_delay_q_net_x3,
      coarse_debug => concatenate_y_net_x21
    );

  delay1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x491,
      clk => clk_1_sg_x491,
      clr => '0',
      d(0) => post_sync_delay_q_net_x3,
      q(0) => delay1_q_net_x0
    );

  delay2: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x491,
      clk => clk_1_sg_x491,
      clr => '0',
      d(0) => of_or_y_net_x1,
      q(0) => delay2_q_net_x1
    );

  delay3: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x491,
      clk => clk_1_sg_x491,
      clr => '0',
      d(0) => of_or_y_net_x2,
      q(0) => delay3_q_net_x1
    );

  fft_wideband_real0_c512b4816a: entity work.fft_wideband_real0_entity_c512b4816a
    port map (
      ce_1 => ce_1_sg_x491,
      clk_1 => clk_1_sg_x491,
      in0 => shift3_op_net_x2,
      in1 => shift1_op_net_x2,
      in2 => shift2_op_net_x2,
      in3 => shift4_op_net_x2,
      shift => slice6_y_net_x20,
      sync => delay_q_net_x2,
      of_x0 => of_or_y_net_x1,
      out0 => bram0_data_out_net_x3,
      out1 => bram1_data_out_net_x3,
      sync_out => post_sync_delay_q_net_x3
    );

  fft_wideband_real1_9c10afbb70: entity work.fft_wideband_real1_entity_9c10afbb70
    port map (
      ce_1 => ce_1_sg_x491,
      clk_1 => clk_1_sg_x491,
      in0 => shift3_op_net_x3,
      in1 => shift1_op_net_x3,
      in2 => shift2_op_net_x3,
      in3 => shift4_op_net_x3,
      shift => slice6_y_net_x20,
      sync => delay_q_net_x3,
      of_x0 => of_or_y_net_x2,
      out0 => bram0_data_out_net_x4,
      out1 => bram1_data_out_net_x4
    );

  mux1: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x491,
      clk => clk_1_sg_x491,
      clr => '0',
      d0 => bram0_data_out_net_x3,
      d1 => bram1_data_out_net_x3,
      sel(0) => slice3_y_net,
      y => mux1_y_net_x0
    );

  mux2: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x491,
      clk => clk_1_sg_x491,
      clr => '0',
      d0 => bram0_data_out_net_x4,
      d1 => bram1_data_out_net_x4,
      sel(0) => slice3_y_net,
      y => mux2_y_net_x0
    );

  pfb_fir_real_63f9757e89: entity work.pfb_fir_real_entity_63f9757e89
    port map (
      ce_1 => ce_1_sg_x491,
      clk_1 => clk_1_sg_x491,
      pol1_in1 => reinterpret4_output_port_net_x4,
      pol1_in2 => reinterpret3_output_port_net_x4,
      pol1_in3 => reinterpret2_output_port_net_x4,
      pol1_in4 => reinterpret1_output_port_net_x4,
      pol2_in1 => reinterpret4_output_port_net_x3,
      pol2_in2 => reinterpret3_output_port_net_x3,
      pol2_in3 => reinterpret2_output_port_net_x3,
      pol2_in4 => reinterpret1_output_port_net_x3,
      sync => delay_sync_q_net_x9,
      pol1_out1 => convert_1_1_dout_net_x1,
      pol1_out2 => convert_1_2_dout_net_x1,
      pol1_out3 => convert_1_3_dout_net_x1,
      pol1_out4 => convert_1_4_dout_net_x1,
      pol2_out1 => convert_2_1_dout_net_x1,
      pol2_out2 => convert_2_2_dout_net_x1,
      pol2_out3 => convert_2_3_dout_net_x1,
      pol2_out4 => convert_2_4_dout_net_x1,
      sync_out => delay1_q_net_x10
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 10,
      y_width => 1
    )
    port map (
      x => slice21_y_net_x0,
      y(0) => slice3_y_net
    );

  x1st_shift1_f043d74227: entity work.x1st_shift_entity_9909f3ebcd
    port map (
      ce_1 => ce_1_sg_x491,
      clk_1 => clk_1_sg_x491,
      din1 => convert_2_1_dout_net_x1,
      din2 => convert_2_2_dout_net_x1,
      din3 => convert_2_3_dout_net_x1,
      din4 => convert_2_4_dout_net_x1,
      sync_in => delay1_q_net_x10,
      dout1 => shift3_op_net_x3,
      dout2 => shift1_op_net_x3,
      dout3 => shift2_op_net_x3,
      dout4 => shift4_op_net_x3,
      sync_out => delay_q_net_x3
    );

  x1st_shift_9909f3ebcd: entity work.x1st_shift_entity_9909f3ebcd
    port map (
      ce_1 => ce_1_sg_x491,
      clk_1 => clk_1_sg_x491,
      din1 => convert_1_1_dout_net_x1,
      din2 => convert_1_2_dout_net_x1,
      din3 => convert_1_3_dout_net_x1,
      din4 => convert_1_4_dout_net_x1,
      sync_in => delay1_q_net_x10,
      dout1 => shift3_op_net_x2,
      dout2 => shift1_op_net_x2,
      dout3 => shift2_op_net_x2,
      dout4 => shift4_op_net_x2,
      sync_out => delay_q_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse_delay/bus_create1"

entity bus_create1_entity_e610e729f9 is
  port (
    in1: in std_logic; 
    in2: in std_logic_vector(31 downto 0); 
    bus_out: out std_logic_vector(32 downto 0)
  );
end bus_create1_entity_e610e729f9;

architecture structural of bus_create1_entity_e610e729f9 is
  signal concatenate_y_net_x0: std_logic_vector(32 downto 0);
  signal delay1_q_net_x1: std_logic;
  signal reinterpret1_output_port_net: std_logic;
  signal reinterpret2_output_port_net: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(31 downto 0);

begin
  delay1_q_net_x1 <= in1;
  reinterpret2_output_port_net_x1 <= in2;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_b3936f83fc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => delay1_q_net_x1,
      output_port(0) => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret2_output_port_net_x1,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse_delay/bus_create2"

entity bus_create2_entity_72ad0630e7 is
  port (
    in1: in std_logic_vector(7 downto 0); 
    in2: in std_logic_vector(7 downto 0); 
    in3: in std_logic_vector(7 downto 0); 
    in4: in std_logic_vector(7 downto 0); 
    bus_out: out std_logic_vector(31 downto 0)
  );
end bus_create2_entity_72ad0630e7;

architecture structural of bus_create2_entity_72ad0630e7 is
  signal concatenate_y_net_x20: std_logic_vector(31 downto 0);
  signal mux12_y_net_x0: std_logic_vector(7 downto 0);
  signal mux22_y_net_x0: std_logic_vector(7 downto 0);
  signal mux32_y_net_x0: std_logic_vector(7 downto 0);
  signal mux42_y_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(7 downto 0);

begin
  mux42_y_net_x0 <= in1;
  mux32_y_net_x0 <= in2;
  mux22_y_net_x0 <= in3;
  mux12_y_net_x0 <= in4;
  bus_out <= concatenate_y_net_x20;

  concatenate: entity work.concat_a1e126f11c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x20
    );

  reinterpret1: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux42_y_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux32_y_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux22_y_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux12_y_net_x0,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse_delay/cd_tr"

entity cd_tr_entity_e556bbeffd is
  port (
    arm: in std_logic; 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    current_time: in std_logic_vector(63 downto 0); 
    din: in std_logic_vector(32 downto 0); 
    load_now: in std_logic; 
    load_time: in std_logic_vector(47 downto 0); 
    load_value: in std_logic_vector(78 downto 0); 
    rst: in std_logic; 
    dout: out std_logic_vector(32 downto 0); 
    enable: out std_logic; 
    value: out std_logic_vector(78 downto 0)
  );
end cd_tr_entity_e556bbeffd;

architecture structural of cd_tr_entity_e556bbeffd is
  signal assert_dout_net: std_logic;
  signal ce_1_sg_x493: std_logic;
  signal clk_1_sg_x493: std_logic;
  signal clock_op_net_x1: std_logic_vector(63 downto 0);
  signal concat22_y_net_x0: std_logic_vector(78 downto 0);
  signal concat9_y_net_x0: std_logic_vector(47 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(32 downto 0);
  signal delay3_q_net: std_logic;
  signal delay4_q_net: std_logic;
  signal delay6_q_net_x0: std_logic_vector(32 downto 0);
  signal delay6_q_net_x1: std_logic;
  signal delay7_q_net_x1: std_logic_vector(32 downto 0);
  signal delay_q_net_x0: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal inverter_op_net: std_logic;
  signal logical12_y_net_x1: std_logic;
  signal logical14_y_net_x2: std_logic;
  signal logical1_y_net: std_logic;
  signal logical2_y_net: std_logic;
  signal logical3_y_net: std_logic;
  signal logical4_y_net: std_logic;
  signal logical5_y_net: std_logic;
  signal register1_q_net: std_logic;
  signal register2_q_net: std_logic_vector(47 downto 0);
  signal register3_q_net: std_logic_vector(78 downto 0);
  signal register_q_net_x0: std_logic_vector(78 downto 0);
  signal relational_op_net: std_logic;
  signal slice2_y_net: std_logic_vector(47 downto 0);
  signal slice_y_net: std_logic_vector(47 downto 0);

begin
  logical12_y_net_x1 <= arm;
  ce_1_sg_x493 <= ce_1;
  clk_1_sg_x493 <= clk_1;
  clock_op_net_x1 <= current_time;
  concatenate_y_net_x1 <= din;
  delay6_q_net_x1 <= load_now;
  concat9_y_net_x0 <= load_time;
  concat22_y_net_x0 <= load_value;
  logical14_y_net_x2 <= rst;
  dout <= delay7_q_net_x1;
  enable <= delay_q_net_x0;
  value <= register_q_net_x0;

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 1,
      dout_width => 1
    )
    port map (
      din(0) => register1_q_net,
      dout(0) => assert_dout_net
    );

  delay: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x493,
      clk => clk_1_sg_x493,
      clr => '0',
      d(0) => logical1_y_net,
      q(0) => delay_q_net_x0
    );

  delay3: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x493,
      clk => clk_1_sg_x493,
      clr => '0',
      d(0) => logical1_y_net,
      q(0) => delay3_q_net
    );

  delay4: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x493,
      clk => clk_1_sg_x493,
      clr => '0',
      d(0) => edge_op_y_net_x0,
      q(0) => delay4_q_net
    );

  delay6: entity work.delay_f78bae76bd
    port map (
      ce => ce_1_sg_x493,
      clk => clk_1_sg_x493,
      clr => '0',
      d => concatenate_y_net_x1,
      q => delay6_q_net_x0
    );

  delay7: entity work.delay_f78bae76bd
    port map (
      ce => ce_1_sg_x493,
      clk => clk_1_sg_x493,
      clr => '0',
      d => delay6_q_net_x0,
      q => delay7_q_net_x1
    );

  edge_detect1_bcf4b1adc5: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x493,
      clk_1 => clk_1_sg_x493,
      in_x0 => logical12_y_net_x1,
      out_x0 => edge_op_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x493,
      clk => clk_1_sg_x493,
      clr => '0',
      ip(0) => assert_dout_net,
      op(0) => inverter_op_net
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register1_q_net,
      d1(0) => logical2_y_net,
      y(0) => logical1_y_net
    );

  logical2: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x493,
      clk => clk_1_sg_x493,
      clr => '0',
      d0(0) => relational_op_net,
      d1(0) => delay6_q_net_x1,
      y(0) => logical2_y_net
    );

  logical3: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay4_q_net,
      y(0) => logical3_y_net
    );

  logical4: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => assert_dout_net,
      d1(0) => logical2_y_net,
      y(0) => logical4_y_net
    );

  logical5: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical3_y_net,
      d1(0) => logical4_y_net,
      y(0) => logical5_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x493,
      clk => clk_1_sg_x493,
      d(0) => inverter_op_net,
      en(0) => logical5_y_net,
      rst(0) => logical14_y_net_x2,
      q(0) => register1_q_net
    );

  register2: entity work.xlregister
    generic map (
      d_width => 48,
      init_value => b"000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x493,
      clk => clk_1_sg_x493,
      d => slice_y_net,
      en(0) => delay4_q_net,
      rst => "0",
      q => register2_q_net
    );

  register3: entity work.xlregister
    generic map (
      d_width => 79,
      init_value => b"0000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x493,
      clk => clk_1_sg_x493,
      d => concat22_y_net_x0,
      en(0) => delay4_q_net,
      rst => "0",
      q => register3_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 79,
      init_value => b"0000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x493,
      clk => clk_1_sg_x493,
      d => register3_q_net,
      en(0) => delay3_q_net,
      rst => "0",
      q => register_q_net_x0
    );

  relational: entity work.relational_e885809f2f
    port map (
      a => slice2_y_net,
      b => register2_q_net,
      ce => ce_1_sg_x493,
      clk => clk_1_sg_x493,
      clr => '0',
      op(0) => relational_op_net
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 47,
      x_width => 48,
      y_width => 48
    )
    port map (
      x => concat9_y_net_x0,
      y => slice_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 47,
      x_width => 64,
      y_width => 48
    )
    port map (
      x => clock_op_net_x1,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse_delay/cd_tr1"

entity cd_tr1_entity_34e6da8a4b is
  port (
    arm: in std_logic; 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    current_time: in std_logic_vector(63 downto 0); 
    din: in std_logic_vector(31 downto 0); 
    load_now: in std_logic; 
    load_time: in std_logic_vector(47 downto 0); 
    load_value: in std_logic_vector(78 downto 0); 
    rst: in std_logic; 
    dout: out std_logic_vector(31 downto 0); 
    enable: out std_logic; 
    value: out std_logic_vector(78 downto 0)
  );
end cd_tr1_entity_34e6da8a4b;

architecture structural of cd_tr1_entity_34e6da8a4b is
  signal assert_dout_net: std_logic;
  signal ce_1_sg_x495: std_logic;
  signal clk_1_sg_x495: std_logic;
  signal clock_op_net_x2: std_logic_vector(63 downto 0);
  signal concat1_y_net_x0: std_logic_vector(78 downto 0);
  signal concat2_y_net_x0: std_logic_vector(47 downto 0);
  signal delay3_q_net: std_logic;
  signal delay4_q_net: std_logic;
  signal delay6_q_net: std_logic_vector(31 downto 0);
  signal delay6_q_net_x2: std_logic;
  signal delay7_q_net_x1: std_logic_vector(31 downto 0);
  signal delay_q_net_x0: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal inverter_op_net: std_logic;
  signal logical14_y_net_x3: std_logic;
  signal logical1_y_net: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical2_y_net: std_logic;
  signal logical3_y_net: std_logic;
  signal logical4_y_net: std_logic;
  signal logical5_y_net: std_logic;
  signal register1_q_net: std_logic;
  signal register2_q_net: std_logic_vector(47 downto 0);
  signal register3_q_net: std_logic_vector(78 downto 0);
  signal register_q_net_x0: std_logic_vector(78 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal relational_op_net: std_logic;
  signal slice2_y_net: std_logic_vector(47 downto 0);
  signal slice_y_net: std_logic_vector(47 downto 0);

begin
  logical1_y_net_x1 <= arm;
  ce_1_sg_x495 <= ce_1;
  clk_1_sg_x495 <= clk_1;
  clock_op_net_x2 <= current_time;
  reinterpret1_output_port_net_x1 <= din;
  delay6_q_net_x2 <= load_now;
  concat2_y_net_x0 <= load_time;
  concat1_y_net_x0 <= load_value;
  logical14_y_net_x3 <= rst;
  dout <= delay7_q_net_x1;
  enable <= delay_q_net_x0;
  value <= register_q_net_x0;

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 1,
      dout_width => 1
    )
    port map (
      din(0) => register1_q_net,
      dout(0) => assert_dout_net
    );

  delay: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x495,
      clk => clk_1_sg_x495,
      clr => '0',
      d(0) => logical1_y_net,
      q(0) => delay_q_net_x0
    );

  delay3: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x495,
      clk => clk_1_sg_x495,
      clr => '0',
      d(0) => logical1_y_net,
      q(0) => delay3_q_net
    );

  delay4: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x495,
      clk => clk_1_sg_x495,
      clr => '0',
      d(0) => edge_op_y_net_x0,
      q(0) => delay4_q_net
    );

  delay6: entity work.delay_3f5b23b538
    port map (
      ce => ce_1_sg_x495,
      clk => clk_1_sg_x495,
      clr => '0',
      d => reinterpret1_output_port_net_x1,
      q => delay6_q_net
    );

  delay7: entity work.delay_3f5b23b538
    port map (
      ce => ce_1_sg_x495,
      clk => clk_1_sg_x495,
      clr => '0',
      d => delay6_q_net,
      q => delay7_q_net_x1
    );

  edge_detect1_164cbc49ba: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x495,
      clk_1 => clk_1_sg_x495,
      in_x0 => logical1_y_net_x1,
      out_x0 => edge_op_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x495,
      clk => clk_1_sg_x495,
      clr => '0',
      ip(0) => assert_dout_net,
      op(0) => inverter_op_net
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register1_q_net,
      d1(0) => logical2_y_net,
      y(0) => logical1_y_net
    );

  logical2: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x495,
      clk => clk_1_sg_x495,
      clr => '0',
      d0(0) => relational_op_net,
      d1(0) => delay6_q_net_x2,
      y(0) => logical2_y_net
    );

  logical3: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay4_q_net,
      y(0) => logical3_y_net
    );

  logical4: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => assert_dout_net,
      d1(0) => logical2_y_net,
      y(0) => logical4_y_net
    );

  logical5: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical3_y_net,
      d1(0) => logical4_y_net,
      y(0) => logical5_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x495,
      clk => clk_1_sg_x495,
      d(0) => inverter_op_net,
      en(0) => logical5_y_net,
      rst(0) => logical14_y_net_x3,
      q(0) => register1_q_net
    );

  register2: entity work.xlregister
    generic map (
      d_width => 48,
      init_value => b"000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x495,
      clk => clk_1_sg_x495,
      d => slice_y_net,
      en(0) => delay4_q_net,
      rst => "0",
      q => register2_q_net
    );

  register3: entity work.xlregister
    generic map (
      d_width => 79,
      init_value => b"0000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x495,
      clk => clk_1_sg_x495,
      d => concat1_y_net_x0,
      en(0) => delay4_q_net,
      rst => "0",
      q => register3_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 79,
      init_value => b"0000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x495,
      clk => clk_1_sg_x495,
      d => register3_q_net,
      en(0) => delay3_q_net,
      rst => "0",
      q => register_q_net_x0
    );

  relational: entity work.relational_e885809f2f
    port map (
      a => slice2_y_net,
      b => register2_q_net,
      ce => ce_1_sg_x495,
      clk => clk_1_sg_x495,
      clr => '0',
      op(0) => relational_op_net
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 47,
      x_width => 48,
      y_width => 48
    )
    port map (
      x => concat2_y_net_x0,
      y => slice_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 47,
      x_width => 64,
      y_width => 48
    )
    port map (
      x => clock_op_net_x2,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse_delay/delay_coarse/barrel_switcher"

entity barrel_switcher_entity_b91f80ea2d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(7 downto 0); 
    in2: in std_logic_vector(7 downto 0); 
    in3: in std_logic_vector(7 downto 0); 
    in4: in std_logic_vector(7 downto 0); 
    sel: in std_logic_vector(1 downto 0); 
    sync_in: in std_logic; 
    out1: out std_logic_vector(7 downto 0); 
    out2: out std_logic_vector(7 downto 0); 
    out3: out std_logic_vector(7 downto 0); 
    out4: out std_logic_vector(7 downto 0); 
    sync_out: out std_logic
  );
end barrel_switcher_entity_b91f80ea2d;

architecture structural of barrel_switcher_entity_b91f80ea2d is
  signal ce_1_sg_x496: std_logic;
  signal clk_1_sg_x496: std_logic;
  signal delay1_q_net: std_logic_vector(1 downto 0);
  signal delay_sel_q_net_x0: std_logic_vector(1 downto 0);
  signal delay_sync_q_net_x10: std_logic;
  signal dual_port_ram_doutb_net_x3: std_logic_vector(7 downto 0);
  signal dual_port_ram_doutb_net_x4: std_logic_vector(7 downto 0);
  signal dual_port_ram_doutb_net_x5: std_logic_vector(7 downto 0);
  signal dual_port_ram_doutb_net_x6: std_logic_vector(7 downto 0);
  signal mux11_y_net: std_logic_vector(7 downto 0);
  signal mux12_y_net_x1: std_logic_vector(7 downto 0);
  signal mux21_y_net: std_logic_vector(7 downto 0);
  signal mux22_y_net_x1: std_logic_vector(7 downto 0);
  signal mux31_y_net: std_logic_vector(7 downto 0);
  signal mux32_y_net_x1: std_logic_vector(7 downto 0);
  signal mux41_y_net: std_logic_vector(7 downto 0);
  signal mux42_y_net_x1: std_logic_vector(7 downto 0);
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic;
  signal sync_delay_q_net_x0: std_logic;

begin
  ce_1_sg_x496 <= ce_1;
  clk_1_sg_x496 <= clk_1;
  dual_port_ram_doutb_net_x6 <= in1;
  dual_port_ram_doutb_net_x5 <= in2;
  dual_port_ram_doutb_net_x4 <= in3;
  dual_port_ram_doutb_net_x3 <= in4;
  delay_sel_q_net_x0 <= sel;
  sync_delay_q_net_x0 <= sync_in;
  out1 <= mux12_y_net_x1;
  out2 <= mux22_y_net_x1;
  out3 <= mux32_y_net_x1;
  out4 <= mux42_y_net_x1;
  sync_out <= delay_sync_q_net_x10;

  delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 2
    )
    port map (
      ce => ce_1_sg_x496,
      clk => clk_1_sg_x496,
      d => delay_sel_q_net_x0,
      en => '1',
      rst => '1',
      q => delay1_q_net
    );

  delay_sync: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x496,
      clk => clk_1_sg_x496,
      d(0) => sync_delay_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_sync_q_net_x10
    );

  mux11: entity work.mux_7f6b7da686
    port map (
      ce => ce_1_sg_x496,
      clk => clk_1_sg_x496,
      clr => '0',
      d0 => dual_port_ram_doutb_net_x6,
      d1 => dual_port_ram_doutb_net_x4,
      sel(0) => slice1_y_net,
      y => mux11_y_net
    );

  mux12: entity work.mux_7f6b7da686
    port map (
      ce => ce_1_sg_x496,
      clk => clk_1_sg_x496,
      clr => '0',
      d0 => mux11_y_net,
      d1 => mux21_y_net,
      sel(0) => slice2_y_net,
      y => mux12_y_net_x1
    );

  mux21: entity work.mux_7f6b7da686
    port map (
      ce => ce_1_sg_x496,
      clk => clk_1_sg_x496,
      clr => '0',
      d0 => dual_port_ram_doutb_net_x5,
      d1 => dual_port_ram_doutb_net_x3,
      sel(0) => slice1_y_net,
      y => mux21_y_net
    );

  mux22: entity work.mux_7f6b7da686
    port map (
      ce => ce_1_sg_x496,
      clk => clk_1_sg_x496,
      clr => '0',
      d0 => mux21_y_net,
      d1 => mux31_y_net,
      sel(0) => slice2_y_net,
      y => mux22_y_net_x1
    );

  mux31: entity work.mux_7f6b7da686
    port map (
      ce => ce_1_sg_x496,
      clk => clk_1_sg_x496,
      clr => '0',
      d0 => dual_port_ram_doutb_net_x4,
      d1 => dual_port_ram_doutb_net_x6,
      sel(0) => slice1_y_net,
      y => mux31_y_net
    );

  mux32: entity work.mux_7f6b7da686
    port map (
      ce => ce_1_sg_x496,
      clk => clk_1_sg_x496,
      clr => '0',
      d0 => mux31_y_net,
      d1 => mux41_y_net,
      sel(0) => slice2_y_net,
      y => mux32_y_net_x1
    );

  mux41: entity work.mux_7f6b7da686
    port map (
      ce => ce_1_sg_x496,
      clk => clk_1_sg_x496,
      clr => '0',
      d0 => dual_port_ram_doutb_net_x3,
      d1 => dual_port_ram_doutb_net_x5,
      sel(0) => slice1_y_net,
      y => mux41_y_net
    );

  mux42: entity work.mux_7f6b7da686
    port map (
      ce => ce_1_sg_x496,
      clk => clk_1_sg_x496,
      clr => '0',
      d0 => mux41_y_net,
      d1 => mux11_y_net,
      sel(0) => slice2_y_net,
      y => mux42_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => delay_sel_q_net_x0,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => delay1_q_net,
      y(0) => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse_delay/delay_coarse/delay_dp"

entity delay_dp_entity_669e30fc9b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    delay: in std_logic_vector(10 downto 0); 
    din: in std_logic_vector(7 downto 0); 
    dout: out std_logic_vector(7 downto 0)
  );
end delay_dp_entity_669e30fc9b;

architecture structural of delay_dp_entity_669e30fc9b is
  signal addsub_s_net: std_logic_vector(10 downto 0);
  signal bram_rd_addrs_y_net_x0: std_logic_vector(10 downto 0);
  signal ce_1_sg_x497: std_logic;
  signal clk_1_sg_x497: std_logic;
  signal constant2_op_net: std_logic;
  signal constant4_op_net: std_logic;
  signal dual_port_ram_doutb_net_x4: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(7 downto 0);
  signal wr_addr_op_net: std_logic_vector(10 downto 0);

begin
  ce_1_sg_x497 <= ce_1;
  clk_1_sg_x497 <= clk_1;
  bram_rd_addrs_y_net_x0 <= delay;
  reinterpret4_output_port_net_x1 <= din;
  dout <= dual_port_ram_doutb_net_x4;

  addsub: entity work.addsub_fb71f56222
    port map (
      a => wr_addr_op_net,
      b => bram_rd_addrs_y_net_x0,
      ce => ce_1_sg_x497,
      clk => clk_1_sg_x497,
      clr => '0',
      s => addsub_s_net
    );

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  constant4: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant4_op_net
    );

  dual_port_ram: entity work.xldpram_c09f12_01
    generic map (
      c_address_width_a => 11,
      c_address_width_b => 11,
      c_width_a => 8,
      c_width_b => 8,
      core_name0 => "bmg_72_a613d001e124acbe",
      latency => 2
    )
    port map (
      a_ce => ce_1_sg_x497,
      a_clk => clk_1_sg_x497,
      addra => wr_addr_op_net,
      addrb => addsub_s_net,
      b_ce => ce_1_sg_x497,
      b_clk => clk_1_sg_x497,
      dina => reinterpret4_output_port_net_x1,
      dinb => reinterpret4_output_port_net_x1,
      ena => "1",
      enb => "1",
      rsta => "0",
      rstb => "0",
      wea(0) => constant2_op_net,
      web(0) => constant4_op_net,
      doutb => dual_port_ram_doutb_net_x4
    );

  wr_addr: entity work.counter_e4b8f9ed4e
    port map (
      ce => ce_1_sg_x497,
      clk => clk_1_sg_x497,
      clr => '0',
      op => wr_addr_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse_delay/delay_coarse/delay_dp1"

entity delay_dp1_entity_524b6d544a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    delay: in std_logic_vector(11 downto 0); 
    din: in std_logic_vector(7 downto 0); 
    dout: out std_logic_vector(7 downto 0)
  );
end delay_dp1_entity_524b6d544a;

architecture structural of delay_dp1_entity_524b6d544a is
  signal addsub1_s_net_x0: std_logic_vector(11 downto 0);
  signal addsub_s_net: std_logic_vector(10 downto 0);
  signal ce_1_sg_x498: std_logic;
  signal clk_1_sg_x498: std_logic;
  signal constant2_op_net: std_logic;
  signal constant4_op_net: std_logic;
  signal dual_port_ram_doutb_net_x5: std_logic_vector(7 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(7 downto 0);
  signal wr_addr_op_net: std_logic_vector(10 downto 0);

begin
  ce_1_sg_x498 <= ce_1;
  clk_1_sg_x498 <= clk_1;
  addsub1_s_net_x0 <= delay;
  reinterpret3_output_port_net_x1 <= din;
  dout <= dual_port_ram_doutb_net_x5;

  addsub: entity work.addsub_cba407adc0
    port map (
      a => wr_addr_op_net,
      b => addsub1_s_net_x0,
      ce => ce_1_sg_x498,
      clk => clk_1_sg_x498,
      clr => '0',
      s => addsub_s_net
    );

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  constant4: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant4_op_net
    );

  dual_port_ram: entity work.xldpram_c09f12_01
    generic map (
      c_address_width_a => 11,
      c_address_width_b => 11,
      c_width_a => 8,
      c_width_b => 8,
      core_name0 => "bmg_72_a613d001e124acbe",
      latency => 2
    )
    port map (
      a_ce => ce_1_sg_x498,
      a_clk => clk_1_sg_x498,
      addra => wr_addr_op_net,
      addrb => addsub_s_net,
      b_ce => ce_1_sg_x498,
      b_clk => clk_1_sg_x498,
      dina => reinterpret3_output_port_net_x1,
      dinb => reinterpret3_output_port_net_x1,
      ena => "1",
      enb => "1",
      rsta => "0",
      rstb => "0",
      wea(0) => constant2_op_net,
      web(0) => constant4_op_net,
      doutb => dual_port_ram_doutb_net_x5
    );

  wr_addr: entity work.counter_e4b8f9ed4e
    port map (
      ce => ce_1_sg_x498,
      clk => clk_1_sg_x498,
      clr => '0',
      op => wr_addr_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse_delay/delay_coarse"

entity delay_coarse_entity_afbd97e680 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_in1: in std_logic_vector(7 downto 0); 
    data_in2: in std_logic_vector(7 downto 0); 
    data_in3: in std_logic_vector(7 downto 0); 
    data_in4: in std_logic_vector(7 downto 0); 
    delay: in std_logic_vector(12 downto 0); 
    en: in std_logic; 
    sync: in std_logic; 
    data_out1: out std_logic_vector(7 downto 0); 
    data_out2: out std_logic_vector(7 downto 0); 
    data_out3: out std_logic_vector(7 downto 0); 
    data_out4: out std_logic_vector(7 downto 0); 
    sync_out: out std_logic
  );
end delay_coarse_entity_afbd97e680;

architecture structural of delay_coarse_entity_afbd97e680 is
  signal addsub1_s_net_x0: std_logic_vector(11 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(11 downto 0);
  signal addsub3_s_net_x0: std_logic_vector(11 downto 0);
  signal bram_rd_addrs_y_net_x0: std_logic_vector(10 downto 0);
  signal ce_1_sg_x501: std_logic;
  signal clk_1_sg_x501: std_logic;
  signal constant1_op_net: std_logic_vector(1 downto 0);
  signal constant2_op_net: std_logic_vector(1 downto 0);
  signal constant3_op_net: std_logic_vector(1 downto 0);
  signal convert1_dout_net: std_logic;
  signal convert2_dout_net: std_logic;
  signal convert3_dout_net: std_logic;
  signal delay2_q_net_x0: std_logic;
  signal delay5_q_net_x0: std_logic_vector(12 downto 0);
  signal delay_reg_q_net: std_logic_vector(12 downto 0);
  signal delay_sel_q_net_x0: std_logic_vector(1 downto 0);
  signal delay_sync_q_net_x11: std_logic;
  signal dual_port_ram_doutb_net_x4: std_logic_vector(7 downto 0);
  signal dual_port_ram_doutb_net_x5: std_logic_vector(7 downto 0);
  signal dual_port_ram_doutb_net_x6: std_logic_vector(7 downto 0);
  signal dual_port_ram_doutb_net_x7: std_logic_vector(7 downto 0);
  signal mux12_y_net_x2: std_logic_vector(7 downto 0);
  signal mux22_y_net_x2: std_logic_vector(7 downto 0);
  signal mux32_y_net_x2: std_logic_vector(7 downto 0);
  signal mux42_y_net_x2: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(7 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(7 downto 0);
  signal relational1_op_net: std_logic;
  signal relational2_op_net: std_logic;
  signal relational3_op_net: std_logic;
  signal shift_sel_y_net: std_logic_vector(1 downto 0);
  signal slice2_y_net_x1: std_logic;
  signal sync_delay_q_net_x0: std_logic;

begin
  ce_1_sg_x501 <= ce_1;
  clk_1_sg_x501 <= clk_1;
  reinterpret4_output_port_net_x2 <= data_in1;
  reinterpret3_output_port_net_x2 <= data_in2;
  reinterpret2_output_port_net_x2 <= data_in3;
  reinterpret1_output_port_net_x4 <= data_in4;
  delay5_q_net_x0 <= delay;
  delay2_q_net_x0 <= en;
  slice2_y_net_x1 <= sync;
  data_out1 <= mux42_y_net_x2;
  data_out2 <= mux32_y_net_x2;
  data_out3 <= mux22_y_net_x2;
  data_out4 <= mux12_y_net_x2;
  sync_out <= delay_sync_q_net_x11;

  addsub1: entity work.xladdsub_c09f12_01
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 11,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 1,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 12,
      core_name0 => "addsb_11_0_967e0ec2eea991a6",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 12,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 12
    )
    port map (
      a => bram_rd_addrs_y_net_x0,
      b(0) => convert1_dout_net,
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      clr => '0',
      en => "1",
      s => addsub1_s_net_x0
    );

  addsub2: entity work.xladdsub_c09f12_01
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 11,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 1,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 12,
      core_name0 => "addsb_11_0_967e0ec2eea991a6",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 12,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 12
    )
    port map (
      a => bram_rd_addrs_y_net_x0,
      b(0) => convert2_dout_net,
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      clr => '0',
      en => "1",
      s => addsub2_s_net_x0
    );

  addsub3: entity work.xladdsub_c09f12_01
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 11,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 1,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 12,
      core_name0 => "addsb_11_0_967e0ec2eea991a6",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 12,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 12
    )
    port map (
      a => bram_rd_addrs_y_net_x0,
      b(0) => convert3_dout_net,
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      clr => '0',
      en => "1",
      s => addsub3_s_net_x0
    );

  barrel_switcher_b91f80ea2d: entity work.barrel_switcher_entity_b91f80ea2d
    port map (
      ce_1 => ce_1_sg_x501,
      clk_1 => clk_1_sg_x501,
      in1 => dual_port_ram_doutb_net_x7,
      in2 => dual_port_ram_doutb_net_x6,
      in3 => dual_port_ram_doutb_net_x5,
      in4 => dual_port_ram_doutb_net_x4,
      sel => delay_sel_q_net_x0,
      sync_in => sync_delay_q_net_x0,
      out1 => mux12_y_net_x2,
      out2 => mux22_y_net_x2,
      out3 => mux32_y_net_x2,
      out4 => mux42_y_net_x2,
      sync_out => delay_sync_q_net_x11
    );

  bram_rd_addrs: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 12,
      x_width => 13,
      y_width => 11
    )
    port map (
      x => delay_reg_q_net,
      y => bram_rd_addrs_y_net_x0
    );

  constant1: entity work.constant_e8ddc079e9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant3_op_net
    );

  convert1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      clr => '0',
      din(0) => relational1_op_net,
      en => "1",
      dout(0) => convert1_dout_net
    );

  convert2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      clr => '0',
      din(0) => relational2_op_net,
      en => "1",
      dout(0) => convert2_dout_net
    );

  convert3: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      clr => '0',
      din(0) => relational3_op_net,
      en => "1",
      dout(0) => convert3_dout_net
    );

  delay_dp1_524b6d544a: entity work.delay_dp1_entity_524b6d544a
    port map (
      ce_1 => ce_1_sg_x501,
      clk_1 => clk_1_sg_x501,
      delay => addsub1_s_net_x0,
      din => reinterpret3_output_port_net_x2,
      dout => dual_port_ram_doutb_net_x5
    );

  delay_dp2_31a7b55973: entity work.delay_dp1_entity_524b6d544a
    port map (
      ce_1 => ce_1_sg_x501,
      clk_1 => clk_1_sg_x501,
      delay => addsub2_s_net_x0,
      din => reinterpret2_output_port_net_x2,
      dout => dual_port_ram_doutb_net_x6
    );

  delay_dp3_f4386d00bc: entity work.delay_dp1_entity_524b6d544a
    port map (
      ce_1 => ce_1_sg_x501,
      clk_1 => clk_1_sg_x501,
      delay => addsub3_s_net_x0,
      din => reinterpret1_output_port_net_x4,
      dout => dual_port_ram_doutb_net_x7
    );

  delay_dp_669e30fc9b: entity work.delay_dp_entity_669e30fc9b
    port map (
      ce_1 => ce_1_sg_x501,
      clk_1 => clk_1_sg_x501,
      delay => bram_rd_addrs_y_net_x0,
      din => reinterpret4_output_port_net_x2,
      dout => dual_port_ram_doutb_net_x4
    );

  delay_reg: entity work.xlregister
    generic map (
      d_width => 13,
      init_value => b"0000000000000"
    )
    port map (
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      d => delay5_q_net_x0,
      en(0) => delay2_q_net_x0,
      rst => "0",
      q => delay_reg_q_net
    );

  delay_sel: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 2
    )
    port map (
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      d => shift_sel_y_net,
      en => '1',
      rst => '1',
      q => delay_sel_q_net_x0
    );

  relational1: entity work.relational_9b3c9652f3
    port map (
      a => shift_sel_y_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

  relational2: entity work.relational_9b3c9652f3
    port map (
      a => shift_sel_y_net,
      b => constant2_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational2_op_net
    );

  relational3: entity work.relational_9b3c9652f3
    port map (
      a => shift_sel_y_net,
      b => constant3_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational3_op_net
    );

  shift_sel: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 1,
      x_width => 13,
      y_width => 2
    )
    port map (
      x => delay_reg_q_net,
      y => shift_sel_y_net
    );

  sync_delay: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x501,
      clk => clk_1_sg_x501,
      d(0) => slice2_y_net_x1,
      en => '1',
      rst => '1',
      q(0) => sync_delay_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse_delay/delay_coarse1/barrel_switcher"

entity barrel_switcher_entity_2146ed75dc is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(7 downto 0); 
    in2: in std_logic_vector(7 downto 0); 
    in3: in std_logic_vector(7 downto 0); 
    in4: in std_logic_vector(7 downto 0); 
    sel: in std_logic_vector(1 downto 0); 
    out1: out std_logic_vector(7 downto 0); 
    out2: out std_logic_vector(7 downto 0); 
    out3: out std_logic_vector(7 downto 0); 
    out4: out std_logic_vector(7 downto 0)
  );
end barrel_switcher_entity_2146ed75dc;

architecture structural of barrel_switcher_entity_2146ed75dc is
  signal ce_1_sg_x502: std_logic;
  signal clk_1_sg_x502: std_logic;
  signal delay1_q_net: std_logic_vector(1 downto 0);
  signal delay_sel_q_net_x0: std_logic_vector(1 downto 0);
  signal dual_port_ram_doutb_net_x3: std_logic_vector(7 downto 0);
  signal dual_port_ram_doutb_net_x4: std_logic_vector(7 downto 0);
  signal dual_port_ram_doutb_net_x5: std_logic_vector(7 downto 0);
  signal dual_port_ram_doutb_net_x6: std_logic_vector(7 downto 0);
  signal mux11_y_net: std_logic_vector(7 downto 0);
  signal mux12_y_net_x1: std_logic_vector(7 downto 0);
  signal mux21_y_net: std_logic_vector(7 downto 0);
  signal mux22_y_net_x1: std_logic_vector(7 downto 0);
  signal mux31_y_net: std_logic_vector(7 downto 0);
  signal mux32_y_net_x1: std_logic_vector(7 downto 0);
  signal mux41_y_net: std_logic_vector(7 downto 0);
  signal mux42_y_net_x1: std_logic_vector(7 downto 0);
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic;

begin
  ce_1_sg_x502 <= ce_1;
  clk_1_sg_x502 <= clk_1;
  dual_port_ram_doutb_net_x6 <= in1;
  dual_port_ram_doutb_net_x5 <= in2;
  dual_port_ram_doutb_net_x4 <= in3;
  dual_port_ram_doutb_net_x3 <= in4;
  delay_sel_q_net_x0 <= sel;
  out1 <= mux12_y_net_x1;
  out2 <= mux22_y_net_x1;
  out3 <= mux32_y_net_x1;
  out4 <= mux42_y_net_x1;

  delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 2
    )
    port map (
      ce => ce_1_sg_x502,
      clk => clk_1_sg_x502,
      d => delay_sel_q_net_x0,
      en => '1',
      rst => '1',
      q => delay1_q_net
    );

  mux11: entity work.mux_7f6b7da686
    port map (
      ce => ce_1_sg_x502,
      clk => clk_1_sg_x502,
      clr => '0',
      d0 => dual_port_ram_doutb_net_x6,
      d1 => dual_port_ram_doutb_net_x4,
      sel(0) => slice1_y_net,
      y => mux11_y_net
    );

  mux12: entity work.mux_7f6b7da686
    port map (
      ce => ce_1_sg_x502,
      clk => clk_1_sg_x502,
      clr => '0',
      d0 => mux11_y_net,
      d1 => mux21_y_net,
      sel(0) => slice2_y_net,
      y => mux12_y_net_x1
    );

  mux21: entity work.mux_7f6b7da686
    port map (
      ce => ce_1_sg_x502,
      clk => clk_1_sg_x502,
      clr => '0',
      d0 => dual_port_ram_doutb_net_x5,
      d1 => dual_port_ram_doutb_net_x3,
      sel(0) => slice1_y_net,
      y => mux21_y_net
    );

  mux22: entity work.mux_7f6b7da686
    port map (
      ce => ce_1_sg_x502,
      clk => clk_1_sg_x502,
      clr => '0',
      d0 => mux21_y_net,
      d1 => mux31_y_net,
      sel(0) => slice2_y_net,
      y => mux22_y_net_x1
    );

  mux31: entity work.mux_7f6b7da686
    port map (
      ce => ce_1_sg_x502,
      clk => clk_1_sg_x502,
      clr => '0',
      d0 => dual_port_ram_doutb_net_x4,
      d1 => dual_port_ram_doutb_net_x6,
      sel(0) => slice1_y_net,
      y => mux31_y_net
    );

  mux32: entity work.mux_7f6b7da686
    port map (
      ce => ce_1_sg_x502,
      clk => clk_1_sg_x502,
      clr => '0',
      d0 => mux31_y_net,
      d1 => mux41_y_net,
      sel(0) => slice2_y_net,
      y => mux32_y_net_x1
    );

  mux41: entity work.mux_7f6b7da686
    port map (
      ce => ce_1_sg_x502,
      clk => clk_1_sg_x502,
      clr => '0',
      d0 => dual_port_ram_doutb_net_x3,
      d1 => dual_port_ram_doutb_net_x5,
      sel(0) => slice1_y_net,
      y => mux41_y_net
    );

  mux42: entity work.mux_7f6b7da686
    port map (
      ce => ce_1_sg_x502,
      clk => clk_1_sg_x502,
      clr => '0',
      d0 => mux41_y_net,
      d1 => mux11_y_net,
      sel(0) => slice2_y_net,
      y => mux42_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => delay_sel_q_net_x0,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => delay1_q_net,
      y(0) => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse_delay/delay_coarse1"

entity delay_coarse1_entity_3b68014ca9 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_in1: in std_logic_vector(7 downto 0); 
    data_in2: in std_logic_vector(7 downto 0); 
    data_in3: in std_logic_vector(7 downto 0); 
    data_in4: in std_logic_vector(7 downto 0); 
    delay: in std_logic_vector(12 downto 0); 
    en: in std_logic; 
    data_out1: out std_logic_vector(7 downto 0); 
    data_out2: out std_logic_vector(7 downto 0); 
    data_out3: out std_logic_vector(7 downto 0); 
    data_out4: out std_logic_vector(7 downto 0)
  );
end delay_coarse1_entity_3b68014ca9;

architecture structural of delay_coarse1_entity_3b68014ca9 is
  signal addsub1_s_net_x0: std_logic_vector(11 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(11 downto 0);
  signal addsub3_s_net_x0: std_logic_vector(11 downto 0);
  signal bram_rd_addrs_y_net_x0: std_logic_vector(10 downto 0);
  signal ce_1_sg_x507: std_logic;
  signal clk_1_sg_x507: std_logic;
  signal constant1_op_net: std_logic_vector(1 downto 0);
  signal constant2_op_net: std_logic_vector(1 downto 0);
  signal constant3_op_net: std_logic_vector(1 downto 0);
  signal convert1_dout_net: std_logic;
  signal convert2_dout_net: std_logic;
  signal convert3_dout_net: std_logic;
  signal delay2_q_net_x0: std_logic;
  signal delay5_q_net_x0: std_logic_vector(12 downto 0);
  signal delay_reg_q_net: std_logic_vector(12 downto 0);
  signal delay_sel_q_net_x0: std_logic_vector(1 downto 0);
  signal dual_port_ram_doutb_net_x4: std_logic_vector(7 downto 0);
  signal dual_port_ram_doutb_net_x5: std_logic_vector(7 downto 0);
  signal dual_port_ram_doutb_net_x6: std_logic_vector(7 downto 0);
  signal dual_port_ram_doutb_net_x7: std_logic_vector(7 downto 0);
  signal mux12_y_net_x2: std_logic_vector(7 downto 0);
  signal mux22_y_net_x2: std_logic_vector(7 downto 0);
  signal mux32_y_net_x2: std_logic_vector(7 downto 0);
  signal mux42_y_net_x2: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(7 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(7 downto 0);
  signal relational1_op_net: std_logic;
  signal relational2_op_net: std_logic;
  signal relational3_op_net: std_logic;
  signal shift_sel_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x507 <= ce_1;
  clk_1_sg_x507 <= clk_1;
  reinterpret4_output_port_net_x2 <= data_in1;
  reinterpret3_output_port_net_x2 <= data_in2;
  reinterpret2_output_port_net_x2 <= data_in3;
  reinterpret1_output_port_net_x2 <= data_in4;
  delay5_q_net_x0 <= delay;
  delay2_q_net_x0 <= en;
  data_out1 <= mux42_y_net_x2;
  data_out2 <= mux32_y_net_x2;
  data_out3 <= mux22_y_net_x2;
  data_out4 <= mux12_y_net_x2;

  addsub1: entity work.xladdsub_c09f12_01
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 11,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 1,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 12,
      core_name0 => "addsb_11_0_967e0ec2eea991a6",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 12,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 12
    )
    port map (
      a => bram_rd_addrs_y_net_x0,
      b(0) => convert1_dout_net,
      ce => ce_1_sg_x507,
      clk => clk_1_sg_x507,
      clr => '0',
      en => "1",
      s => addsub1_s_net_x0
    );

  addsub2: entity work.xladdsub_c09f12_01
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 11,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 1,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 12,
      core_name0 => "addsb_11_0_967e0ec2eea991a6",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 12,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 12
    )
    port map (
      a => bram_rd_addrs_y_net_x0,
      b(0) => convert2_dout_net,
      ce => ce_1_sg_x507,
      clk => clk_1_sg_x507,
      clr => '0',
      en => "1",
      s => addsub2_s_net_x0
    );

  addsub3: entity work.xladdsub_c09f12_01
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 11,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 1,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 12,
      core_name0 => "addsb_11_0_967e0ec2eea991a6",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 12,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 12
    )
    port map (
      a => bram_rd_addrs_y_net_x0,
      b(0) => convert3_dout_net,
      ce => ce_1_sg_x507,
      clk => clk_1_sg_x507,
      clr => '0',
      en => "1",
      s => addsub3_s_net_x0
    );

  barrel_switcher_2146ed75dc: entity work.barrel_switcher_entity_2146ed75dc
    port map (
      ce_1 => ce_1_sg_x507,
      clk_1 => clk_1_sg_x507,
      in1 => dual_port_ram_doutb_net_x7,
      in2 => dual_port_ram_doutb_net_x6,
      in3 => dual_port_ram_doutb_net_x5,
      in4 => dual_port_ram_doutb_net_x4,
      sel => delay_sel_q_net_x0,
      out1 => mux12_y_net_x2,
      out2 => mux22_y_net_x2,
      out3 => mux32_y_net_x2,
      out4 => mux42_y_net_x2
    );

  bram_rd_addrs: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 12,
      x_width => 13,
      y_width => 11
    )
    port map (
      x => delay_reg_q_net,
      y => bram_rd_addrs_y_net_x0
    );

  constant1: entity work.constant_e8ddc079e9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant3_op_net
    );

  convert1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x507,
      clk => clk_1_sg_x507,
      clr => '0',
      din(0) => relational1_op_net,
      en => "1",
      dout(0) => convert1_dout_net
    );

  convert2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x507,
      clk => clk_1_sg_x507,
      clr => '0',
      din(0) => relational2_op_net,
      en => "1",
      dout(0) => convert2_dout_net
    );

  convert3: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x507,
      clk => clk_1_sg_x507,
      clr => '0',
      din(0) => relational3_op_net,
      en => "1",
      dout(0) => convert3_dout_net
    );

  delay_dp1_558b294e75: entity work.delay_dp1_entity_524b6d544a
    port map (
      ce_1 => ce_1_sg_x507,
      clk_1 => clk_1_sg_x507,
      delay => addsub1_s_net_x0,
      din => reinterpret3_output_port_net_x2,
      dout => dual_port_ram_doutb_net_x5
    );

  delay_dp2_ee34755f64: entity work.delay_dp1_entity_524b6d544a
    port map (
      ce_1 => ce_1_sg_x507,
      clk_1 => clk_1_sg_x507,
      delay => addsub2_s_net_x0,
      din => reinterpret2_output_port_net_x2,
      dout => dual_port_ram_doutb_net_x6
    );

  delay_dp3_3be5e7215e: entity work.delay_dp1_entity_524b6d544a
    port map (
      ce_1 => ce_1_sg_x507,
      clk_1 => clk_1_sg_x507,
      delay => addsub3_s_net_x0,
      din => reinterpret1_output_port_net_x2,
      dout => dual_port_ram_doutb_net_x7
    );

  delay_dp_8a9689ec72: entity work.delay_dp_entity_669e30fc9b
    port map (
      ce_1 => ce_1_sg_x507,
      clk_1 => clk_1_sg_x507,
      delay => bram_rd_addrs_y_net_x0,
      din => reinterpret4_output_port_net_x2,
      dout => dual_port_ram_doutb_net_x4
    );

  delay_reg: entity work.xlregister
    generic map (
      d_width => 13,
      init_value => b"0000000000000"
    )
    port map (
      ce => ce_1_sg_x507,
      clk => clk_1_sg_x507,
      d => delay5_q_net_x0,
      en(0) => delay2_q_net_x0,
      rst => "0",
      q => delay_reg_q_net
    );

  delay_sel: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 2
    )
    port map (
      ce => ce_1_sg_x507,
      clk => clk_1_sg_x507,
      d => shift_sel_y_net,
      en => '1',
      rst => '1',
      q => delay_sel_q_net_x0
    );

  relational1: entity work.relational_9b3c9652f3
    port map (
      a => shift_sel_y_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

  relational2: entity work.relational_9b3c9652f3
    port map (
      a => shift_sel_y_net,
      b => constant2_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational2_op_net
    );

  relational3: entity work.relational_9b3c9652f3
    port map (
      a => shift_sel_y_net,
      b => constant3_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational3_op_net
    );

  shift_sel: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 1,
      x_width => 13,
      y_width => 2
    )
    port map (
      x => delay_reg_q_net,
      y => shift_sel_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse_delay/delay_gen0/count_parallel"

entity count_parallel_entity_a6b60d1b26 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    update: out std_logic
  );
end count_parallel_entity_a6b60d1b26;

architecture structural of count_parallel_entity_a6b60d1b26 is
  signal ce_1_sg_x508: std_logic;
  signal clk_1_sg_x508: std_logic;
  signal constant4_op_net: std_logic_vector(6 downto 0);
  signal counter_op_net: std_logic_vector(6 downto 0);
  signal relational_op_net_x0: std_logic;
  signal slice2_y_net_x2: std_logic;

begin
  ce_1_sg_x508 <= ce_1;
  clk_1_sg_x508 <= clk_1;
  slice2_y_net_x2 <= sync_in;
  update <= relational_op_net_x0;

  constant4: entity work.constant_5478175279
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant4_op_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_09a48837e6414c49",
      op_arith => xlSigned,
      op_width => 7
    )
    port map (
      ce => ce_1_sg_x508,
      clk => clk_1_sg_x508,
      clr => '0',
      en => "1",
      rst(0) => slice2_y_net_x2,
      op => counter_op_net
    );

  relational: entity work.relational_1497de3985
    port map (
      a => counter_op_net,
      b => constant4_op_net,
      ce => ce_1_sg_x508,
      clk => clk_1_sg_x508,
      clr => '0',
      op(0) => relational_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse_delay/delay_gen0/delay_calc"

entity delay_calc_entity_10677dac44 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    en: in std_logic; 
    update: in std_logic; 
    val: in std_logic_vector(30 downto 0); 
    val_inc: in std_logic_vector(30 downto 0); 
    coeff: out std_logic_vector(44 downto 0)
  );
end delay_calc_entity_10677dac44;

architecture structural of delay_calc_entity_10677dac44 is
  signal addsub_s_net: std_logic_vector(42 downto 0);
  signal ce_1_sg_x509: std_logic;
  signal clk_1_sg_x509: std_logic;
  signal current_q_net_x0: std_logic_vector(44 downto 0);
  signal delay_q_net: std_logic;
  signal delay_q_net_x1: std_logic;
  signal delta_q_net: std_logic_vector(30 downto 0);
  signal logical_y_net: std_logic;
  signal mux_y_net: std_logic_vector(44 downto 0);
  signal normalise_fft1_op_net_x0: std_logic_vector(30 downto 0);
  signal register1_q_net: std_logic_vector(30 downto 0);
  signal register3_q_net: std_logic_vector(30 downto 0);
  signal register_q_net: std_logic;
  signal reinterpret1_output_port_net_x0: std_logic_vector(30 downto 0);
  signal relational_op_net_x1: std_logic;

begin
  ce_1_sg_x509 <= ce_1;
  clk_1_sg_x509 <= clk_1;
  delay_q_net_x1 <= en;
  relational_op_net_x1 <= update;
  reinterpret1_output_port_net_x0 <= val;
  normalise_fft1_op_net_x0 <= val_inc;
  coeff <= current_q_net_x0;

  addsub: entity work.addsub_ebbe1ebacf
    port map (
      a => current_q_net_x0,
      b => delta_q_net,
      ce => ce_1_sg_x509,
      clk => clk_1_sg_x509,
      clr => '0',
      s => addsub_s_net
    );

  current: entity work.xlregister
    generic map (
      d_width => 45,
      init_value => b"000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x509,
      clk => clk_1_sg_x509,
      d => mux_y_net,
      en(0) => delay_q_net,
      rst => "0",
      q => current_q_net_x0
    );

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x509,
      clk => clk_1_sg_x509,
      clr => '0',
      d(0) => relational_op_net_x1,
      q(0) => delay_q_net
    );

  delta: entity work.xlregister
    generic map (
      d_width => 31,
      init_value => b"0000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x509,
      clk => clk_1_sg_x509,
      d => register1_q_net,
      en(0) => delay_q_net,
      rst => "0",
      q => delta_q_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x1,
      d1(0) => register_q_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_e38ddc7597
    port map (
      ce => ce_1_sg_x509,
      clk => clk_1_sg_x509,
      clr => '0',
      d0 => addsub_s_net,
      d1 => register3_q_net,
      sel(0) => logical_y_net,
      y => mux_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 31,
      init_value => b"0000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x509,
      clk => clk_1_sg_x509,
      d => normalise_fft1_op_net_x0,
      en(0) => delay_q_net_x1,
      rst => "0",
      q => register1_q_net
    );

  register3: entity work.xlregister
    generic map (
      d_width => 31,
      init_value => b"0000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x509,
      clk => clk_1_sg_x509,
      d => reinterpret1_output_port_net_x0,
      en(0) => delay_q_net_x1,
      rst => "0",
      q => register3_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x509,
      clk => clk_1_sg_x509,
      d(0) => delay_q_net_x1,
      en(0) => delay_q_net_x1,
      rst(0) => relational_op_net_x1,
      q(0) => register_q_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse_delay/delay_gen0/phase_calc"

entity phase_calc_entity_54fee359a8 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    update: in std_logic; 
    en_o: out std_logic
  );
end phase_calc_entity_54fee359a8;

architecture structural of phase_calc_entity_54fee359a8 is
  signal ce_1_sg_x510: std_logic;
  signal clk_1_sg_x510: std_logic;
  signal delay1_q_net_x0: std_logic;
  signal delay_q_net: std_logic;
  signal relational_op_net_x2: std_logic;

begin
  ce_1_sg_x510 <= ce_1;
  clk_1_sg_x510 <= clk_1;
  relational_op_net_x2 <= update;
  en_o <= delay1_q_net_x0;

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x510,
      clk => clk_1_sg_x510,
      clr => '0',
      d(0) => relational_op_net_x2,
      q(0) => delay_q_net
    );

  delay1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x510,
      clk => clk_1_sg_x510,
      clr => '0',
      d(0) => delay_q_net,
      q(0) => delay1_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse_delay/delay_gen0"

entity delay_gen0_entity_b255b8425c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d_dt_delay: in std_logic_vector(15 downto 0); 
    delay: in std_logic_vector(30 downto 0); 
    en: in std_logic; 
    sync_in: in std_logic; 
    cd_o: out std_logic_vector(12 downto 0); 
    en_out: out std_logic
  );
end delay_gen0_entity_b255b8425c;

architecture structural of delay_gen0_entity_b255b8425c is
  signal ce_1_sg_x511: std_logic;
  signal clk_1_sg_x511: std_logic;
  signal concat4_y_net_x0: std_logic_vector(30 downto 0);
  signal convert3_dout_net: std_logic_vector(30 downto 0);
  signal convert5_dout_net: std_logic_vector(12 downto 0);
  signal current_q_net_x0: std_logic_vector(44 downto 0);
  signal delay1_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay4_q_net: std_logic;
  signal delay5_q_net_x1: std_logic_vector(12 downto 0);
  signal delay6_q_net: std_logic_vector(12 downto 0);
  signal delay_q_net_x2: std_logic;
  signal normalise_fft1_op_net_x0: std_logic_vector(30 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(30 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(15 downto 0);
  signal relational_op_net_x2: std_logic;
  signal slice15_y_net_x0: std_logic_vector(15 downto 0);
  signal slice2_y_net: std_logic_vector(30 downto 0);
  signal slice2_y_net_x3: std_logic;
  signal slice3_y_net: std_logic_vector(15 downto 0);

begin
  ce_1_sg_x511 <= ce_1;
  clk_1_sg_x511 <= clk_1;
  slice15_y_net_x0 <= d_dt_delay;
  concat4_y_net_x0 <= delay;
  delay_q_net_x2 <= en;
  slice2_y_net_x3 <= sync_in;
  cd_o <= delay5_q_net_x1;
  en_out <= delay2_q_net_x1;

  convert3: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 15,
      din_width => 16,
      dout_arith => 2,
      dout_bin_pt => 30,
      dout_width => 31,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x511,
      clk => clk_1_sg_x511,
      clr => '0',
      din => reinterpret3_output_port_net,
      en => "1",
      dout => convert3_dout_net
    );

  convert5: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 30,
      din_width => 45,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 13,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x511,
      clk => clk_1_sg_x511,
      clr => '0',
      din => current_q_net_x0,
      en => "1",
      dout => convert5_dout_net
    );

  count_parallel_a6b60d1b26: entity work.count_parallel_entity_a6b60d1b26
    port map (
      ce_1 => ce_1_sg_x511,
      clk_1 => clk_1_sg_x511,
      sync_in => slice2_y_net_x3,
      update => relational_op_net_x2
    );

  delay2: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x511,
      clk => clk_1_sg_x511,
      clr => '0',
      d(0) => delay4_q_net,
      q(0) => delay2_q_net_x1
    );

  delay4: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x511,
      clk => clk_1_sg_x511,
      clr => '0',
      d(0) => delay1_q_net_x0,
      q(0) => delay4_q_net
    );

  delay5: entity work.delay_67ef71f6b4
    port map (
      ce => ce_1_sg_x511,
      clk => clk_1_sg_x511,
      clr => '0',
      d => delay6_q_net,
      q => delay5_q_net_x1
    );

  delay6: entity work.delay_67ef71f6b4
    port map (
      ce => ce_1_sg_x511,
      clk => clk_1_sg_x511,
      clr => '0',
      d => convert5_dout_net,
      q => delay6_q_net
    );

  delay_calc_10677dac44: entity work.delay_calc_entity_10677dac44
    port map (
      ce_1 => ce_1_sg_x511,
      clk_1 => clk_1_sg_x511,
      en => delay_q_net_x2,
      update => relational_op_net_x2,
      val => reinterpret1_output_port_net_x0,
      val_inc => normalise_fft1_op_net_x0,
      coeff => current_q_net_x0
    );

  normalise_fft1: entity work.shift_d09007e5f5
    port map (
      ce => ce_1_sg_x511,
      clk => clk_1_sg_x511,
      clr => '0',
      ip => convert3_dout_net,
      op => normalise_fft1_op_net_x0
    );

  phase_calc_54fee359a8: entity work.phase_calc_entity_54fee359a8
    port map (
      ce_1 => ce_1_sg_x511,
      clk_1 => clk_1_sg_x511,
      update => relational_op_net_x2,
      en_o => delay1_q_net_x0
    );

  reinterpret1: entity work.reinterpret_4ddae7a67c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 30,
      x_width => 31,
      y_width => 31
    )
    port map (
      x => concat4_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 16,
      y_width => 16
    )
    port map (
      x => slice15_y_net_x0,
      y => slice3_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/coarse_delay"

entity coarse_delay_entity_14c739abb5 is
  port (
    arm0: in std_logic; 
    arm1: in std_logic; 
    cd_lt: in std_logic_vector(63 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data0: in std_logic_vector(31 downto 0); 
    data1: in std_logic_vector(31 downto 0); 
    ld_time0: in std_logic_vector(47 downto 0); 
    ld_time1: in std_logic_vector(47 downto 0); 
    ld_val0: in std_logic_vector(78 downto 0); 
    ld_val1: in std_logic_vector(78 downto 0); 
    load_now: in std_logic; 
    mrst: in std_logic; 
    sync: in std_logic; 
    data4_0: out std_logic_vector(31 downto 0); 
    data4_1: out std_logic_vector(31 downto 0); 
    sync_out: out std_logic
  );
end coarse_delay_entity_14c739abb5;

architecture structural of coarse_delay_entity_14c739abb5 is
  signal ce_1_sg_x516: std_logic;
  signal clk_1_sg_x516: std_logic;
  signal clock_op_net_x3: std_logic_vector(63 downto 0);
  signal concat1_y_net_x1: std_logic_vector(30 downto 0);
  signal concat1_y_net_x2: std_logic_vector(78 downto 0);
  signal concat22_y_net_x1: std_logic_vector(78 downto 0);
  signal concat2_y_net_x1: std_logic_vector(47 downto 0);
  signal concat4_y_net_x0: std_logic_vector(30 downto 0);
  signal concat9_y_net_x1: std_logic_vector(47 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(32 downto 0);
  signal concatenate_y_net_x22: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x23: std_logic_vector(31 downto 0);
  signal delay1_q_net_x2: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay2_q_net_x2: std_logic;
  signal delay5_q_net_x1: std_logic_vector(12 downto 0);
  signal delay5_q_net_x2: std_logic_vector(12 downto 0);
  signal delay6_q_net_x3: std_logic;
  signal delay7_q_net_x1: std_logic_vector(32 downto 0);
  signal delay7_q_net_x2: std_logic_vector(31 downto 0);
  signal delay_q_net_x2: std_logic;
  signal delay_q_net_x3: std_logic;
  signal delay_sync_q_net_x12: std_logic;
  signal logical12_y_net_x1: std_logic;
  signal logical14_y_net_x4: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal mux12_y_net_x2: std_logic_vector(7 downto 0);
  signal mux12_y_net_x3: std_logic_vector(7 downto 0);
  signal mux22_y_net_x2: std_logic_vector(7 downto 0);
  signal mux22_y_net_x3: std_logic_vector(7 downto 0);
  signal mux32_y_net_x2: std_logic_vector(7 downto 0);
  signal mux32_y_net_x3: std_logic_vector(7 downto 0);
  signal mux42_y_net_x2: std_logic_vector(7 downto 0);
  signal mux42_y_net_x3: std_logic_vector(7 downto 0);
  signal register_q_net_x0: std_logic_vector(78 downto 0);
  signal register_q_net_x1: std_logic_vector(78 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(31 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(7 downto 0);
  signal reinterpret3_output_port_net_x3: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net_x3: std_logic_vector(7 downto 0);
  signal slice11_y_net_x0: std_logic;
  signal slice13_y_net_x0: std_logic;
  signal slice15_y_net_x0: std_logic_vector(15 downto 0);
  signal slice17_y_net: std_logic_vector(15 downto 0);
  signal slice18_y_net: std_logic_vector(14 downto 0);
  signal slice1_y_net_x0: std_logic_vector(15 downto 0);
  signal slice2_y_net_x5: std_logic;
  signal slice3_y_net: std_logic_vector(15 downto 0);
  signal slice4_y_net: std_logic_vector(14 downto 0);

begin
  slice13_y_net_x0 <= arm0;
  slice11_y_net_x0 <= arm1;
  clock_op_net_x3 <= cd_lt;
  ce_1_sg_x516 <= ce_1;
  clk_1_sg_x516 <= clk_1;
  reinterpret2_output_port_net_x4 <= data0;
  reinterpret1_output_port_net_x5 <= data1;
  concat9_y_net_x1 <= ld_time0;
  concat2_y_net_x1 <= ld_time1;
  concat22_y_net_x1 <= ld_val0;
  concat1_y_net_x2 <= ld_val1;
  delay6_q_net_x3 <= load_now;
  logical14_y_net_x4 <= mrst;
  delay1_q_net_x2 <= sync;
  data4_0 <= concatenate_y_net_x23;
  data4_1 <= concatenate_y_net_x22;
  sync_out <= delay_sync_q_net_x12;

  bus_create1_e610e729f9: entity work.bus_create1_entity_e610e729f9
    port map (
      in1 => delay1_q_net_x2,
      in2 => reinterpret2_output_port_net_x4,
      bus_out => concatenate_y_net_x1
    );

  bus_create2_72ad0630e7: entity work.bus_create2_entity_72ad0630e7
    port map (
      in1 => mux42_y_net_x3,
      in2 => mux32_y_net_x3,
      in3 => mux22_y_net_x3,
      in4 => mux12_y_net_x3,
      bus_out => concatenate_y_net_x22
    );

  bus_create4_dac697383b: entity work.bus_create2_entity_72ad0630e7
    port map (
      in1 => mux42_y_net_x2,
      in2 => mux32_y_net_x2,
      in3 => mux22_y_net_x2,
      in4 => mux12_y_net_x2,
      bus_out => concatenate_y_net_x23
    );

  bus_expand1_b06b720f17: entity work.bus_expand_entity_42329a104d
    port map (
      bus_in => delay7_q_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out2 => slice2_y_net_x5
    );

  bus_expand3_2df401f87e: entity work.bus_expand1_entity_4a80f53028
    port map (
      bus_in => reinterpret1_output_port_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x4,
      msb_out4 => reinterpret4_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2
    );

  bus_expand4_bf4d1a495d: entity work.bus_expand1_entity_4a80f53028
    port map (
      bus_in => delay7_q_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x3,
      msb_out4 => reinterpret4_output_port_net_x3,
      out2 => reinterpret2_output_port_net_x3,
      out3 => reinterpret3_output_port_net_x3
    );

  cd_tr1_34e6da8a4b: entity work.cd_tr1_entity_34e6da8a4b
    port map (
      arm => logical1_y_net_x1,
      ce_1 => ce_1_sg_x516,
      clk_1 => clk_1_sg_x516,
      current_time => clock_op_net_x3,
      din => reinterpret1_output_port_net_x5,
      load_now => delay6_q_net_x3,
      load_time => concat2_y_net_x1,
      load_value => concat1_y_net_x2,
      rst => logical14_y_net_x4,
      dout => delay7_q_net_x2,
      enable => delay_q_net_x3,
      value => register_q_net_x1
    );

  cd_tr_e556bbeffd: entity work.cd_tr_entity_e556bbeffd
    port map (
      arm => logical12_y_net_x1,
      ce_1 => ce_1_sg_x516,
      clk_1 => clk_1_sg_x516,
      current_time => clock_op_net_x3,
      din => concatenate_y_net_x1,
      load_now => delay6_q_net_x3,
      load_time => concat9_y_net_x1,
      load_value => concat22_y_net_x1,
      rst => logical14_y_net_x4,
      dout => delay7_q_net_x1,
      enable => delay_q_net_x2,
      value => register_q_net_x0
    );

  concat1: entity work.concat_c588c5101d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => slice4_y_net,
      in1 => slice3_y_net,
      y => concat1_y_net_x1
    );

  concat4: entity work.concat_c588c5101d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => slice18_y_net,
      in1 => slice17_y_net,
      y => concat4_y_net_x0
    );

  delay_coarse1_3b68014ca9: entity work.delay_coarse1_entity_3b68014ca9
    port map (
      ce_1 => ce_1_sg_x516,
      clk_1 => clk_1_sg_x516,
      data_in1 => reinterpret4_output_port_net_x3,
      data_in2 => reinterpret3_output_port_net_x3,
      data_in3 => reinterpret2_output_port_net_x3,
      data_in4 => reinterpret1_output_port_net_x3,
      delay => delay5_q_net_x2,
      en => delay2_q_net_x2,
      data_out1 => mux42_y_net_x3,
      data_out2 => mux32_y_net_x3,
      data_out3 => mux22_y_net_x3,
      data_out4 => mux12_y_net_x3
    );

  delay_coarse_afbd97e680: entity work.delay_coarse_entity_afbd97e680
    port map (
      ce_1 => ce_1_sg_x516,
      clk_1 => clk_1_sg_x516,
      data_in1 => reinterpret4_output_port_net_x2,
      data_in2 => reinterpret3_output_port_net_x2,
      data_in3 => reinterpret2_output_port_net_x2,
      data_in4 => reinterpret1_output_port_net_x4,
      delay => delay5_q_net_x1,
      en => delay2_q_net_x1,
      sync => slice2_y_net_x5,
      data_out1 => mux42_y_net_x2,
      data_out2 => mux32_y_net_x2,
      data_out3 => mux22_y_net_x2,
      data_out4 => mux12_y_net_x2,
      sync_out => delay_sync_q_net_x12
    );

  delay_gen0_b255b8425c: entity work.delay_gen0_entity_b255b8425c
    port map (
      ce_1 => ce_1_sg_x516,
      clk_1 => clk_1_sg_x516,
      d_dt_delay => slice15_y_net_x0,
      delay => concat4_y_net_x0,
      en => delay_q_net_x2,
      sync_in => slice2_y_net_x5,
      cd_o => delay5_q_net_x1,
      en_out => delay2_q_net_x1
    );

  delay_gen1_e9f889d339: entity work.delay_gen0_entity_b255b8425c
    port map (
      ce_1 => ce_1_sg_x516,
      clk_1 => clk_1_sg_x516,
      d_dt_delay => slice1_y_net_x0,
      delay => concat1_y_net_x1,
      en => delay_q_net_x3,
      sync_in => slice2_y_net_x5,
      cd_o => delay5_q_net_x2,
      en_out => delay2_q_net_x2
    );

  logical1: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay6_q_net_x3,
      d1(0) => slice11_y_net_x0,
      y(0) => logical1_y_net_x1
    );

  logical12: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay6_q_net_x3,
      d1(0) => slice13_y_net_x0,
      y(0) => logical12_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 79,
      y_width => 16
    )
    port map (
      x => register_q_net_x1,
      y => slice1_y_net_x0
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 79,
      y_width => 16
    )
    port map (
      x => register_q_net_x0,
      y => slice15_y_net_x0
    );

  slice17: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 31,
      x_width => 79,
      y_width => 16
    )
    port map (
      x => register_q_net_x0,
      y => slice17_y_net
    );

  slice18: entity work.xlslice
    generic map (
      new_lsb => 32,
      new_msb => 46,
      x_width => 79,
      y_width => 15
    )
    port map (
      x => register_q_net_x0,
      y => slice18_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 31,
      x_width => 79,
      y_width => 16
    )
    port map (
      x => register_q_net_x1,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 32,
      new_msb => 46,
      x_width => 79,
      y_width => 15
    )
    port map (
      x => register_q_net_x1,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/convert"

entity convert_entity_c5755984be is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(3 downto 0); 
    out1: out std_logic_vector(1 downto 0)
  );
end convert_entity_c5755984be;

architecture structural of convert_entity_c5755984be is
  signal ce_1_sg_x517: std_logic;
  signal clk_1_sg_x517: std_logic;
  signal constant10_op_net: std_logic_vector(1 downto 0);
  signal constant11_op_net: std_logic_vector(1 downto 0);
  signal constant12_op_net: std_logic_vector(1 downto 0);
  signal constant13_op_net: std_logic_vector(1 downto 0);
  signal constant14_op_net: std_logic_vector(1 downto 0);
  signal constant15_op_net: std_logic_vector(1 downto 0);
  signal constant1_op_net: std_logic_vector(1 downto 0);
  signal constant2_op_net: std_logic_vector(1 downto 0);
  signal constant3_op_net: std_logic_vector(1 downto 0);
  signal constant4_op_net: std_logic_vector(1 downto 0);
  signal constant5_op_net: std_logic_vector(1 downto 0);
  signal constant6_op_net: std_logic_vector(1 downto 0);
  signal constant7_op_net: std_logic_vector(1 downto 0);
  signal constant8_op_net: std_logic_vector(1 downto 0);
  signal constant9_op_net: std_logic_vector(1 downto 0);
  signal constant_op_net: std_logic_vector(1 downto 0);
  signal mux_y_net_x2: std_logic_vector(1 downto 0);
  signal register3_q_net_x0: std_logic_vector(3 downto 0);

begin
  ce_1_sg_x517 <= ce_1;
  clk_1_sg_x517 <= clk_1;
  register3_q_net_x0 <= in_x0;
  out1 <= mux_y_net_x2;

  constant1: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant10: entity work.constant_3a9a3daeb9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant10_op_net
    );

  constant11: entity work.constant_3a9a3daeb9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant11_op_net
    );

  constant12: entity work.constant_3a9a3daeb9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant12_op_net
    );

  constant13: entity work.constant_3a9a3daeb9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant13_op_net
    );

  constant14: entity work.constant_3a9a3daeb9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant14_op_net
    );

  constant15: entity work.constant_3a9a3daeb9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant15_op_net
    );

  constant2: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant3_op_net
    );

  constant4: entity work.constant_e8ddc079e9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant4_op_net
    );

  constant5: entity work.constant_e8ddc079e9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant5_op_net
    );

  constant6: entity work.constant_e8ddc079e9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant6_op_net
    );

  constant7: entity work.constant_e8ddc079e9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant7_op_net
    );

  constant8: entity work.constant_3a9a3daeb9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant8_op_net
    );

  constant9: entity work.constant_3a9a3daeb9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant9_op_net
    );

  constant_x0: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  mux: entity work.mux_cc70926354
    port map (
      ce => ce_1_sg_x517,
      clk => clk_1_sg_x517,
      clr => '0',
      d0 => constant_op_net,
      d1 => constant1_op_net,
      d10 => constant10_op_net,
      d11 => constant12_op_net,
      d12 => constant13_op_net,
      d13 => constant11_op_net,
      d14 => constant15_op_net,
      d15 => constant14_op_net,
      d2 => constant2_op_net,
      d3 => constant3_op_net,
      d4 => constant4_op_net,
      d5 => constant5_op_net,
      d6 => constant6_op_net,
      d7 => constant7_op_net,
      d8 => constant8_op_net,
      d9 => constant9_op_net,
      sel => register3_q_net_x0,
      y => mux_y_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/ct_tvg"

entity ct_tvg_entity_81cd2f878e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    datain: in std_logic_vector(15 downto 0); 
    syncin: in std_logic; 
    tvg_en: in std_logic; 
    validin: in std_logic; 
    dataout: out std_logic_vector(15 downto 0); 
    syncout: out std_logic; 
    validout: out std_logic
  );
end ct_tvg_entity_81cd2f878e;

architecture structural of ct_tvg_entity_81cd2f878e is
  signal ce_1_sg_x518: std_logic;
  signal clk_1_sg_x518: std_logic;
  signal concatenate_y_net_x0: std_logic_vector(15 downto 0);
  signal convert_dout_net: std_logic_vector(15 downto 0);
  signal delay16_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic;
  signal delay6_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic;
  signal mux1_y_net_x0: std_logic_vector(15 downto 0);
  signal register2_q_net_x0: std_logic;
  signal tvgdata: std_logic_vector(11 downto 0);

begin
  ce_1_sg_x518 <= ce_1;
  clk_1_sg_x518 <= clk_1;
  concatenate_y_net_x0 <= datain;
  delay6_q_net_x0 <= syncin;
  register2_q_net_x0 <= tvg_en;
  delay16_q_net_x0 <= validin;
  dataout <= mux1_y_net_x0;
  syncout <= delay_q_net_x0;
  validout <= delay1_q_net_x0;

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 12,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x518,
      clk => clk_1_sg_x518,
      clr => '0',
      din => tvgdata,
      en => "1",
      dout => convert_dout_net
    );

  counter1: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_ecb560ca58503876",
      op_arith => xlUnsigned,
      op_width => 12
    )
    port map (
      ce => ce_1_sg_x518,
      clk => clk_1_sg_x518,
      clr => '0',
      en(0) => delay16_q_net_x0,
      rst(0) => delay6_q_net_x0,
      op => tvgdata
    );

  delay: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x518,
      clk => clk_1_sg_x518,
      clr => '0',
      d(0) => delay6_q_net_x0,
      q(0) => delay_q_net_x0
    );

  delay1: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x518,
      clk => clk_1_sg_x518,
      clr => '0',
      d(0) => delay16_q_net_x0,
      q(0) => delay1_q_net_x0
    );

  mux1: entity work.mux_0aaa3afba6
    port map (
      ce => ce_1_sg_x518,
      clk => clk_1_sg_x518,
      clr => '0',
      d0 => concatenate_y_net_x0,
      d1 => convert_dout_net,
      sel(0) => register2_q_net_x0,
      y => mux1_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/decat0"

entity decat0_entity_2340466183 is
  port (
    in1: in std_logic_vector(31 downto 0); 
    out1: out std_logic_vector(7 downto 0); 
    out2: out std_logic_vector(7 downto 0); 
    out3: out std_logic_vector(7 downto 0); 
    out4: out std_logic_vector(7 downto 0)
  );
end decat0_entity_2340466183;

architecture structural of decat0_entity_2340466183 is
  signal concatenate_y_net_x1: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(7 downto 0);
  signal slice15_y_net: std_logic_vector(7 downto 0);
  signal slice16_y_net: std_logic_vector(7 downto 0);
  signal slice17_y_net: std_logic_vector(7 downto 0);
  signal slice9_y_net: std_logic_vector(7 downto 0);

begin
  concatenate_y_net_x1 <= in1;
  out1 <= reinterpret2_output_port_net_x1;
  out2 <= reinterpret1_output_port_net_x1;
  out3 <= reinterpret3_output_port_net_x1;
  out4 <= reinterpret4_output_port_net_x1;

  reinterpret1: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice16_y_net,
      output_port => reinterpret1_output_port_net_x1
    );

  reinterpret2: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice17_y_net,
      output_port => reinterpret2_output_port_net_x1
    );

  reinterpret3: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice15_y_net,
      output_port => reinterpret3_output_port_net_x1
    );

  reinterpret4: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice9_y_net,
      output_port => reinterpret4_output_port_net_x1
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 15,
      x_width => 32,
      y_width => 8
    )
    port map (
      x => concatenate_y_net_x1,
      y => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 23,
      x_width => 32,
      y_width => 8
    )
    port map (
      x => concatenate_y_net_x1,
      y => slice16_y_net
    );

  slice17: entity work.xlslice
    generic map (
      new_lsb => 24,
      new_msb => 31,
      x_width => 32,
      y_width => 8
    )
    port map (
      x => concatenate_y_net_x1,
      y => slice17_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 7,
      x_width => 32,
      y_width => 8
    )
    port map (
      x => concatenate_y_net_x1,
      y => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/eq0/calc_add"

entity calc_add_entity_2915bb7175 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(11 downto 0); 
    out_x0: out std_logic_vector(11 downto 0)
  );
end calc_add_entity_2915bb7175;

architecture structural of calc_add_entity_2915bb7175 is
  signal add_sub_s_net: std_logic;
  signal ce_1_sg_x528: std_logic;
  signal clk_1_sg_x528: std_logic;
  signal concat_y_net: std_logic_vector(11 downto 0);
  signal const_op_net: std_logic;
  signal convert_addr_dout_net: std_logic_vector(11 downto 0);
  signal counter8_op_net_x0: std_logic_vector(11 downto 0);
  signal lsw_y_net: std_logic;
  signal manipulate_op_net: std_logic;
  signal msw_y_net: std_logic_vector(10 downto 0);
  signal mux_y_net_x0: std_logic_vector(11 downto 0);

begin
  ce_1_sg_x528 <= ce_1;
  clk_1_sg_x528 <= clk_1;
  counter8_op_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x0;

  add_sub: entity work.addsub_c13097e33e
    port map (
      a(0) => const_op_net,
      b(0) => lsw_y_net,
      ce => ce_1_sg_x528,
      clk => clk_1_sg_x528,
      clr => '0',
      s(0) => add_sub_s_net
    );

  concat: entity work.concat_e2aa47955c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => msw_y_net,
      in1(0) => add_sub_s_net,
      y => concat_y_net
    );

  const: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => const_op_net
    );

  convert_addr: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 12,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 12,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x528,
      clk => clk_1_sg_x528,
      clr => '0',
      din => counter8_op_net_x0,
      en => "1",
      dout => convert_addr_dout_net
    );

  lsw: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 12,
      y_width => 1
    )
    port map (
      x => convert_addr_dout_net,
      y(0) => lsw_y_net
    );

  manipulate: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => manipulate_op_net
    );

  msw: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 11,
      x_width => 12,
      y_width => 11
    )
    port map (
      x => convert_addr_dout_net,
      y => msw_y_net
    );

  mux: entity work.mux_c3e1ddb86e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => convert_addr_dout_net,
      d1 => concat_y_net,
      sel(0) => manipulate_op_net,
      y => mux_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/eq0"

entity eq0_entity_4c0c77caa2 is
  port (
    addr: in std_logic_vector(11 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_in: in std_logic_vector(31 downto 0); 
    we: in std_logic; 
    convert_addr_x0: out std_logic_vector(11 downto 0); 
    convert_din1_x0: out std_logic_vector(31 downto 0); 
    convert_we_x0: out std_logic
  );
end eq0_entity_4c0c77caa2;

architecture structural of eq0_entity_4c0c77caa2 is
  signal ce_1_sg_x529: std_logic;
  signal clk_1_sg_x529: std_logic;
  signal constant41_op_net_x0: std_logic_vector(31 downto 0);
  signal constant46_op_net_x0: std_logic;
  signal convert_addr_dout_net_x0: std_logic_vector(11 downto 0);
  signal convert_din1_dout_net_x0: std_logic_vector(31 downto 0);
  signal convert_din_dout_net: std_logic_vector(31 downto 0);
  signal convert_we_dout_net_x0: std_logic;
  signal counter8_op_net_x1: std_logic_vector(11 downto 0);
  signal mux_y_net_x0: std_logic_vector(11 downto 0);

begin
  counter8_op_net_x1 <= addr;
  ce_1_sg_x529 <= ce_1;
  clk_1_sg_x529 <= clk_1;
  constant41_op_net_x0 <= data_in;
  constant46_op_net_x0 <= we;
  convert_addr_x0 <= convert_addr_dout_net_x0;
  convert_din1_x0 <= convert_din1_dout_net_x0;
  convert_we_x0 <= convert_we_dout_net_x0;

  calc_add_2915bb7175: entity work.calc_add_entity_2915bb7175
    port map (
      ce_1 => ce_1_sg_x529,
      clk_1 => clk_1_sg_x529,
      in_x0 => counter8_op_net_x1,
      out_x0 => mux_y_net_x0
    );

  convert_addr: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 12,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 12,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x529,
      clk => clk_1_sg_x529,
      clr => '0',
      din => mux_y_net_x0,
      en => "1",
      dout => convert_addr_dout_net_x0
    );

  convert_din: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 32,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => '1',
      clk => '1',
      clr => '0',
      din => constant41_op_net_x0,
      en => "1",
      dout => convert_din_dout_net
    );

  convert_din1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 32,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => '1',
      clk => '1',
      clr => '0',
      din => convert_din_dout_net,
      en => "1",
      dout => convert_din1_dout_net_x0
    );

  convert_we: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => '1',
      clk => '1',
      clr => '0',
      din(0) => constant46_op_net_x0,
      en => "1",
      dout(0) => convert_we_dout_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/bus_create"

entity bus_create_entity_4569e4a2f8 is
  port (
    in1: in std_logic; 
    in2: in std_logic_vector(83 downto 0); 
    bus_out: out std_logic_vector(84 downto 0)
  );
end bus_create_entity_4569e4a2f8;

architecture structural of bus_create_entity_4569e4a2f8 is
  signal concatenate_y_net_x0: std_logic_vector(84 downto 0);
  signal delay_q_net_x0: std_logic;
  signal mux_y_net_x0: std_logic_vector(83 downto 0);
  signal reinterpret1_output_port_net: std_logic;
  signal reinterpret2_output_port_net: std_logic_vector(83 downto 0);

begin
  delay_q_net_x0 <= in1;
  mux_y_net_x0 <= in2;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_b8ac94cae7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => delay_q_net_x0,
      output_port(0) => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_2b04cd795d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux_y_net_x0,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/bus_create1"

entity bus_create1_entity_74c8747f81 is
  port (
    in1: in std_logic_vector(61 downto 0); 
    in2: in std_logic_vector(61 downto 0); 
    bus_out: out std_logic_vector(123 downto 0)
  );
end bus_create1_entity_74c8747f81;

architecture structural of bus_create1_entity_74c8747f81 is
  signal concat_y_net_x1: std_logic_vector(61 downto 0);
  signal concat_y_net_x2: std_logic_vector(61 downto 0);
  signal concatenate_y_net_x0: std_logic_vector(123 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(61 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(61 downto 0);

begin
  concat_y_net_x1 <= in1;
  concat_y_net_x2 <= in2;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_3cc25f9a26
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_aa522dcdd3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x1,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_aa522dcdd3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x2,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/bus_create2"

entity bus_create2_entity_86f2416e65 is
  port (
    in1: in std_logic_vector(61 downto 0); 
    in2: in std_logic; 
    in3: in std_logic; 
    in4: in std_logic_vector(19 downto 0); 
    bus_out: out std_logic_vector(83 downto 0)
  );
end bus_create2_entity_86f2416e65;

architecture structural of bus_create2_entity_86f2416e65 is
  signal concatenate_y_net_x0: std_logic_vector(83 downto 0);
  signal delay15_q_net_x0: std_logic;
  signal delay21_q_net_x0: std_logic_vector(19 downto 0);
  signal edge_op_y_net_x1: std_logic;
  signal reinterpret1_output_port_net: std_logic_vector(61 downto 0);
  signal reinterpret2_output_port_net: std_logic;
  signal reinterpret2_output_port_net_x1: std_logic_vector(61 downto 0);
  signal reinterpret3_output_port_net: std_logic;
  signal reinterpret4_output_port_net: std_logic_vector(19 downto 0);

begin
  reinterpret2_output_port_net_x1 <= in1;
  delay15_q_net_x0 <= in2;
  edge_op_y_net_x1 <= in3;
  delay21_q_net_x0 <= in4;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_4a40e578d7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1(0) => reinterpret2_output_port_net,
      in2(0) => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_aa522dcdd3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret2_output_port_net_x1,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => delay15_q_net_x0,
      output_port(0) => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => edge_op_y_net_x1,
      output_port(0) => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => delay21_q_net_x0,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/delay_gen/Subsystem1"

entity subsystem1_entity_1899c22aea is
  port (
    in1: in std_logic_vector(83 downto 0); 
    out1: out std_logic; 
    out2: out std_logic_vector(61 downto 0); 
    out3: out std_logic_vector(19 downto 0); 
    out4: out std_logic
  );
end subsystem1_entity_1899c22aea;

architecture structural of subsystem1_entity_1899c22aea is
  signal delay3_q_net_x0: std_logic_vector(83 downto 0);
  signal slice1_y_net_x0: std_logic;
  signal slice2_y_net_x0: std_logic_vector(61 downto 0);
  signal slice3_y_net_x0: std_logic_vector(19 downto 0);
  signal slice_y_net_x0: std_logic;

begin
  delay3_q_net_x0 <= in1;
  out1 <= slice_y_net_x0;
  out2 <= slice2_y_net_x0;
  out3 <= slice3_y_net_x0;
  out4 <= slice1_y_net_x0;

  slice: entity work.xlslice
    generic map (
      new_lsb => 83,
      new_msb => 83,
      x_width => 84,
      y_width => 1
    )
    port map (
      x => delay3_q_net_x0,
      y(0) => slice_y_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 84,
      y_width => 1
    )
    port map (
      x => delay3_q_net_x0,
      y(0) => slice1_y_net_x0
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 21,
      new_msb => 82,
      x_width => 84,
      y_width => 62
    )
    port map (
      x => delay3_q_net_x0,
      y => slice2_y_net_x0
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 20,
      x_width => 84,
      y_width => 20
    )
    port map (
      x => delay3_q_net_x0,
      y => slice3_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/delay_gen/delay_calc"

entity delay_calc_entity_7a6c9a8503 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    en: in std_logic; 
    update: in std_logic; 
    val: in std_logic_vector(30 downto 0); 
    val_inc: in std_logic_vector(18 downto 0); 
    coeff: out std_logic_vector(32 downto 0)
  );
end delay_calc_entity_7a6c9a8503;

architecture structural of delay_calc_entity_7a6c9a8503 is
  signal addsub_s_net: std_logic_vector(30 downto 0);
  signal ce_1_sg_x532: std_logic;
  signal clk_1_sg_x532: std_logic;
  signal current_q_net_x0: std_logic_vector(32 downto 0);
  signal delay_q_net: std_logic;
  signal delay_q_net_x1: std_logic;
  signal delta_q_net: std_logic_vector(18 downto 0);
  signal logical_y_net: std_logic;
  signal mux_y_net: std_logic_vector(32 downto 0);
  signal normalise_fft1_op_net_x0: std_logic_vector(18 downto 0);
  signal register1_q_net: std_logic_vector(18 downto 0);
  signal register3_q_net: std_logic_vector(30 downto 0);
  signal register_q_net: std_logic;
  signal reinterpret1_output_port_net_x0: std_logic_vector(30 downto 0);
  signal slice2_y_net_x0: std_logic;

begin
  ce_1_sg_x532 <= ce_1;
  clk_1_sg_x532 <= clk_1;
  delay_q_net_x1 <= en;
  slice2_y_net_x0 <= update;
  reinterpret1_output_port_net_x0 <= val;
  normalise_fft1_op_net_x0 <= val_inc;
  coeff <= current_q_net_x0;

  addsub: entity work.xladdsub_c09f12_01
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 18,
      a_width => 33,
      b_arith => xlSigned,
      b_bin_pt => 18,
      b_width => 19,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 35,
      core_name0 => "addsb_11_0_defe95552cb97446",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 35,
      latency => 2,
      overflow => 2,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 18,
      s_width => 31
    )
    port map (
      a => current_q_net_x0,
      b => delta_q_net,
      ce => ce_1_sg_x532,
      clk => clk_1_sg_x532,
      clr => '0',
      en => "1",
      s => addsub_s_net
    );

  current: entity work.xlregister
    generic map (
      d_width => 33,
      init_value => b"000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x532,
      clk => clk_1_sg_x532,
      d => mux_y_net,
      en(0) => delay_q_net,
      rst => "0",
      q => current_q_net_x0
    );

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x532,
      clk => clk_1_sg_x532,
      clr => '0',
      d(0) => slice2_y_net_x0,
      q(0) => delay_q_net
    );

  delta: entity work.xlregister
    generic map (
      d_width => 19,
      init_value => b"0000000000000000000"
    )
    port map (
      ce => ce_1_sg_x532,
      clk => clk_1_sg_x532,
      d => register1_q_net,
      en(0) => delay_q_net,
      rst => "0",
      q => delta_q_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x1,
      d1(0) => register_q_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_b6870799b4
    port map (
      ce => ce_1_sg_x532,
      clk => clk_1_sg_x532,
      clr => '0',
      d0 => addsub_s_net,
      d1 => register3_q_net,
      sel(0) => logical_y_net,
      y => mux_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 19,
      init_value => b"0000000000000000000"
    )
    port map (
      ce => ce_1_sg_x532,
      clk => clk_1_sg_x532,
      d => normalise_fft1_op_net_x0,
      en(0) => delay_q_net_x1,
      rst => "0",
      q => register1_q_net
    );

  register3: entity work.xlregister
    generic map (
      d_width => 31,
      init_value => b"0000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x532,
      clk => clk_1_sg_x532,
      d => reinterpret1_output_port_net_x0,
      en(0) => delay_q_net_x1,
      rst => "0",
      q => register3_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x532,
      clk => clk_1_sg_x532,
      d(0) => delay_q_net_x1,
      en(0) => delay_q_net_x1,
      rst(0) => slice2_y_net_x0,
      q(0) => register_q_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/delay_gen/phase_calc"

entity phase_calc_entity_8299f5efce is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(83 downto 0); 
    en: in std_logic; 
    update: in std_logic; 
    val: in std_logic_vector(15 downto 0); 
    val_inc: in std_logic_vector(18 downto 0); 
    coeff: out std_logic_vector(18 downto 0); 
    dout: out std_logic_vector(83 downto 0)
  );
end phase_calc_entity_8299f5efce;

architecture structural of phase_calc_entity_8299f5efce is
  signal addsub_s_net: std_logic_vector(18 downto 0);
  signal ce_1_sg_x533: std_logic;
  signal clk_1_sg_x533: std_logic;
  signal concat_y_net_x0: std_logic_vector(83 downto 0);
  signal current_q_net_x0: std_logic_vector(18 downto 0);
  signal delay2_q_net: std_logic_vector(83 downto 0);
  signal delay3_q_net_x1: std_logic_vector(83 downto 0);
  signal delay_q_net: std_logic;
  signal delay_q_net_x2: std_logic;
  signal delta_q_net: std_logic_vector(18 downto 0);
  signal logical_y_net: std_logic;
  signal mux_y_net: std_logic_vector(18 downto 0);
  signal normalise_fft0_op_net_x0: std_logic_vector(18 downto 0);
  signal register1_q_net: std_logic_vector(18 downto 0);
  signal register3_q_net: std_logic_vector(15 downto 0);
  signal register_q_net: std_logic;
  signal reinterpret_output_port_net_x0: std_logic_vector(15 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  ce_1_sg_x533 <= ce_1;
  clk_1_sg_x533 <= clk_1;
  concat_y_net_x0 <= din;
  delay_q_net_x2 <= en;
  slice2_y_net_x1 <= update;
  reinterpret_output_port_net_x0 <= val;
  normalise_fft0_op_net_x0 <= val_inc;
  coeff <= current_q_net_x0;
  dout <= delay3_q_net_x1;

  addsub: entity work.xladdsub_c09f12_01
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 18,
      a_width => 19,
      b_arith => xlSigned,
      b_bin_pt => 18,
      b_width => 19,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 20,
      core_name0 => "addsb_11_0_b5c2f0e20381feb6",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 20,
      latency => 2,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 18,
      s_width => 19
    )
    port map (
      a => current_q_net_x0,
      b => delta_q_net,
      ce => ce_1_sg_x533,
      clk => clk_1_sg_x533,
      clr => '0',
      en => "1",
      s => addsub_s_net
    );

  current: entity work.xlregister
    generic map (
      d_width => 19,
      init_value => b"0000000000000000000"
    )
    port map (
      ce => ce_1_sg_x533,
      clk => clk_1_sg_x533,
      d => mux_y_net,
      en(0) => delay_q_net,
      rst => "0",
      q => current_q_net_x0
    );

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x533,
      clk => clk_1_sg_x533,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay_q_net
    );

  delay2: entity work.delay_3f880447cf
    port map (
      ce => ce_1_sg_x533,
      clk => clk_1_sg_x533,
      clr => '0',
      d => concat_y_net_x0,
      q => delay2_q_net
    );

  delay3: entity work.delay_3f880447cf
    port map (
      ce => ce_1_sg_x533,
      clk => clk_1_sg_x533,
      clr => '0',
      d => delay2_q_net,
      q => delay3_q_net_x1
    );

  delta: entity work.xlregister
    generic map (
      d_width => 19,
      init_value => b"0000000000000000000"
    )
    port map (
      ce => ce_1_sg_x533,
      clk => clk_1_sg_x533,
      d => register1_q_net,
      en(0) => delay_q_net,
      rst => "0",
      q => delta_q_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x2,
      d1(0) => register_q_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_9d74770856
    port map (
      ce => ce_1_sg_x533,
      clk => clk_1_sg_x533,
      clr => '0',
      d0 => addsub_s_net,
      d1 => register3_q_net,
      sel(0) => logical_y_net,
      y => mux_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 19,
      init_value => b"0000000000000000000"
    )
    port map (
      ce => ce_1_sg_x533,
      clk => clk_1_sg_x533,
      d => normalise_fft0_op_net_x0,
      en(0) => delay_q_net_x2,
      rst => "0",
      q => register1_q_net
    );

  register3: entity work.xlregister
    generic map (
      d_width => 16,
      init_value => b"0000000000000000"
    )
    port map (
      ce => ce_1_sg_x533,
      clk => clk_1_sg_x533,
      d => reinterpret_output_port_net_x0,
      en(0) => delay_q_net_x2,
      rst => "0",
      q => register3_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x533,
      clk => clk_1_sg_x533,
      d(0) => delay_q_net_x2,
      en(0) => delay_q_net_x2,
      rst(0) => slice2_y_net_x1,
      q(0) => register_q_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/delay_gen"

entity delay_gen_entity_5337c180f8 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d_dt_delay: in std_logic_vector(15 downto 0); 
    d_dt_phase: in std_logic_vector(15 downto 0); 
    delay: in std_logic_vector(30 downto 0); 
    den: in std_logic; 
    din: in std_logic_vector(61 downto 0); 
    idx_in: in std_logic_vector(19 downto 0); 
    init: in std_logic; 
    invert_slope: in std_logic; 
    load: in std_logic; 
    phase: in std_logic_vector(15 downto 0); 
    sync_in: in std_logic; 
    dout: out std_logic_vector(61 downto 0); 
    dvalid: out std_logic; 
    idx_out: out std_logic_vector(19 downto 0); 
    phase_out: out std_logic_vector(18 downto 0); 
    slope_out: out std_logic_vector(30 downto 0); 
    sync_out: out std_logic
  );
end delay_gen_entity_5337c180f8;

architecture structural of delay_gen_entity_5337c180f8 is
  signal addsub_s_net: std_logic_vector(20 downto 0);
  signal ce_1_sg_x534: std_logic;
  signal clk_1_sg_x534: std_logic;
  signal concat4_y_net_x0: std_logic_vector(30 downto 0);
  signal concat_y_net_x0: std_logic_vector(83 downto 0);
  signal constant53_op_net_x0: std_logic;
  signal convert1_dout_net: std_logic_vector(30 downto 0);
  signal convert2_dout_net: std_logic_vector(18 downto 0);
  signal convert3_dout_net: std_logic_vector(18 downto 0);
  signal convert4_dout_net_x0: std_logic_vector(18 downto 0);
  signal convert5_dout_net: std_logic_vector(12 downto 0);
  signal current_q_net_x0: std_logic_vector(32 downto 0);
  signal current_q_net_x1: std_logic_vector(18 downto 0);
  signal delay10_q_net: std_logic_vector(61 downto 0);
  signal delay11_q_net_x0: std_logic_vector(61 downto 0);
  signal delay12_q_net: std_logic_vector(19 downto 0);
  signal delay13_q_net_x0: std_logic_vector(19 downto 0);
  signal delay14_q_net: std_logic;
  signal delay15_q_net_x0: std_logic;
  signal delay3_q_net_x1: std_logic_vector(83 downto 0);
  signal delay8_q_net: std_logic;
  signal delay9_q_net_x0: std_logic;
  signal delay_q_net_x3: std_logic;
  signal half_cd_op_net: std_logic_vector(1 downto 0);
  signal mux_y_net_x0: std_logic_vector(30 downto 0);
  signal negate_op_net: std_logic_vector(30 downto 0);
  signal normalise_fft0_op_net_x0: std_logic_vector(18 downto 0);
  signal normalise_fft1_op_net_x0: std_logic_vector(18 downto 0);
  signal normalise_op_net: std_logic_vector(30 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(30 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(15 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(15 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(61 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(15 downto 0);
  signal slice15_y_net_x0: std_logic_vector(15 downto 0);
  signal slice16_y_net_x0: std_logic_vector(15 downto 0);
  signal slice19_y_net_x0: std_logic_vector(15 downto 0);
  signal slice1_y_net: std_logic_vector(15 downto 0);
  signal slice1_y_net_x0: std_logic;
  signal slice2_y_net: std_logic_vector(30 downto 0);
  signal slice2_y_net_x0: std_logic_vector(61 downto 0);
  signal slice2_y_net_x2: std_logic;
  signal slice3_y_net: std_logic_vector(15 downto 0);
  signal slice3_y_net_x0: std_logic_vector(19 downto 0);
  signal slice3_y_net_x2: std_logic;
  signal slice4_y_net: std_logic_vector(17 downto 0);
  signal slice5_y_net: std_logic_vector(1 downto 0);
  signal slice5_y_net_x1: std_logic;
  signal slice_y_net: std_logic_vector(15 downto 0);
  signal slice_y_net_x0: std_logic;

begin
  ce_1_sg_x534 <= ce_1;
  clk_1_sg_x534 <= clk_1;
  slice15_y_net_x0 <= d_dt_delay;
  slice19_y_net_x0 <= d_dt_phase;
  concat4_y_net_x0 <= delay;
  slice3_y_net_x2 <= den;
  reinterpret4_output_port_net_x0 <= din;
  reinterpret1_output_port_net_x1 <= idx_in;
  slice2_y_net_x2 <= init;
  constant53_op_net_x0 <= invert_slope;
  delay_q_net_x3 <= load;
  slice16_y_net_x0 <= phase;
  slice5_y_net_x1 <= sync_in;
  dout <= delay11_q_net_x0;
  dvalid <= delay15_q_net_x0;
  idx_out <= delay13_q_net_x0;
  phase_out <= convert4_dout_net_x0;
  slope_out <= mux_y_net_x0;
  sync_out <= delay9_q_net_x0;

  addsub: entity work.xladdsub_c09f12_01
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 18,
      a_width => 19,
      b_arith => xlUnsigned,
      b_bin_pt => 1,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 21,
      core_name0 => "addsb_11_0_6c8b791c8b797704",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 21,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 18,
      s_width => 21
    )
    port map (
      a => current_q_net_x1,
      b => half_cd_op_net,
      ce => ce_1_sg_x534,
      clk => clk_1_sg_x534,
      clr => '0',
      en => "1",
      s => addsub_s_net
    );

  concat: entity work.concat_526ac5b437
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => slice5_y_net_x1,
      in1 => reinterpret4_output_port_net_x0,
      in2 => reinterpret1_output_port_net_x1,
      in3(0) => slice3_y_net_x2,
      y => concat_y_net_x0
    );

  convert1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 18,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 30,
      dout_width => 31,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRound
    )
    port map (
      ce => ce_1_sg_x534,
      clk => clk_1_sg_x534,
      clr => '0',
      din => reinterpret5_output_port_net,
      en => "1",
      dout => convert1_dout_net
    );

  convert2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 15,
      din_width => 16,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 19,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x534,
      clk => clk_1_sg_x534,
      clr => '0',
      din => reinterpret2_output_port_net,
      en => "1",
      dout => convert2_dout_net
    );

  convert3: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 15,
      din_width => 16,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 19,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x534,
      clk => clk_1_sg_x534,
      clr => '0',
      din => reinterpret3_output_port_net,
      en => "1",
      dout => convert3_dout_net
    );

  convert4: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 18,
      din_width => 21,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 19,
      latency => 1,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x534,
      clk => clk_1_sg_x534,
      clr => '0',
      din => addsub_s_net,
      en => "1",
      dout => convert4_dout_net_x0
    );

  convert5: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 18,
      din_width => 33,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 13,
      latency => 1,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x534,
      clk => clk_1_sg_x534,
      clr => '0',
      din => current_q_net_x0,
      en => "1",
      dout => convert5_dout_net
    );

  delay10: entity work.delay_a72614a86a
    port map (
      ce => ce_1_sg_x534,
      clk => clk_1_sg_x534,
      clr => '0',
      d => slice2_y_net_x0,
      q => delay10_q_net
    );

  delay11: entity work.delay_a72614a86a
    port map (
      ce => ce_1_sg_x534,
      clk => clk_1_sg_x534,
      clr => '0',
      d => delay10_q_net,
      q => delay11_q_net_x0
    );

  delay12: entity work.delay_a5c036284d
    port map (
      ce => ce_1_sg_x534,
      clk => clk_1_sg_x534,
      clr => '0',
      d => slice3_y_net_x0,
      q => delay12_q_net
    );

  delay13: entity work.delay_a5c036284d
    port map (
      ce => ce_1_sg_x534,
      clk => clk_1_sg_x534,
      clr => '0',
      d => delay12_q_net,
      q => delay13_q_net_x0
    );

  delay14: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x534,
      clk => clk_1_sg_x534,
      clr => '0',
      d(0) => slice1_y_net_x0,
      q(0) => delay14_q_net
    );

  delay15: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x534,
      clk => clk_1_sg_x534,
      clr => '0',
      d(0) => delay14_q_net,
      q(0) => delay15_q_net_x0
    );

  delay8: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x534,
      clk => clk_1_sg_x534,
      clr => '0',
      d(0) => slice_y_net_x0,
      q(0) => delay8_q_net
    );

  delay9: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x534,
      clk => clk_1_sg_x534,
      clr => '0',
      d(0) => delay8_q_net,
      q(0) => delay9_q_net_x0
    );

  delay_calc_7a6c9a8503: entity work.delay_calc_entity_7a6c9a8503
    port map (
      ce_1 => ce_1_sg_x534,
      clk_1 => clk_1_sg_x534,
      en => delay_q_net_x3,
      update => slice2_y_net_x2,
      val => reinterpret1_output_port_net_x0,
      val_inc => normalise_fft1_op_net_x0,
      coeff => current_q_net_x0
    );

  half_cd: entity work.shift_3d704f15bd
    port map (
      ce => ce_1_sg_x534,
      clk => clk_1_sg_x534,
      clr => '0',
      ip => slice5_y_net,
      op => half_cd_op_net
    );

  mux: entity work.mux_b17283bd96
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => negate_op_net,
      d1 => normalise_op_net,
      sel(0) => constant53_op_net_x0,
      y => mux_y_net_x0
    );

  negate: entity work.negate_f54e9c0929
    port map (
      ce => ce_1_sg_x534,
      clk => clk_1_sg_x534,
      clr => '0',
      ip => normalise_op_net,
      op => negate_op_net
    );

  normalise: entity work.shift_6a984f7b1f
    port map (
      ce => ce_1_sg_x534,
      clk => clk_1_sg_x534,
      clr => '0',
      ip => convert1_dout_net,
      op => normalise_op_net
    );

  normalise_fft0: entity work.shift_23cc8d0234
    port map (
      ce => ce_1_sg_x534,
      clk => clk_1_sg_x534,
      clr => '0',
      ip => convert2_dout_net,
      op => normalise_fft0_op_net_x0
    );

  normalise_fft1: entity work.shift_23cc8d0234
    port map (
      ce => ce_1_sg_x534,
      clk => clk_1_sg_x534,
      clr => '0',
      ip => convert3_dout_net,
      op => normalise_fft1_op_net_x0
    );

  phase_calc_8299f5efce: entity work.phase_calc_entity_8299f5efce
    port map (
      ce_1 => ce_1_sg_x534,
      clk_1 => clk_1_sg_x534,
      din => concat_y_net_x0,
      en => delay_q_net_x3,
      update => slice2_y_net_x2,
      val => reinterpret_output_port_net_x0,
      val_inc => normalise_fft0_op_net_x0,
      coeff => current_q_net_x1,
      dout => delay3_q_net_x1
    );

  reinterpret: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_y_net,
      output_port => reinterpret_output_port_net_x0
    );

  reinterpret1: entity work.reinterpret_4ddae7a67c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret5: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret5_output_port_net
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 16,
      y_width => 16
    )
    port map (
      x => slice16_y_net_x0,
      y => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 16,
      y_width => 16
    )
    port map (
      x => slice19_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 30,
      x_width => 31,
      y_width => 31
    )
    port map (
      x => concat4_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 16,
      y_width => 16
    )
    port map (
      x => slice15_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 33,
      y_width => 18
    )
    port map (
      x => current_q_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 1,
      x_width => 13,
      y_width => 2
    )
    port map (
      x => convert5_dout_net,
      y => slice5_y_net
    );

  subsystem1_1899c22aea: entity work.subsystem1_entity_1899c22aea
    port map (
      in1 => delay3_q_net_x1,
      out1 => slice_y_net_x0,
      out2 => slice2_y_net_x0,
      out3 => slice3_y_net_x0,
      out4 => slice1_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/delay_gen1/Subsystem1"

entity subsystem1_entity_cd73c7f9cc is
  port (
    in1: in std_logic_vector(83 downto 0); 
    out2: out std_logic_vector(61 downto 0); 
    out3: out std_logic_vector(19 downto 0)
  );
end subsystem1_entity_cd73c7f9cc;

architecture structural of subsystem1_entity_cd73c7f9cc is
  signal delay3_q_net_x0: std_logic_vector(83 downto 0);
  signal slice2_y_net_x0: std_logic_vector(61 downto 0);
  signal slice3_y_net_x0: std_logic_vector(19 downto 0);

begin
  delay3_q_net_x0 <= in1;
  out2 <= slice2_y_net_x0;
  out3 <= slice3_y_net_x0;

  slice2: entity work.xlslice
    generic map (
      new_lsb => 21,
      new_msb => 82,
      x_width => 84,
      y_width => 62
    )
    port map (
      x => delay3_q_net_x0,
      y => slice2_y_net_x0
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 20,
      x_width => 84,
      y_width => 20
    )
    port map (
      x => delay3_q_net_x0,
      y => slice3_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/delay_gen1"

entity delay_gen1_entity_4815715ea8 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d_dt_delay: in std_logic_vector(15 downto 0); 
    d_dt_phase: in std_logic_vector(15 downto 0); 
    delay: in std_logic_vector(30 downto 0); 
    den: in std_logic; 
    din: in std_logic_vector(61 downto 0); 
    idx_in: in std_logic_vector(19 downto 0); 
    init: in std_logic; 
    invert_slope: in std_logic; 
    load: in std_logic; 
    phase: in std_logic_vector(15 downto 0); 
    sync_in: in std_logic; 
    dout: out std_logic_vector(61 downto 0); 
    idx_out: out std_logic_vector(19 downto 0); 
    phase_out: out std_logic_vector(18 downto 0); 
    slope_out: out std_logic_vector(30 downto 0)
  );
end delay_gen1_entity_4815715ea8;

architecture structural of delay_gen1_entity_4815715ea8 is
  signal addsub_s_net: std_logic_vector(20 downto 0);
  signal ce_1_sg_x537: std_logic;
  signal clk_1_sg_x537: std_logic;
  signal concat2_y_net_x0: std_logic_vector(30 downto 0);
  signal concat_y_net_x0: std_logic_vector(83 downto 0);
  signal constant1_op_net_x0: std_logic;
  signal convert1_dout_net: std_logic_vector(30 downto 0);
  signal convert2_dout_net: std_logic_vector(18 downto 0);
  signal convert3_dout_net: std_logic_vector(18 downto 0);
  signal convert4_dout_net_x0: std_logic_vector(18 downto 0);
  signal convert5_dout_net: std_logic_vector(12 downto 0);
  signal current_q_net_x0: std_logic_vector(32 downto 0);
  signal current_q_net_x1: std_logic_vector(18 downto 0);
  signal delay10_q_net: std_logic_vector(61 downto 0);
  signal delay11_q_net_x0: std_logic_vector(61 downto 0);
  signal delay12_q_net: std_logic_vector(19 downto 0);
  signal delay13_q_net_x0: std_logic_vector(19 downto 0);
  signal delay3_q_net_x1: std_logic_vector(83 downto 0);
  signal delay7_q_net_x0: std_logic_vector(61 downto 0);
  signal delay_q_net_x3: std_logic;
  signal half_cd_op_net: std_logic_vector(1 downto 0);
  signal mux_y_net_x0: std_logic_vector(30 downto 0);
  signal negate_op_net: std_logic_vector(30 downto 0);
  signal normalise_fft0_op_net_x0: std_logic_vector(18 downto 0);
  signal normalise_fft1_op_net_x0: std_logic_vector(18 downto 0);
  signal normalise_op_net: std_logic_vector(30 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(30 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(15 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(15 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(15 downto 0);
  signal slice1_y_net_x0: std_logic_vector(15 downto 0);
  signal slice1_y_net_x1: std_logic_vector(15 downto 0);
  signal slice2_y_net_x0: std_logic_vector(30 downto 0);
  signal slice2_y_net_x1: std_logic_vector(61 downto 0);
  signal slice2_y_net_x2: std_logic_vector(15 downto 0);
  signal slice2_y_net_x5: std_logic;
  signal slice3_y_net: std_logic_vector(15 downto 0);
  signal slice3_y_net_x0: std_logic_vector(19 downto 0);
  signal slice3_y_net_x3: std_logic;
  signal slice4_y_net: std_logic_vector(17 downto 0);
  signal slice5_y_net_x0: std_logic_vector(1 downto 0);
  signal slice5_y_net_x2: std_logic_vector(15 downto 0);
  signal slice5_y_net_x3: std_logic;
  signal slice_y_net: std_logic_vector(15 downto 0);

begin
  ce_1_sg_x537 <= ce_1;
  clk_1_sg_x537 <= clk_1;
  slice1_y_net_x1 <= d_dt_delay;
  slice5_y_net_x2 <= d_dt_phase;
  concat2_y_net_x0 <= delay;
  slice3_y_net_x3 <= den;
  delay7_q_net_x0 <= din;
  reinterpret1_output_port_net_x2 <= idx_in;
  slice2_y_net_x5 <= init;
  constant1_op_net_x0 <= invert_slope;
  delay_q_net_x3 <= load;
  slice2_y_net_x2 <= phase;
  slice5_y_net_x3 <= sync_in;
  dout <= delay11_q_net_x0;
  idx_out <= delay13_q_net_x0;
  phase_out <= convert4_dout_net_x0;
  slope_out <= mux_y_net_x0;

  addsub: entity work.xladdsub_c09f12_01
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 18,
      a_width => 19,
      b_arith => xlUnsigned,
      b_bin_pt => 1,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 21,
      core_name0 => "addsb_11_0_6c8b791c8b797704",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 21,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 18,
      s_width => 21
    )
    port map (
      a => current_q_net_x1,
      b => half_cd_op_net,
      ce => ce_1_sg_x537,
      clk => clk_1_sg_x537,
      clr => '0',
      en => "1",
      s => addsub_s_net
    );

  concat: entity work.concat_526ac5b437
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => slice5_y_net_x3,
      in1 => delay7_q_net_x0,
      in2 => reinterpret1_output_port_net_x2,
      in3(0) => slice3_y_net_x3,
      y => concat_y_net_x0
    );

  convert1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 18,
      din_width => 18,
      dout_arith => 2,
      dout_bin_pt => 30,
      dout_width => 31,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRound
    )
    port map (
      ce => ce_1_sg_x537,
      clk => clk_1_sg_x537,
      clr => '0',
      din => reinterpret5_output_port_net,
      en => "1",
      dout => convert1_dout_net
    );

  convert2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 15,
      din_width => 16,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 19,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x537,
      clk => clk_1_sg_x537,
      clr => '0',
      din => reinterpret2_output_port_net,
      en => "1",
      dout => convert2_dout_net
    );

  convert3: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 15,
      din_width => 16,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 19,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x537,
      clk => clk_1_sg_x537,
      clr => '0',
      din => reinterpret3_output_port_net,
      en => "1",
      dout => convert3_dout_net
    );

  convert4: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 18,
      din_width => 21,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 19,
      latency => 1,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x537,
      clk => clk_1_sg_x537,
      clr => '0',
      din => addsub_s_net,
      en => "1",
      dout => convert4_dout_net_x0
    );

  convert5: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 18,
      din_width => 33,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 13,
      latency => 1,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x537,
      clk => clk_1_sg_x537,
      clr => '0',
      din => current_q_net_x0,
      en => "1",
      dout => convert5_dout_net
    );

  delay10: entity work.delay_a72614a86a
    port map (
      ce => ce_1_sg_x537,
      clk => clk_1_sg_x537,
      clr => '0',
      d => slice2_y_net_x1,
      q => delay10_q_net
    );

  delay11: entity work.delay_a72614a86a
    port map (
      ce => ce_1_sg_x537,
      clk => clk_1_sg_x537,
      clr => '0',
      d => delay10_q_net,
      q => delay11_q_net_x0
    );

  delay12: entity work.delay_a5c036284d
    port map (
      ce => ce_1_sg_x537,
      clk => clk_1_sg_x537,
      clr => '0',
      d => slice3_y_net_x0,
      q => delay12_q_net
    );

  delay13: entity work.delay_a5c036284d
    port map (
      ce => ce_1_sg_x537,
      clk => clk_1_sg_x537,
      clr => '0',
      d => delay12_q_net,
      q => delay13_q_net_x0
    );

  delay_calc_84f470e481: entity work.delay_calc_entity_7a6c9a8503
    port map (
      ce_1 => ce_1_sg_x537,
      clk_1 => clk_1_sg_x537,
      en => delay_q_net_x3,
      update => slice2_y_net_x5,
      val => reinterpret1_output_port_net_x0,
      val_inc => normalise_fft1_op_net_x0,
      coeff => current_q_net_x0
    );

  half_cd: entity work.shift_3d704f15bd
    port map (
      ce => ce_1_sg_x537,
      clk => clk_1_sg_x537,
      clr => '0',
      ip => slice5_y_net_x0,
      op => half_cd_op_net
    );

  mux: entity work.mux_b17283bd96
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => negate_op_net,
      d1 => normalise_op_net,
      sel(0) => constant1_op_net_x0,
      y => mux_y_net_x0
    );

  negate: entity work.negate_f54e9c0929
    port map (
      ce => ce_1_sg_x537,
      clk => clk_1_sg_x537,
      clr => '0',
      ip => normalise_op_net,
      op => negate_op_net
    );

  normalise: entity work.shift_6a984f7b1f
    port map (
      ce => ce_1_sg_x537,
      clk => clk_1_sg_x537,
      clr => '0',
      ip => convert1_dout_net,
      op => normalise_op_net
    );

  normalise_fft0: entity work.shift_23cc8d0234
    port map (
      ce => ce_1_sg_x537,
      clk => clk_1_sg_x537,
      clr => '0',
      ip => convert2_dout_net,
      op => normalise_fft0_op_net_x0
    );

  normalise_fft1: entity work.shift_23cc8d0234
    port map (
      ce => ce_1_sg_x537,
      clk => clk_1_sg_x537,
      clr => '0',
      ip => convert3_dout_net,
      op => normalise_fft1_op_net_x0
    );

  phase_calc_7ddf8835c4: entity work.phase_calc_entity_8299f5efce
    port map (
      ce_1 => ce_1_sg_x537,
      clk_1 => clk_1_sg_x537,
      din => concat_y_net_x0,
      en => delay_q_net_x3,
      update => slice2_y_net_x5,
      val => reinterpret_output_port_net_x0,
      val_inc => normalise_fft0_op_net_x0,
      coeff => current_q_net_x1,
      dout => delay3_q_net_x1
    );

  reinterpret: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_y_net,
      output_port => reinterpret_output_port_net_x0
    );

  reinterpret1: entity work.reinterpret_4ddae7a67c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net_x0,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret5: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret5_output_port_net
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 16,
      y_width => 16
    )
    port map (
      x => slice2_y_net_x2,
      y => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 16,
      y_width => 16
    )
    port map (
      x => slice5_y_net_x2,
      y => slice1_y_net_x0
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 30,
      x_width => 31,
      y_width => 31
    )
    port map (
      x => concat2_y_net_x0,
      y => slice2_y_net_x0
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 16,
      y_width => 16
    )
    port map (
      x => slice1_y_net_x1,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 33,
      y_width => 18
    )
    port map (
      x => current_q_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 1,
      x_width => 13,
      y_width => 2
    )
    port map (
      x => convert5_dout_net,
      y => slice5_y_net_x0
    );

  subsystem1_cd73c7f9cc: entity work.subsystem1_entity_cd73c7f9cc
    port map (
      in1 => delay3_q_net_x1,
      out2 => slice2_y_net_x1,
      out3 => slice3_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/expand_data_in"

entity expand_data_in_entity_d5d71b9bb1 is
  port (
    bus_in: in std_logic_vector(123 downto 0); 
    lsb_out1: out std_logic_vector(61 downto 0); 
    msb_out2: out std_logic_vector(61 downto 0)
  );
end expand_data_in_entity_d5d71b9bb1;

architecture structural of expand_data_in_entity_d5d71b9bb1 is
  signal delay14_q_net_x0: std_logic_vector(123 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(61 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(61 downto 0);
  signal slice1_y_net: std_logic_vector(61 downto 0);
  signal slice2_y_net: std_logic_vector(61 downto 0);

begin
  delay14_q_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out2 <= reinterpret2_output_port_net_x2;

  reinterpret1: entity work.reinterpret_aa522dcdd3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_aa522dcdd3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 61,
      x_width => 124,
      y_width => 62
    )
    port map (
      x => delay14_q_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 62,
      new_msb => 123,
      x_width => 124,
      y_width => 62
    )
    port map (
      x => delay14_q_net_x0,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/expand_fd0"

entity expand_fd0_entity_7384476f9f is
  port (
    bus_in: in std_logic_vector(84 downto 0); 
    lsb_out1: out std_logic_vector(19 downto 0); 
    msb_out5: out std_logic; 
    out2: out std_logic; 
    out3: out std_logic; 
    out4: out std_logic_vector(61 downto 0)
  );
end expand_fd0_entity_7384476f9f;

architecture structural of expand_fd0_entity_7384476f9f is
  signal delay7_q_net_x0: std_logic_vector(84 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(61 downto 0);
  signal slice1_y_net: std_logic_vector(19 downto 0);
  signal slice2_y_net_x6: std_logic;
  signal slice3_y_net_x4: std_logic;
  signal slice4_y_net: std_logic_vector(61 downto 0);
  signal slice5_y_net_x4: std_logic;

begin
  delay7_q_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x3;
  msb_out5 <= slice5_y_net_x4;
  out2 <= slice2_y_net_x6;
  out3 <= slice3_y_net_x4;
  out4 <= reinterpret4_output_port_net_x1;

  reinterpret1: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x3
    );

  reinterpret4: entity work.reinterpret_aa522dcdd3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 19,
      x_width => 85,
      y_width => 20
    )
    port map (
      x => delay7_q_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 20,
      x_width => 85,
      y_width => 1
    )
    port map (
      x => delay7_q_net_x0,
      y(0) => slice2_y_net_x6
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 21,
      new_msb => 21,
      x_width => 85,
      y_width => 1
    )
    port map (
      x => delay7_q_net_x0,
      y(0) => slice3_y_net_x4
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 22,
      new_msb => 83,
      x_width => 85,
      y_width => 62
    )
    port map (
      x => delay7_q_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 84,
      new_msb => 84,
      x_width => 85,
      y_width => 1
    )
    port map (
      x => delay7_q_net_x0,
      y(0) => slice5_y_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/fd_fs/c_to_ri"

entity c_to_ri_entity_6fb343188d is
  port (
    c: in std_logic_vector(61 downto 0); 
    im: out std_logic_vector(30 downto 0); 
    re: out std_logic_vector(30 downto 0)
  );
end c_to_ri_entity_6fb343188d;

architecture structural of c_to_ri_entity_6fb343188d is
  signal delay9_q_net_x0: std_logic_vector(61 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(30 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(30 downto 0);
  signal slice_im_y_net: std_logic_vector(30 downto 0);
  signal slice_re_y_net: std_logic_vector(30 downto 0);

begin
  delay9_q_net_x0 <= c;
  im <= force_im_output_port_net_x0;
  re <= force_re_output_port_net_x0;

  force_im: entity work.reinterpret_76541f1bde
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_im_y_net,
      output_port => force_im_output_port_net_x0
    );

  force_re: entity work.reinterpret_76541f1bde
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_re_y_net,
      output_port => force_re_output_port_net_x0
    );

  slice_im: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 30,
      x_width => 62,
      y_width => 31
    )
    port map (
      x => delay9_q_net_x0,
      y => slice_im_y_net
    );

  slice_re: entity work.xlslice
    generic map (
      new_lsb => 31,
      new_msb => 61,
      x_width => 62,
      y_width => 31
    )
    port map (
      x => delay9_q_net_x0,
      y => slice_re_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/fd_fs/cmult_4bit_hdl"

entity cmult_4bit_hdl_entity_e90bbbc122 is
  port (
    a: in std_logic_vector(17 downto 0); 
    b: in std_logic_vector(17 downto 0); 
    c: in std_logic_vector(30 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d: in std_logic_vector(30 downto 0); 
    imag: out std_logic_vector(49 downto 0); 
    real_x0: out std_logic_vector(49 downto 0)
  );
end cmult_4bit_hdl_entity_e90bbbc122;

architecture structural of cmult_4bit_hdl_entity_e90bbbc122 is
  signal ac_p_net: std_logic_vector(48 downto 0);
  signal ad_p_net: std_logic_vector(48 downto 0);
  signal bc_p_net: std_logic_vector(48 downto 0);
  signal bd_p_net: std_logic_vector(48 downto 0);
  signal ce_1_sg_x538: std_logic;
  signal clk_1_sg_x538: std_logic;
  signal delay10_q_net_x0: std_logic_vector(30 downto 0);
  signal delay3_q_net_x0: std_logic_vector(30 downto 0);
  signal imag_sum_s_net_x0: std_logic_vector(49 downto 0);
  signal real_sum_s_net_x0: std_logic_vector(49 downto 0);
  signal rom0_data_net_x0: std_logic_vector(17 downto 0);
  signal rom1_data_net_x0: std_logic_vector(17 downto 0);

begin
  rom1_data_net_x0 <= a;
  rom0_data_net_x0 <= b;
  delay10_q_net_x0 <= c;
  ce_1_sg_x538 <= ce_1;
  clk_1_sg_x538 <= clk_1;
  delay3_q_net_x0 <= d;
  imag <= imag_sum_s_net_x0;
  real_x0 <= real_sum_s_net_x0;

  ac: entity work.mult_7b9bb0537a
    port map (
      a => rom1_data_net_x0,
      b => delay10_q_net_x0,
      ce => ce_1_sg_x538,
      clk => clk_1_sg_x538,
      clr => '0',
      p => ac_p_net
    );

  ad: entity work.mult_7b9bb0537a
    port map (
      a => rom1_data_net_x0,
      b => delay3_q_net_x0,
      ce => ce_1_sg_x538,
      clk => clk_1_sg_x538,
      clr => '0',
      p => ad_p_net
    );

  bc: entity work.mult_7b9bb0537a
    port map (
      a => rom0_data_net_x0,
      b => delay10_q_net_x0,
      ce => ce_1_sg_x538,
      clk => clk_1_sg_x538,
      clr => '0',
      p => bc_p_net
    );

  bd: entity work.mult_7b9bb0537a
    port map (
      a => rom0_data_net_x0,
      b => delay3_q_net_x0,
      ce => ce_1_sg_x538,
      clk => clk_1_sg_x538,
      clr => '0',
      p => bd_p_net
    );

  imag_sum: entity work.addsub_477aaa5f1a
    port map (
      a => bc_p_net,
      b => ad_p_net,
      ce => ce_1_sg_x538,
      clk => clk_1_sg_x538,
      clr => '0',
      s => imag_sum_s_net_x0
    );

  real_sum: entity work.addsub_c7967a888a
    port map (
      a => ac_p_net,
      b => bd_p_net,
      ce => ce_1_sg_x538,
      clk => clk_1_sg_x538,
      clr => '0',
      s => real_sum_s_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/fd_fs/polynomial0"

entity polynomial0_entity_23243560fe is
  port (
    a0: in std_logic_vector(18 downto 0); 
    a1: in std_logic_vector(30 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic_vector(1 downto 0); 
    x: in std_logic_vector(19 downto 0); 
    a0x_0_a1x_1: out std_logic_vector(51 downto 0); 
    sync_out: out std_logic_vector(1 downto 0)
  );
end polynomial0_entity_23243560fe;

architecture structural of polynomial0_entity_23243560fe is
  signal a0_delay_q_net: std_logic_vector(18 downto 0);
  signal a1x_1_mult_p_net: std_logic_vector(50 downto 0);
  signal addsub_s_net_x0: std_logic_vector(51 downto 0);
  signal ce_1_sg_x539: std_logic;
  signal clk_1_sg_x539: std_logic;
  signal concat_y_net_x0: std_logic_vector(1 downto 0);
  signal convert4_dout_net_x1: std_logic_vector(18 downto 0);
  signal delay13_q_net_x1: std_logic_vector(19 downto 0);
  signal mux_y_net_x1: std_logic_vector(30 downto 0);
  signal sync_delay_q_net_x0: std_logic_vector(1 downto 0);

begin
  convert4_dout_net_x1 <= a0;
  mux_y_net_x1 <= a1;
  ce_1_sg_x539 <= ce_1;
  clk_1_sg_x539 <= clk_1;
  concat_y_net_x0 <= sync_in;
  delay13_q_net_x1 <= x;
  a0x_0_a1x_1 <= addsub_s_net_x0;
  sync_out <= sync_delay_q_net_x0;

  a0_delay: entity work.delay_ed64862f6f
    port map (
      ce => ce_1_sg_x539,
      clk => clk_1_sg_x539,
      clr => '0',
      d => convert4_dout_net_x1,
      q => a0_delay_q_net
    );

  a1x_1_mult: entity work.mult_edcb97cd50
    port map (
      a => delay13_q_net_x1,
      b => mux_y_net_x1,
      ce => ce_1_sg_x539,
      clk => clk_1_sg_x539,
      clr => '0',
      p => a1x_1_mult_p_net
    );

  addsub: entity work.addsub_09d6c96f59
    port map (
      a => a0_delay_q_net,
      b => a1x_1_mult_p_net,
      ce => ce_1_sg_x539,
      clk => clk_1_sg_x539,
      clr => '0',
      s => addsub_s_net_x0
    );

  sync_delay: entity work.delay_8826f087e1
    port map (
      ce => ce_1_sg_x539,
      clk => clk_1_sg_x539,
      clr => '0',
      d => concat_y_net_x0,
      q => sync_delay_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/fd_fs/ri_to_c"

entity ri_to_c_entity_c73e85e8c5 is
  port (
    im: in std_logic_vector(30 downto 0); 
    re: in std_logic_vector(30 downto 0); 
    c: out std_logic_vector(61 downto 0)
  );
end ri_to_c_entity_c73e85e8c5;

architecture structural of ri_to_c_entity_c73e85e8c5 is
  signal concat_y_net_x2: std_logic_vector(61 downto 0);
  signal convert1_dout_net_x0: std_logic_vector(30 downto 0);
  signal convert_dout_net_x0: std_logic_vector(30 downto 0);
  signal force_im_output_port_net: std_logic_vector(30 downto 0);
  signal force_re_output_port_net: std_logic_vector(30 downto 0);

begin
  convert1_dout_net_x0 <= im;
  convert_dout_net_x0 <= re;
  c <= concat_y_net_x2;

  concat: entity work.concat_94729ef7e0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => force_re_output_port_net,
      in1 => force_im_output_port_net,
      y => concat_y_net_x2
    );

  force_im: entity work.reinterpret_64ddc4af5e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert1_dout_net_x0,
      output_port => force_im_output_port_net
    );

  force_re: entity work.reinterpret_64ddc4af5e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert_dout_net_x0,
      output_port => force_re_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/fd_fs/sincos0"

entity sincos0_entity_764418d801 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic_vector(1 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    sine: out std_logic_vector(17 downto 0); 
    sync_out: out std_logic_vector(1 downto 0)
  );
end sincos0_entity_764418d801;

architecture structural of sincos0_entity_764418d801 is
  signal ce_1_sg_x540: std_logic;
  signal clk_1_sg_x540: std_logic;
  signal delay13_q_net_x0: std_logic_vector(1 downto 0);
  signal delay_q_net_x0: std_logic_vector(1 downto 0);
  signal reinterpret11_output_port_net_x0: std_logic_vector(9 downto 0);
  signal rom0_data_net_x1: std_logic_vector(17 downto 0);
  signal rom1_data_net_x1: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x540 <= ce_1;
  clk_1_sg_x540 <= clk_1;
  delay13_q_net_x0 <= sync_in;
  reinterpret11_output_port_net_x0 <= theta;
  cos <= rom1_data_net_x1;
  sine <= rom0_data_net_x1;
  sync_out <= delay_q_net_x0;

  delay: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 2
    )
    port map (
      ce => ce_1_sg_x540,
      clk => clk_1_sg_x540,
      d => delay13_q_net_x0,
      en => '1',
      rst => '1',
      q => delay_q_net_x0
    );

  rom0: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_321d886e2c47e239",
      latency => 2
    )
    port map (
      addr => reinterpret11_output_port_net_x0,
      ce => ce_1_sg_x540,
      clk => clk_1_sg_x540,
      en => "1",
      rst => "0",
      data => rom0_data_net_x1
    );

  rom1: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_dc97d51467d52108",
      latency => 2
    )
    port map (
      addr => reinterpret11_output_port_net_x0,
      ce => ce_1_sg_x540,
      clk => clk_1_sg_x540,
      en => "1",
      rst => "0",
      data => rom1_data_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/fd_fs"

entity fd_fs_entity_fa00e52681 is
  port (
    a0: in std_logic_vector(18 downto 0); 
    a1: in std_logic_vector(30 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data: in std_logic_vector(61 downto 0); 
    index: in std_logic_vector(19 downto 0); 
    sync: in std_logic; 
    valid: in std_logic; 
    data_out: out std_logic_vector(61 downto 0); 
    sync_out: out std_logic; 
    valid_out: out std_logic
  );
end fd_fs_entity_fa00e52681;

architecture structural of fd_fs_entity_fa00e52681 is
  signal addsub_s_net_x0: std_logic_vector(51 downto 0);
  signal ce_1_sg_x541: std_logic;
  signal clk_1_sg_x541: std_logic;
  signal concat_y_net_x0: std_logic_vector(1 downto 0);
  signal concat_y_net_x3: std_logic_vector(61 downto 0);
  signal convert1_dout_net_x0: std_logic_vector(30 downto 0);
  signal convert4_dout_net_x2: std_logic_vector(18 downto 0);
  signal convert8_dout_net: std_logic_vector(9 downto 0);
  signal convert_dout_net_x0: std_logic_vector(30 downto 0);
  signal delay10_q_net_x0: std_logic_vector(30 downto 0);
  signal delay11_q_net_x1: std_logic_vector(61 downto 0);
  signal delay13_q_net_x0: std_logic_vector(1 downto 0);
  signal delay13_q_net_x2: std_logic_vector(19 downto 0);
  signal delay15_q_net_x1: std_logic;
  signal delay3_q_net_x0: std_logic_vector(30 downto 0);
  signal delay6_q_net: std_logic_vector(1 downto 0);
  signal delay9_q_net_x1: std_logic_vector(61 downto 0);
  signal delay9_q_net_x2: std_logic;
  signal delay_q_net_x0: std_logic_vector(1 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(30 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(30 downto 0);
  signal imag_sum_s_net_x0: std_logic_vector(49 downto 0);
  signal mux_y_net_x2: std_logic_vector(30 downto 0);
  signal real_sum_s_net_x0: std_logic_vector(49 downto 0);
  signal reinterpret11_output_port_net_x0: std_logic_vector(9 downto 0);
  signal rom0_data_net_x1: std_logic_vector(17 downto 0);
  signal rom1_data_net_x1: std_logic_vector(17 downto 0);
  signal slice1_y_net_x0: std_logic;
  signal slice_y_net_x0: std_logic;
  signal sync_delay_q_net_x0: std_logic_vector(1 downto 0);

begin
  convert4_dout_net_x2 <= a0;
  mux_y_net_x2 <= a1;
  ce_1_sg_x541 <= ce_1;
  clk_1_sg_x541 <= clk_1;
  delay11_q_net_x1 <= data;
  delay13_q_net_x2 <= index;
  delay9_q_net_x2 <= sync;
  delay15_q_net_x1 <= valid;
  data_out <= concat_y_net_x3;
  sync_out <= slice1_y_net_x0;
  valid_out <= slice_y_net_x0;

  c_to_ri_6fb343188d: entity work.c_to_ri_entity_6fb343188d
    port map (
      c => delay9_q_net_x1,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  cmult_4bit_hdl_e90bbbc122: entity work.cmult_4bit_hdl_entity_e90bbbc122
    port map (
      a => rom1_data_net_x1,
      b => rom0_data_net_x1,
      c => delay10_q_net_x0,
      ce_1 => ce_1_sg_x541,
      clk_1 => clk_1_sg_x541,
      d => delay3_q_net_x0,
      imag => imag_sum_s_net_x0,
      real_x0 => real_sum_s_net_x0
    );

  concat: entity work.concat_32afb77cd2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => delay15_q_net_x1,
      in1(0) => delay9_q_net_x2,
      y => concat_y_net_x0
    );

  convert: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 34,
      din_width => 50,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 31,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x541,
      clk => clk_1_sg_x541,
      clr => '0',
      din => real_sum_s_net_x0,
      en => "1",
      dout => convert_dout_net_x0
    );

  convert1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 34,
      din_width => 50,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 31,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x541,
      clk => clk_1_sg_x541,
      clr => '0',
      din => imag_sum_s_net_x0,
      en => "1",
      dout => convert1_dout_net_x0
    );

  convert8: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 30,
      din_width => 52,
      dout_arith => 2,
      dout_bin_pt => 9,
      dout_width => 10,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRound
    )
    port map (
      ce => ce_1_sg_x541,
      clk => clk_1_sg_x541,
      clr => '0',
      din => addsub_s_net_x0,
      en => "1",
      dout => convert8_dout_net
    );

  delay10: entity work.delay_ca228dec41
    port map (
      ce => ce_1_sg_x541,
      clk => clk_1_sg_x541,
      clr => '0',
      d => force_re_output_port_net_x0,
      q => delay10_q_net_x0
    );

  delay13: entity work.delay_4ce33ca7e7
    port map (
      ce => ce_1_sg_x541,
      clk => clk_1_sg_x541,
      clr => '0',
      d => sync_delay_q_net_x0,
      q => delay13_q_net_x0
    );

  delay3: entity work.delay_ca228dec41
    port map (
      ce => ce_1_sg_x541,
      clk => clk_1_sg_x541,
      clr => '0',
      d => force_im_output_port_net_x0,
      q => delay3_q_net_x0
    );

  delay6: entity work.delay_ef6ec19213
    port map (
      ce => ce_1_sg_x541,
      clk => clk_1_sg_x541,
      clr => '0',
      d => delay_q_net_x0,
      q => delay6_q_net
    );

  delay9: entity work.delay_46b7175e0f
    port map (
      ce => ce_1_sg_x541,
      clk => clk_1_sg_x541,
      clr => '0',
      d => delay11_q_net_x1,
      q => delay9_q_net_x1
    );

  polynomial0_23243560fe: entity work.polynomial0_entity_23243560fe
    port map (
      a0 => convert4_dout_net_x2,
      a1 => mux_y_net_x2,
      ce_1 => ce_1_sg_x541,
      clk_1 => clk_1_sg_x541,
      sync_in => concat_y_net_x0,
      x => delay13_q_net_x2,
      a0x_0_a1x_1 => addsub_s_net_x0,
      sync_out => sync_delay_q_net_x0
    );

  reinterpret11: entity work.reinterpret_e2e786e1ed
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert8_dout_net,
      output_port => reinterpret11_output_port_net_x0
    );

  ri_to_c_c73e85e8c5: entity work.ri_to_c_entity_c73e85e8c5
    port map (
      im => convert1_dout_net_x0,
      re => convert_dout_net_x0,
      c => concat_y_net_x3
    );

  sincos0_764418d801: entity work.sincos0_entity_764418d801
    port map (
      ce_1 => ce_1_sg_x541,
      clk_1 => clk_1_sg_x541,
      sync_in => delay13_q_net_x0,
      theta => reinterpret11_output_port_net_x0,
      cos => rom1_data_net_x1,
      sine => rom0_data_net_x1,
      sync_out => delay_q_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => delay6_q_net,
      y(0) => slice_y_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => delay6_q_net,
      y(0) => slice1_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/fd_fs1/polynomial0"

entity polynomial0_entity_feade403d2 is
  port (
    a0: in std_logic_vector(18 downto 0); 
    a1: in std_logic_vector(30 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    x: in std_logic_vector(19 downto 0); 
    a0x_0_a1x_1: out std_logic_vector(51 downto 0)
  );
end polynomial0_entity_feade403d2;

architecture structural of polynomial0_entity_feade403d2 is
  signal a0_delay_q_net: std_logic_vector(18 downto 0);
  signal a1x_1_mult_p_net: std_logic_vector(50 downto 0);
  signal addsub_s_net_x0: std_logic_vector(51 downto 0);
  signal ce_1_sg_x543: std_logic;
  signal clk_1_sg_x543: std_logic;
  signal convert4_dout_net_x1: std_logic_vector(18 downto 0);
  signal delay13_q_net_x1: std_logic_vector(19 downto 0);
  signal mux_y_net_x1: std_logic_vector(30 downto 0);

begin
  convert4_dout_net_x1 <= a0;
  mux_y_net_x1 <= a1;
  ce_1_sg_x543 <= ce_1;
  clk_1_sg_x543 <= clk_1;
  delay13_q_net_x1 <= x;
  a0x_0_a1x_1 <= addsub_s_net_x0;

  a0_delay: entity work.delay_ed64862f6f
    port map (
      ce => ce_1_sg_x543,
      clk => clk_1_sg_x543,
      clr => '0',
      d => convert4_dout_net_x1,
      q => a0_delay_q_net
    );

  a1x_1_mult: entity work.mult_edcb97cd50
    port map (
      a => delay13_q_net_x1,
      b => mux_y_net_x1,
      ce => ce_1_sg_x543,
      clk => clk_1_sg_x543,
      clr => '0',
      p => a1x_1_mult_p_net
    );

  addsub: entity work.addsub_09d6c96f59
    port map (
      a => a0_delay_q_net,
      b => a1x_1_mult_p_net,
      ce => ce_1_sg_x543,
      clk => clk_1_sg_x543,
      clr => '0',
      s => addsub_s_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/fd_fs1/sincos0"

entity sincos0_entity_3fdc663e3b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(9 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    sine: out std_logic_vector(17 downto 0)
  );
end sincos0_entity_3fdc663e3b;

architecture structural of sincos0_entity_3fdc663e3b is
  signal ce_1_sg_x544: std_logic;
  signal clk_1_sg_x544: std_logic;
  signal reinterpret11_output_port_net_x0: std_logic_vector(9 downto 0);
  signal rom0_data_net_x1: std_logic_vector(17 downto 0);
  signal rom1_data_net_x1: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x544 <= ce_1;
  clk_1_sg_x544 <= clk_1;
  reinterpret11_output_port_net_x0 <= theta;
  cos <= rom1_data_net_x1;
  sine <= rom0_data_net_x1;

  rom0: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_321d886e2c47e239",
      latency => 2
    )
    port map (
      addr => reinterpret11_output_port_net_x0,
      ce => ce_1_sg_x544,
      clk => clk_1_sg_x544,
      en => "1",
      rst => "0",
      data => rom0_data_net_x1
    );

  rom1: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_dc97d51467d52108",
      latency => 2
    )
    port map (
      addr => reinterpret11_output_port_net_x0,
      ce => ce_1_sg_x544,
      clk => clk_1_sg_x544,
      en => "1",
      rst => "0",
      data => rom1_data_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/fd_fs1"

entity fd_fs1_entity_17caded306 is
  port (
    a0: in std_logic_vector(18 downto 0); 
    a1: in std_logic_vector(30 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data: in std_logic_vector(61 downto 0); 
    index: in std_logic_vector(19 downto 0); 
    data_out: out std_logic_vector(61 downto 0)
  );
end fd_fs1_entity_17caded306;

architecture structural of fd_fs1_entity_17caded306 is
  signal addsub_s_net_x0: std_logic_vector(51 downto 0);
  signal ce_1_sg_x545: std_logic;
  signal clk_1_sg_x545: std_logic;
  signal concat_y_net_x4: std_logic_vector(61 downto 0);
  signal convert1_dout_net_x0: std_logic_vector(30 downto 0);
  signal convert4_dout_net_x2: std_logic_vector(18 downto 0);
  signal convert8_dout_net: std_logic_vector(9 downto 0);
  signal convert_dout_net_x0: std_logic_vector(30 downto 0);
  signal delay10_q_net_x0: std_logic_vector(30 downto 0);
  signal delay11_q_net_x1: std_logic_vector(61 downto 0);
  signal delay13_q_net_x2: std_logic_vector(19 downto 0);
  signal delay3_q_net_x0: std_logic_vector(30 downto 0);
  signal delay9_q_net_x0: std_logic_vector(61 downto 0);
  signal force_im_output_port_net_x0: std_logic_vector(30 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(30 downto 0);
  signal imag_sum_s_net_x0: std_logic_vector(49 downto 0);
  signal mux_y_net_x2: std_logic_vector(30 downto 0);
  signal real_sum_s_net_x0: std_logic_vector(49 downto 0);
  signal reinterpret11_output_port_net_x0: std_logic_vector(9 downto 0);
  signal rom0_data_net_x1: std_logic_vector(17 downto 0);
  signal rom1_data_net_x1: std_logic_vector(17 downto 0);

begin
  convert4_dout_net_x2 <= a0;
  mux_y_net_x2 <= a1;
  ce_1_sg_x545 <= ce_1;
  clk_1_sg_x545 <= clk_1;
  delay11_q_net_x1 <= data;
  delay13_q_net_x2 <= index;
  data_out <= concat_y_net_x4;

  c_to_ri_5f224c6f36: entity work.c_to_ri_entity_6fb343188d
    port map (
      c => delay9_q_net_x0,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  cmult_4bit_hdl_b251b9ffa8: entity work.cmult_4bit_hdl_entity_e90bbbc122
    port map (
      a => rom1_data_net_x1,
      b => rom0_data_net_x1,
      c => delay10_q_net_x0,
      ce_1 => ce_1_sg_x545,
      clk_1 => clk_1_sg_x545,
      d => delay3_q_net_x0,
      imag => imag_sum_s_net_x0,
      real_x0 => real_sum_s_net_x0
    );

  convert: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 34,
      din_width => 50,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 31,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x545,
      clk => clk_1_sg_x545,
      clr => '0',
      din => real_sum_s_net_x0,
      en => "1",
      dout => convert_dout_net_x0
    );

  convert1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 34,
      din_width => 50,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 31,
      latency => 2,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x545,
      clk => clk_1_sg_x545,
      clr => '0',
      din => imag_sum_s_net_x0,
      en => "1",
      dout => convert1_dout_net_x0
    );

  convert8: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 30,
      din_width => 52,
      dout_arith => 2,
      dout_bin_pt => 9,
      dout_width => 10,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRound
    )
    port map (
      ce => ce_1_sg_x545,
      clk => clk_1_sg_x545,
      clr => '0',
      din => addsub_s_net_x0,
      en => "1",
      dout => convert8_dout_net
    );

  delay10: entity work.delay_ca228dec41
    port map (
      ce => ce_1_sg_x545,
      clk => clk_1_sg_x545,
      clr => '0',
      d => force_re_output_port_net_x0,
      q => delay10_q_net_x0
    );

  delay3: entity work.delay_ca228dec41
    port map (
      ce => ce_1_sg_x545,
      clk => clk_1_sg_x545,
      clr => '0',
      d => force_im_output_port_net_x0,
      q => delay3_q_net_x0
    );

  delay9: entity work.delay_46b7175e0f
    port map (
      ce => ce_1_sg_x545,
      clk => clk_1_sg_x545,
      clr => '0',
      d => delay11_q_net_x1,
      q => delay9_q_net_x0
    );

  polynomial0_feade403d2: entity work.polynomial0_entity_feade403d2
    port map (
      a0 => convert4_dout_net_x2,
      a1 => mux_y_net_x2,
      ce_1 => ce_1_sg_x545,
      clk_1 => clk_1_sg_x545,
      x => delay13_q_net_x2,
      a0x_0_a1x_1 => addsub_s_net_x0
    );

  reinterpret11: entity work.reinterpret_e2e786e1ed
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert8_dout_net,
      output_port => reinterpret11_output_port_net_x0
    );

  ri_to_c_3cbc44f427: entity work.ri_to_c_entity_c73e85e8c5
    port map (
      im => convert1_dout_net_x0,
      re => convert_dout_net_x0,
      c => concat_y_net_x4
    );

  sincos0_3fdc663e3b: entity work.sincos0_entity_3fdc663e3b
    port map (
      ce_1 => ce_1_sg_x545,
      clk_1 => clk_1_sg_x545,
      theta => reinterpret11_output_port_net_x0,
      cos => rom1_data_net_x1,
      sine => rom0_data_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/fd_fs_tvg0/bus_create2"

entity bus_create2_entity_d651c0183c is
  port (
    in1: in std_logic_vector(61 downto 0); 
    in2: in std_logic_vector(21 downto 0); 
    bus_out: out std_logic_vector(83 downto 0)
  );
end bus_create2_entity_d651c0183c;

architecture structural of bus_create2_entity_d651c0183c is
  signal concatenate_y_net_x0: std_logic_vector(83 downto 0);
  signal mux2_y_net_x0: std_logic_vector(61 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(61 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(21 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(21 downto 0);

begin
  mux2_y_net_x0 <= in1;
  reinterpret1_output_port_net_x1 <= in2;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_24b7d1333f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_aa522dcdd3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux2_y_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_3cfe81c7ab
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret1_output_port_net_x1,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/fd_fs_tvg0/exp_data"

entity exp_data_entity_6025422bec is
  port (
    bus_in: in std_logic_vector(83 downto 0); 
    lsb_out1: out std_logic_vector(21 downto 0)
  );
end exp_data_entity_6025422bec;

architecture structural of exp_data_entity_6025422bec is
  signal delay22_q_net_x0: std_logic_vector(83 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(21 downto 0);
  signal slice1_y_net: std_logic_vector(21 downto 0);

begin
  delay22_q_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_3cfe81c7ab
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 21,
      x_width => 84,
      y_width => 22
    )
    port map (
      x => delay22_q_net_x0,
      y => slice1_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/fd_fs_tvg0/ri_to_c"

entity ri_to_c_entity_f27e34b719 is
  port (
    re: in std_logic_vector(30 downto 0); 
    c: out std_logic_vector(61 downto 0)
  );
end ri_to_c_entity_f27e34b719;

architecture structural of ri_to_c_entity_f27e34b719 is
  signal concat_y_net_x0: std_logic_vector(61 downto 0);
  signal constant_op_net_x0: std_logic_vector(30 downto 0);
  signal force_im_output_port_net: std_logic_vector(30 downto 0);
  signal force_re_output_port_net: std_logic_vector(30 downto 0);

begin
  constant_op_net_x0 <= re;
  c <= concat_y_net_x0;

  concat: entity work.concat_94729ef7e0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => force_re_output_port_net,
      in1 => force_im_output_port_net,
      y => concat_y_net_x0
    );

  force_im: entity work.reinterpret_64ddc4af5e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => constant_op_net_x0,
      output_port => force_im_output_port_net
    );

  force_re: entity work.reinterpret_64ddc4af5e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => constant_op_net_x0,
      output_port => force_re_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/fd_fs_tvg0"

entity fd_fs_tvg0_entity_3f83eaa054 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din0: in std_logic_vector(83 downto 0); 
    pulse_en: in std_logic; 
    sync: in std_logic; 
    time_x0: in std_logic_vector(47 downto 0); 
    use_tvg: in std_logic; 
    dout0: out std_logic_vector(83 downto 0); 
    sync_out: out std_logic; 
    time_o: out std_logic_vector(47 downto 0)
  );
end fd_fs_tvg0_entity_3f83eaa054;

architecture structural of fd_fs_tvg0_entity_3f83eaa054 is
  signal ce_1_sg_x546: std_logic;
  signal clk_1_sg_x546: std_logic;
  signal concat_y_net_x0: std_logic_vector(61 downto 0);
  signal concat_y_net_x1: std_logic_vector(61 downto 0);
  signal concatenate_y_net_x0: std_logic_vector(83 downto 0);
  signal constant1_op_net_x0: std_logic_vector(30 downto 0);
  signal constant_op_net_x0: std_logic_vector(30 downto 0);
  signal delay1_q_net_x0: std_logic_vector(47 downto 0);
  signal delay20_q_net_x0: std_logic;
  signal delay22_q_net_x1: std_logic_vector(83 downto 0);
  signal delay24_q_net_x0: std_logic_vector(47 downto 0);
  signal delay_q_net_x1: std_logic;
  signal delay_q_net_x2: std_logic;
  signal mux2_y_net_x0: std_logic_vector(61 downto 0);
  signal mux_y_net_x1: std_logic_vector(83 downto 0);
  signal register5_q_net_x0: std_logic;
  signal reinterpret1_output_port_net_x2: std_logic_vector(21 downto 0);

begin
  ce_1_sg_x546 <= ce_1;
  clk_1_sg_x546 <= clk_1;
  delay22_q_net_x1 <= din0;
  delay_q_net_x1 <= pulse_en;
  delay20_q_net_x0 <= sync;
  delay24_q_net_x0 <= time_x0;
  register5_q_net_x0 <= use_tvg;
  dout0 <= mux_y_net_x1;
  sync_out <= delay_q_net_x2;
  time_o <= delay1_q_net_x0;

  bus_create2_d651c0183c: entity work.bus_create2_entity_d651c0183c
    port map (
      in1 => mux2_y_net_x0,
      in2 => reinterpret1_output_port_net_x2,
      bus_out => concatenate_y_net_x0
    );

  constant1: entity work.constant_bc7a810978
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net_x0
    );

  constant_x0: entity work.constant_e89402c81f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x0
    );

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x546,
      clk => clk_1_sg_x546,
      d(0) => delay20_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_q_net_x2
    );

  delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 48
    )
    port map (
      ce => ce_1_sg_x546,
      clk => clk_1_sg_x546,
      d => delay24_q_net_x0,
      en => '1',
      rst => '1',
      q => delay1_q_net_x0
    );

  exp_data_6025422bec: entity work.exp_data_entity_6025422bec
    port map (
      bus_in => delay22_q_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x2
    );

  mux: entity work.mux_66ff556d13
    port map (
      ce => ce_1_sg_x546,
      clk => clk_1_sg_x546,
      clr => '0',
      d0 => delay22_q_net_x1,
      d1 => concatenate_y_net_x0,
      sel(0) => register5_q_net_x0,
      y => mux_y_net_x1
    );

  mux2: entity work.mux_e5741dcde9
    port map (
      ce => ce_1_sg_x546,
      clk => clk_1_sg_x546,
      clr => '0',
      d0 => concat_y_net_x1,
      d1 => concat_y_net_x0,
      sel(0) => delay_q_net_x1,
      y => mux2_y_net_x0
    );

  ri_to_c1_136e10ba40: entity work.ri_to_c_entity_f27e34b719
    port map (
      re => constant1_op_net_x0,
      c => concat_y_net_x1
    );

  ri_to_c_f27e34b719: entity work.ri_to_c_entity_f27e34b719
    port map (
      re => constant_op_net_x0,
      c => concat_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/fd_fs_tvg1"

entity fd_fs_tvg1_entity_864661c217 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din0: in std_logic_vector(61 downto 0); 
    use_tvg: in std_logic; 
    dout0: out std_logic_vector(61 downto 0)
  );
end fd_fs_tvg1_entity_864661c217;

architecture structural of fd_fs_tvg1_entity_864661c217 is
  signal ce_1_sg_x547: std_logic;
  signal clk_1_sg_x547: std_logic;
  signal concat_y_net_x0: std_logic_vector(61 downto 0);
  signal constant1_op_net_x0: std_logic_vector(30 downto 0);
  signal constant_op_net_x0: std_logic_vector(30 downto 0);
  signal delay2_q_net_x0: std_logic_vector(61 downto 0);
  signal mux_y_net_x0: std_logic_vector(61 downto 0);
  signal register5_q_net_x1: std_logic;

begin
  ce_1_sg_x547 <= ce_1;
  clk_1_sg_x547 <= clk_1;
  delay2_q_net_x0 <= din0;
  register5_q_net_x1 <= use_tvg;
  dout0 <= mux_y_net_x0;

  constant1: entity work.constant_e89402c81f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net_x0
    );

  constant_x0: entity work.constant_e89402c81f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x0
    );

  mux: entity work.mux_e5741dcde9
    port map (
      ce => ce_1_sg_x547,
      clk => clk_1_sg_x547,
      clr => '0',
      d0 => delay2_q_net_x0,
      d1 => concat_y_net_x0,
      sel(0) => register5_q_net_x1,
      y => mux_y_net_x0
    );

  ri_to_c_d6eb27e011: entity work.ri_to_c_entity_c73e85e8c5
    port map (
      im => constant1_op_net_x0,
      re => constant_op_net_x0,
      c => concat_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/fd_local_time"

entity fd_local_time_entity_fd1d59e087 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    reset: in std_logic; 
    sync: in std_logic; 
    time_x0: out std_logic_vector(47 downto 0)
  );
end fd_local_time_entity_fd1d59e087;

architecture structural of fd_local_time_entity_fd1d59e087 is
  signal ce_1_sg_x549: std_logic;
  signal clk_1_sg_x549: std_logic;
  signal clock_op_net_x0: std_logic_vector(47 downto 0);
  signal delay16_q_net_x0: std_logic;
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal logical14_y_net_x7: std_logic;
  signal register_q_net: std_logic;

begin
  ce_1_sg_x549 <= ce_1;
  clk_1_sg_x549 <= clk_1;
  logical14_y_net_x7 <= reset;
  delay16_q_net_x0 <= sync;
  time_x0 <= clock_op_net_x0;

  clock: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_9407b84ef10719d1",
      op_arith => xlUnsigned,
      op_width => 48
    )
    port map (
      ce => ce_1_sg_x549,
      clk => clk_1_sg_x549,
      clr => '0',
      en(0) => register_q_net,
      rst(0) => delay_q_net,
      op => clock_op_net_x0
    );

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x549,
      clk => clk_1_sg_x549,
      clr => '0',
      d(0) => edge_op_y_net_x0,
      q(0) => delay_q_net
    );

  edge_detect1_65bf822683: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x549,
      clk_1 => clk_1_sg_x549,
      in_x0 => logical14_y_net_x7,
      out_x0 => edge_op_y_net_x0
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x549,
      clk => clk_1_sg_x549,
      d(0) => delay16_q_net_x0,
      en(0) => delay16_q_net_x0,
      rst(0) => logical14_y_net_x7,
      q(0) => register_q_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/fd_tr0"

entity fd_tr0_entity_ff3cd11b73 is
  port (
    arm: in std_logic; 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    current_time: in std_logic_vector(47 downto 0); 
    din: in std_logic_vector(84 downto 0); 
    load_now: in std_logic; 
    load_time: in std_logic_vector(47 downto 0); 
    load_value: in std_logic_vector(78 downto 0); 
    rst: in std_logic; 
    arm_count: out std_logic_vector(7 downto 0); 
    dout: out std_logic_vector(84 downto 0); 
    enable: out std_logic; 
    ld_count: out std_logic_vector(7 downto 0); 
    value: out std_logic_vector(78 downto 0)
  );
end fd_tr0_entity_ff3cd11b73;

architecture structural of fd_tr0_entity_ff3cd11b73 is
  signal assert_dout_net: std_logic;
  signal ce_1_sg_x552: std_logic;
  signal clk_1_sg_x552: std_logic;
  signal concat22_y_net_x2: std_logic_vector(78 downto 0);
  signal concat9_y_net_x2: std_logic_vector(47 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(84 downto 0);
  signal count0_op_net_x0: std_logic_vector(7 downto 0);
  signal count1_op_net_x0: std_logic_vector(7 downto 0);
  signal delay1_q_net: std_logic;
  signal delay1_q_net_x1: std_logic_vector(47 downto 0);
  signal delay2_q_net: std_logic;
  signal delay3_q_net: std_logic;
  signal delay4_q_net: std_logic;
  signal delay6_q_net: std_logic_vector(84 downto 0);
  signal delay6_q_net_x4: std_logic;
  signal delay7_q_net_x1: std_logic_vector(84 downto 0);
  signal delay_q_net_x4: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal edge_op_y_net_x1: std_logic;
  signal inverter_op_net: std_logic;
  signal logical12_y_net_x1: std_logic;
  signal logical14_y_net_x8: std_logic;
  signal logical1_y_net: std_logic;
  signal logical2_y_net: std_logic;
  signal logical3_y_net: std_logic;
  signal logical4_y_net: std_logic;
  signal logical5_y_net: std_logic;
  signal register1_q_net_x0: std_logic;
  signal register2_q_net: std_logic_vector(47 downto 0);
  signal register3_q_net: std_logic_vector(78 downto 0);
  signal register_q_net_x0: std_logic_vector(78 downto 0);
  signal relational_op_net: std_logic;
  signal slice2_y_net: std_logic_vector(47 downto 0);
  signal slice_y_net: std_logic_vector(47 downto 0);

begin
  logical12_y_net_x1 <= arm;
  ce_1_sg_x552 <= ce_1;
  clk_1_sg_x552 <= clk_1;
  delay1_q_net_x1 <= current_time;
  concatenate_y_net_x1 <= din;
  delay6_q_net_x4 <= load_now;
  concat9_y_net_x2 <= load_time;
  concat22_y_net_x2 <= load_value;
  logical14_y_net_x8 <= rst;
  arm_count <= count0_op_net_x0;
  dout <= delay7_q_net_x1;
  enable <= delay_q_net_x4;
  ld_count <= count1_op_net_x0;
  value <= register_q_net_x0;

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 1,
      dout_width => 1
    )
    port map (
      din(0) => register1_q_net_x0,
      dout(0) => assert_dout_net
    );

  count0: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_4df07e1ba68d0c6e",
      op_arith => xlUnsigned,
      op_width => 8
    )
    port map (
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      clr => '0',
      en(0) => delay2_q_net,
      rst(0) => logical14_y_net_x8,
      op => count0_op_net_x0
    );

  count1: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_4df07e1ba68d0c6e",
      op_arith => xlUnsigned,
      op_width => 8
    )
    port map (
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      clr => '0',
      en(0) => delay1_q_net,
      rst(0) => logical14_y_net_x8,
      op => count1_op_net_x0
    );

  delay: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      clr => '0',
      d(0) => logical1_y_net,
      q(0) => delay_q_net_x4
    );

  delay1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      clr => '0',
      d(0) => logical1_y_net,
      q(0) => delay1_q_net
    );

  delay2: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      clr => '0',
      d(0) => edge_op_y_net_x0,
      q(0) => delay2_q_net
    );

  delay3: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      clr => '0',
      d(0) => logical1_y_net,
      q(0) => delay3_q_net
    );

  delay4: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      clr => '0',
      d(0) => edge_op_y_net_x1,
      q(0) => delay4_q_net
    );

  delay6: entity work.delay_3e300ae6bb
    port map (
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      clr => '0',
      d => concatenate_y_net_x1,
      q => delay6_q_net
    );

  delay7: entity work.delay_3e300ae6bb
    port map (
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      clr => '0',
      d => delay6_q_net,
      q => delay7_q_net_x1
    );

  edge_detect1_c3242d79d3: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x552,
      clk_1 => clk_1_sg_x552,
      in_x0 => logical12_y_net_x1,
      out_x0 => edge_op_y_net_x1
    );

  edge_detect_31644e9c4c: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x552,
      clk_1 => clk_1_sg_x552,
      in_x0 => register1_q_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      clr => '0',
      ip(0) => assert_dout_net,
      op(0) => inverter_op_net
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register1_q_net_x0,
      d1(0) => logical2_y_net,
      y(0) => logical1_y_net
    );

  logical2: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      clr => '0',
      d0(0) => relational_op_net,
      d1(0) => delay6_q_net_x4,
      y(0) => logical2_y_net
    );

  logical3: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay4_q_net,
      y(0) => logical3_y_net
    );

  logical4: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => assert_dout_net,
      d1(0) => logical2_y_net,
      y(0) => logical4_y_net
    );

  logical5: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical3_y_net,
      d1(0) => logical4_y_net,
      y(0) => logical5_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      d(0) => inverter_op_net,
      en(0) => logical5_y_net,
      rst(0) => logical14_y_net_x8,
      q(0) => register1_q_net_x0
    );

  register2: entity work.xlregister
    generic map (
      d_width => 48,
      init_value => b"000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      d => slice_y_net,
      en(0) => delay4_q_net,
      rst => "0",
      q => register2_q_net
    );

  register3: entity work.xlregister
    generic map (
      d_width => 79,
      init_value => b"0000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      d => concat22_y_net_x2,
      en(0) => delay4_q_net,
      rst => "0",
      q => register3_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 79,
      init_value => b"0000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      d => register3_q_net,
      en(0) => delay3_q_net,
      rst => "0",
      q => register_q_net_x0
    );

  relational: entity work.relational_e885809f2f
    port map (
      a => slice2_y_net,
      b => register2_q_net,
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      clr => '0',
      op(0) => relational_op_net
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 47,
      x_width => 48,
      y_width => 48
    )
    port map (
      x => concat9_y_net_x2,
      y => slice_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 47,
      x_width => 48,
      y_width => 48
    )
    port map (
      x => delay1_q_net_x1,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/fd_tr1"

entity fd_tr1_entity_b3b52905a2 is
  port (
    arm: in std_logic; 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    current_time: in std_logic_vector(47 downto 0); 
    din: in std_logic_vector(61 downto 0); 
    load_now: in std_logic; 
    load_time: in std_logic_vector(47 downto 0); 
    load_value: in std_logic_vector(78 downto 0); 
    rst: in std_logic; 
    arm_count: out std_logic_vector(7 downto 0); 
    dout: out std_logic_vector(61 downto 0); 
    enable: out std_logic; 
    ld_count: out std_logic_vector(7 downto 0); 
    value: out std_logic_vector(78 downto 0)
  );
end fd_tr1_entity_b3b52905a2;

architecture structural of fd_tr1_entity_b3b52905a2 is
  signal assert_dout_net: std_logic;
  signal ce_1_sg_x555: std_logic;
  signal clk_1_sg_x555: std_logic;
  signal concat1_y_net_x3: std_logic_vector(78 downto 0);
  signal concat2_y_net_x2: std_logic_vector(47 downto 0);
  signal count0_op_net_x0: std_logic_vector(7 downto 0);
  signal count1_op_net_x0: std_logic_vector(7 downto 0);
  signal delay1_q_net: std_logic;
  signal delay1_q_net_x2: std_logic_vector(47 downto 0);
  signal delay2_q_net: std_logic;
  signal delay3_q_net: std_logic;
  signal delay4_q_net: std_logic;
  signal delay6_q_net: std_logic_vector(61 downto 0);
  signal delay6_q_net_x5: std_logic;
  signal delay7_q_net_x1: std_logic_vector(61 downto 0);
  signal delay_q_net_x4: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal edge_op_y_net_x1: std_logic;
  signal inverter_op_net: std_logic;
  signal logical14_y_net_x9: std_logic;
  signal logical1_y_net: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical2_y_net: std_logic;
  signal logical3_y_net: std_logic;
  signal logical4_y_net: std_logic;
  signal logical5_y_net: std_logic;
  signal mux_y_net_x1: std_logic_vector(61 downto 0);
  signal register1_q_net_x0: std_logic;
  signal register2_q_net: std_logic_vector(47 downto 0);
  signal register3_q_net: std_logic_vector(78 downto 0);
  signal register_q_net_x0: std_logic_vector(78 downto 0);
  signal relational_op_net: std_logic;
  signal slice2_y_net: std_logic_vector(47 downto 0);
  signal slice_y_net: std_logic_vector(47 downto 0);

begin
  logical1_y_net_x1 <= arm;
  ce_1_sg_x555 <= ce_1;
  clk_1_sg_x555 <= clk_1;
  delay1_q_net_x2 <= current_time;
  mux_y_net_x1 <= din;
  delay6_q_net_x5 <= load_now;
  concat2_y_net_x2 <= load_time;
  concat1_y_net_x3 <= load_value;
  logical14_y_net_x9 <= rst;
  arm_count <= count0_op_net_x0;
  dout <= delay7_q_net_x1;
  enable <= delay_q_net_x4;
  ld_count <= count1_op_net_x0;
  value <= register_q_net_x0;

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 1,
      dout_width => 1
    )
    port map (
      din(0) => register1_q_net_x0,
      dout(0) => assert_dout_net
    );

  count0: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_4df07e1ba68d0c6e",
      op_arith => xlUnsigned,
      op_width => 8
    )
    port map (
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      clr => '0',
      en(0) => delay2_q_net,
      rst(0) => logical14_y_net_x9,
      op => count0_op_net_x0
    );

  count1: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_4df07e1ba68d0c6e",
      op_arith => xlUnsigned,
      op_width => 8
    )
    port map (
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      clr => '0',
      en(0) => delay1_q_net,
      rst(0) => logical14_y_net_x9,
      op => count1_op_net_x0
    );

  delay: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      clr => '0',
      d(0) => logical1_y_net,
      q(0) => delay_q_net_x4
    );

  delay1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      clr => '0',
      d(0) => logical1_y_net,
      q(0) => delay1_q_net
    );

  delay2: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      clr => '0',
      d(0) => edge_op_y_net_x0,
      q(0) => delay2_q_net
    );

  delay3: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      clr => '0',
      d(0) => logical1_y_net,
      q(0) => delay3_q_net
    );

  delay4: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      clr => '0',
      d(0) => edge_op_y_net_x1,
      q(0) => delay4_q_net
    );

  delay6: entity work.delay_8aef8ddb97
    port map (
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      clr => '0',
      d => mux_y_net_x1,
      q => delay6_q_net
    );

  delay7: entity work.delay_8aef8ddb97
    port map (
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      clr => '0',
      d => delay6_q_net,
      q => delay7_q_net_x1
    );

  edge_detect1_3d8541c405: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x555,
      clk_1 => clk_1_sg_x555,
      in_x0 => logical1_y_net_x1,
      out_x0 => edge_op_y_net_x1
    );

  edge_detect_0866565ba9: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x555,
      clk_1 => clk_1_sg_x555,
      in_x0 => register1_q_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      clr => '0',
      ip(0) => assert_dout_net,
      op(0) => inverter_op_net
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register1_q_net_x0,
      d1(0) => logical2_y_net,
      y(0) => logical1_y_net
    );

  logical2: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      clr => '0',
      d0(0) => relational_op_net,
      d1(0) => delay6_q_net_x5,
      y(0) => logical2_y_net
    );

  logical3: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay4_q_net,
      y(0) => logical3_y_net
    );

  logical4: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => assert_dout_net,
      d1(0) => logical2_y_net,
      y(0) => logical4_y_net
    );

  logical5: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical3_y_net,
      d1(0) => logical4_y_net,
      y(0) => logical5_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      d(0) => inverter_op_net,
      en(0) => logical5_y_net,
      rst(0) => logical14_y_net_x9,
      q(0) => register1_q_net_x0
    );

  register2: entity work.xlregister
    generic map (
      d_width => 48,
      init_value => b"000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      d => slice_y_net,
      en(0) => delay4_q_net,
      rst => "0",
      q => register2_q_net
    );

  register3: entity work.xlregister
    generic map (
      d_width => 79,
      init_value => b"0000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      d => concat1_y_net_x3,
      en(0) => delay4_q_net,
      rst => "0",
      q => register3_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 79,
      init_value => b"0000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      d => register3_q_net,
      en(0) => delay3_q_net,
      rst => "0",
      q => register_q_net_x0
    );

  relational: entity work.relational_e885809f2f
    port map (
      a => slice2_y_net,
      b => register2_q_net,
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      clr => '0',
      op(0) => relational_op_net
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 47,
      x_width => 48,
      y_width => 48
    )
    port map (
      x => concat2_y_net_x2,
      y => slice_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 47,
      x_width => 48,
      y_width => 48
    )
    port map (
      x => delay1_q_net_x2,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs/tvg_tr"

entity tvg_tr_entity_1f329b553b is
  port (
    arm: in std_logic; 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    current_time: in std_logic_vector(47 downto 0); 
    load_now: in std_logic; 
    load_time: in std_logic_vector(47 downto 0); 
    rst: in std_logic; 
    enable: out std_logic
  );
end tvg_tr_entity_1f329b553b;

architecture structural of tvg_tr_entity_1f329b553b is
  signal assert_dout_net: std_logic;
  signal ce_1_sg_x557: std_logic;
  signal clk_1_sg_x557: std_logic;
  signal clock_op_net_x1: std_logic_vector(47 downto 0);
  signal concat9_y_net_x3: std_logic_vector(47 downto 0);
  signal delay4_q_net: std_logic;
  signal delay6_q_net_x6: std_logic;
  signal delay_q_net_x2: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal inverter_op_net: std_logic;
  signal logical14_y_net_x10: std_logic;
  signal logical1_y_net: std_logic;
  signal logical20_y_net_x1: std_logic;
  signal logical2_y_net: std_logic;
  signal logical3_y_net: std_logic;
  signal logical4_y_net: std_logic;
  signal logical5_y_net: std_logic;
  signal register1_q_net: std_logic;
  signal register2_q_net: std_logic_vector(47 downto 0);
  signal relational_op_net: std_logic;
  signal slice2_y_net: std_logic_vector(47 downto 0);
  signal slice_y_net: std_logic_vector(47 downto 0);

begin
  logical20_y_net_x1 <= arm;
  ce_1_sg_x557 <= ce_1;
  clk_1_sg_x557 <= clk_1;
  clock_op_net_x1 <= current_time;
  delay6_q_net_x6 <= load_now;
  concat9_y_net_x3 <= load_time;
  logical14_y_net_x10 <= rst;
  enable <= delay_q_net_x2;

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 1,
      dout_width => 1
    )
    port map (
      din(0) => register1_q_net,
      dout(0) => assert_dout_net
    );

  delay: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x557,
      clk => clk_1_sg_x557,
      clr => '0',
      d(0) => logical1_y_net,
      q(0) => delay_q_net_x2
    );

  delay4: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x557,
      clk => clk_1_sg_x557,
      clr => '0',
      d(0) => edge_op_y_net_x0,
      q(0) => delay4_q_net
    );

  edge_detect1_18b6ef5d7d: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x557,
      clk_1 => clk_1_sg_x557,
      in_x0 => logical20_y_net_x1,
      out_x0 => edge_op_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x557,
      clk => clk_1_sg_x557,
      clr => '0',
      ip(0) => assert_dout_net,
      op(0) => inverter_op_net
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register1_q_net,
      d1(0) => logical2_y_net,
      y(0) => logical1_y_net
    );

  logical2: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x557,
      clk => clk_1_sg_x557,
      clr => '0',
      d0(0) => relational_op_net,
      d1(0) => delay6_q_net_x6,
      y(0) => logical2_y_net
    );

  logical3: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay4_q_net,
      y(0) => logical3_y_net
    );

  logical4: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => assert_dout_net,
      d1(0) => logical2_y_net,
      y(0) => logical4_y_net
    );

  logical5: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical3_y_net,
      d1(0) => logical4_y_net,
      y(0) => logical5_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x557,
      clk => clk_1_sg_x557,
      d(0) => inverter_op_net,
      en(0) => logical5_y_net,
      rst(0) => logical14_y_net_x10,
      q(0) => register1_q_net
    );

  register2: entity work.xlregister
    generic map (
      d_width => 48,
      init_value => b"000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x557,
      clk => clk_1_sg_x557,
      d => slice_y_net,
      en(0) => delay4_q_net,
      rst => "0",
      q => register2_q_net
    );

  relational: entity work.relational_e885809f2f
    port map (
      a => slice2_y_net,
      b => register2_q_net,
      ce => ce_1_sg_x557,
      clk => clk_1_sg_x557,
      clr => '0',
      op(0) => relational_op_net
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 47,
      x_width => 48,
      y_width => 48
    )
    port map (
      x => concat9_y_net_x3,
      y => slice_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 47,
      x_width => 48,
      y_width => 48
    )
    port map (
      x => clock_op_net_x1,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fdfs"

entity fdfs_entity_063070395a is
  port (
    arm0: in std_logic; 
    arm1: in std_logic; 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data: in std_logic_vector(123 downto 0); 
    dv: in std_logic; 
    index: in std_logic_vector(19 downto 0); 
    ld_time0: in std_logic_vector(47 downto 0); 
    ld_time1: in std_logic_vector(47 downto 0); 
    ld_val0: in std_logic_vector(78 downto 0); 
    ld_val1: in std_logic_vector(78 downto 0); 
    load_now: in std_logic; 
    mrst: in std_logic; 
    sync: in std_logic; 
    tvg_en: in std_logic; 
    window_start: in std_logic; 
    data_out: out std_logic_vector(123 downto 0); 
    dv_out: out std_logic; 
    fd_status0: out std_logic_vector(31 downto 0); 
    fd_status1: out std_logic_vector(31 downto 0); 
    sync_out: out std_logic
  );
end fdfs_entity_063070395a;

architecture structural of fdfs_entity_063070395a is
  signal ce_1_sg_x558: std_logic;
  signal clk_1_sg_x558: std_logic;
  signal clock_op_net_x1: std_logic_vector(47 downto 0);
  signal concat13_y_net_x1: std_logic_vector(31 downto 0);
  signal concat1_y_net_x4: std_logic_vector(78 downto 0);
  signal concat1_y_net_x5: std_logic_vector(31 downto 0);
  signal concat22_y_net_x3: std_logic_vector(78 downto 0);
  signal concat2_y_net_x0: std_logic_vector(30 downto 0);
  signal concat2_y_net_x3: std_logic_vector(47 downto 0);
  signal concat4_y_net_x0: std_logic_vector(30 downto 0);
  signal concat9_y_net_x4: std_logic_vector(47 downto 0);
  signal concat_y_net_x3: std_logic_vector(61 downto 0);
  signal concat_y_net_x4: std_logic_vector(61 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(84 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(123 downto 0);
  signal constant1_op_net_x0: std_logic;
  signal constant53_op_net_x0: std_logic;
  signal convert1_dout_net: std_logic_vector(15 downto 0);
  signal convert2_dout_net: std_logic_vector(15 downto 0);
  signal convert4_dout_net: std_logic_vector(15 downto 0);
  signal convert4_dout_net_x2: std_logic_vector(18 downto 0);
  signal convert4_dout_net_x3: std_logic_vector(18 downto 0);
  signal convert5_dout_net: std_logic_vector(15 downto 0);
  signal count0_op_net_x0: std_logic_vector(7 downto 0);
  signal count0_op_net_x1: std_logic_vector(7 downto 0);
  signal count1_op_net_x0: std_logic_vector(7 downto 0);
  signal count1_op_net_x1: std_logic_vector(7 downto 0);
  signal delay11_q_net_x1: std_logic_vector(61 downto 0);
  signal delay11_q_net_x2: std_logic_vector(61 downto 0);
  signal delay13_q_net_x2: std_logic_vector(19 downto 0);
  signal delay13_q_net_x3: std_logic_vector(19 downto 0);
  signal delay14_q_net_x1: std_logic_vector(123 downto 0);
  signal delay15_q_net_x1: std_logic;
  signal delay15_q_net_x2: std_logic;
  signal delay16_q_net_x1: std_logic;
  signal delay1_q_net_x2: std_logic_vector(47 downto 0);
  signal delay20_q_net_x0: std_logic;
  signal delay21_q_net_x1: std_logic_vector(19 downto 0);
  signal delay22_q_net_x1: std_logic_vector(83 downto 0);
  signal delay24_q_net_x0: std_logic_vector(47 downto 0);
  signal delay2_q_net_x0: std_logic_vector(61 downto 0);
  signal delay6_q_net_x7: std_logic;
  signal delay7_q_net_x1: std_logic_vector(84 downto 0);
  signal delay7_q_net_x2: std_logic_vector(61 downto 0);
  signal delay9_q_net_x2: std_logic;
  signal delay_q_net_x2: std_logic;
  signal delay_q_net_x4: std_logic;
  signal delay_q_net_x5: std_logic;
  signal delay_q_net_x6: std_logic;
  signal edge_op_y_net_x2: std_logic;
  signal logical12_y_net_x1: std_logic;
  signal logical14_y_net_x11: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical20_y_net_x1: std_logic;
  signal mux_y_net_x1: std_logic_vector(83 downto 0);
  signal mux_y_net_x2: std_logic_vector(30 downto 0);
  signal mux_y_net_x3: std_logic_vector(30 downto 0);
  signal mux_y_net_x4: std_logic_vector(61 downto 0);
  signal register5_q_net_x2: std_logic;
  signal register_q_net_x0: std_logic_vector(78 downto 0);
  signal register_q_net_x1: std_logic_vector(78 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(61 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(61 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(61 downto 0);
  signal slice11_y_net_x1: std_logic;
  signal slice13_y_net_x1: std_logic;
  signal slice15_y_net_x0: std_logic_vector(15 downto 0);
  signal slice16_y_net_x0: std_logic_vector(15 downto 0);
  signal slice17_y_net: std_logic_vector(15 downto 0);
  signal slice18_y_net: std_logic_vector(14 downto 0);
  signal slice19_y_net_x0: std_logic_vector(15 downto 0);
  signal slice1_y_net_x1: std_logic_vector(15 downto 0);
  signal slice1_y_net_x2: std_logic;
  signal slice2_y_net_x2: std_logic_vector(15 downto 0);
  signal slice2_y_net_x6: std_logic;
  signal slice3_y_net: std_logic_vector(15 downto 0);
  signal slice3_y_net_x4: std_logic;
  signal slice4_y_net: std_logic_vector(14 downto 0);
  signal slice5_y_net_x2: std_logic_vector(15 downto 0);
  signal slice5_y_net_x4: std_logic;
  signal slice_y_net_x1: std_logic;

begin
  slice13_y_net_x1 <= arm0;
  slice11_y_net_x1 <= arm1;
  ce_1_sg_x558 <= ce_1;
  clk_1_sg_x558 <= clk_1;
  delay14_q_net_x1 <= data;
  delay15_q_net_x2 <= dv;
  delay21_q_net_x1 <= index;
  concat9_y_net_x4 <= ld_time0;
  concat2_y_net_x3 <= ld_time1;
  concat22_y_net_x3 <= ld_val0;
  concat1_y_net_x4 <= ld_val1;
  delay6_q_net_x7 <= load_now;
  logical14_y_net_x11 <= mrst;
  delay16_q_net_x1 <= sync;
  register5_q_net_x2 <= tvg_en;
  edge_op_y_net_x2 <= window_start;
  data_out <= concatenate_y_net_x3;
  dv_out <= slice_y_net_x1;
  fd_status0 <= concat13_y_net_x1;
  fd_status1 <= concat1_y_net_x5;
  sync_out <= slice1_y_net_x2;

  bus_create1_74c8747f81: entity work.bus_create1_entity_74c8747f81
    port map (
      in1 => concat_y_net_x3,
      in2 => concat_y_net_x4,
      bus_out => concatenate_y_net_x3
    );

  bus_create2_86f2416e65: entity work.bus_create2_entity_86f2416e65
    port map (
      in1 => reinterpret2_output_port_net_x2,
      in2 => delay15_q_net_x2,
      in3 => edge_op_y_net_x2,
      in4 => delay21_q_net_x1,
      bus_out => concatenate_y_net_x2
    );

  bus_create_4569e4a2f8: entity work.bus_create_entity_4569e4a2f8
    port map (
      in1 => delay_q_net_x2,
      in2 => mux_y_net_x1,
      bus_out => concatenate_y_net_x1
    );

  concat1: entity work.concat_a369e00c6b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => convert1_dout_net,
      in1 => convert2_dout_net,
      y => concat1_y_net_x5
    );

  concat13: entity work.concat_a369e00c6b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => convert4_dout_net,
      in1 => convert5_dout_net,
      y => concat13_y_net_x1
    );

  concat2: entity work.concat_c588c5101d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => slice4_y_net,
      in1 => slice3_y_net,
      y => concat2_y_net_x0
    );

  concat4: entity work.concat_c588c5101d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => slice18_y_net,
      in1 => slice17_y_net,
      y => concat4_y_net_x0
    );

  constant1: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant1_op_net_x0
    );

  constant53: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant53_op_net_x0
    );

  convert1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 8,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x558,
      clk => clk_1_sg_x558,
      clr => '0',
      din => count0_op_net_x1,
      en => "1",
      dout => convert1_dout_net
    );

  convert2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 8,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x558,
      clk => clk_1_sg_x558,
      clr => '0',
      din => count1_op_net_x1,
      en => "1",
      dout => convert2_dout_net
    );

  convert4: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 8,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x558,
      clk => clk_1_sg_x558,
      clr => '0',
      din => count0_op_net_x0,
      en => "1",
      dout => convert4_dout_net
    );

  convert5: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 8,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x558,
      clk => clk_1_sg_x558,
      clr => '0',
      din => count1_op_net_x0,
      en => "1",
      dout => convert5_dout_net
    );

  delay2: entity work.xldelay
    generic map (
      latency => 4,
      reg_retiming => 0,
      reset => 0,
      width => 62
    )
    port map (
      ce => ce_1_sg_x558,
      clk => clk_1_sg_x558,
      d => reinterpret1_output_port_net_x0,
      en => '1',
      rst => '1',
      q => delay2_q_net_x0
    );

  delay20: entity work.xldelay
    generic map (
      latency => 4,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x558,
      clk => clk_1_sg_x558,
      d(0) => delay16_q_net_x1,
      en => '1',
      rst => '1',
      q(0) => delay20_q_net_x0
    );

  delay22: entity work.xldelay
    generic map (
      latency => 4,
      reg_retiming => 0,
      reset => 0,
      width => 84
    )
    port map (
      ce => ce_1_sg_x558,
      clk => clk_1_sg_x558,
      d => concatenate_y_net_x2,
      en => '1',
      rst => '1',
      q => delay22_q_net_x1
    );

  delay24: entity work.xldelay
    generic map (
      latency => 4,
      reg_retiming => 0,
      reset => 0,
      width => 48
    )
    port map (
      ce => ce_1_sg_x558,
      clk => clk_1_sg_x558,
      d => clock_op_net_x1,
      en => '1',
      rst => '1',
      q => delay24_q_net_x0
    );

  delay_gen1_4815715ea8: entity work.delay_gen1_entity_4815715ea8
    port map (
      ce_1 => ce_1_sg_x558,
      clk_1 => clk_1_sg_x558,
      d_dt_delay => slice1_y_net_x1,
      d_dt_phase => slice5_y_net_x2,
      delay => concat2_y_net_x0,
      den => slice3_y_net_x4,
      din => delay7_q_net_x2,
      idx_in => reinterpret1_output_port_net_x3,
      init => slice2_y_net_x6,
      invert_slope => constant1_op_net_x0,
      load => delay_q_net_x5,
      phase => slice2_y_net_x2,
      sync_in => slice5_y_net_x4,
      dout => delay11_q_net_x2,
      idx_out => delay13_q_net_x3,
      phase_out => convert4_dout_net_x3,
      slope_out => mux_y_net_x3
    );

  delay_gen_5337c180f8: entity work.delay_gen_entity_5337c180f8
    port map (
      ce_1 => ce_1_sg_x558,
      clk_1 => clk_1_sg_x558,
      d_dt_delay => slice15_y_net_x0,
      d_dt_phase => slice19_y_net_x0,
      delay => concat4_y_net_x0,
      den => slice3_y_net_x4,
      din => reinterpret4_output_port_net_x1,
      idx_in => reinterpret1_output_port_net_x3,
      init => slice2_y_net_x6,
      invert_slope => constant53_op_net_x0,
      load => delay_q_net_x4,
      phase => slice16_y_net_x0,
      sync_in => slice5_y_net_x4,
      dout => delay11_q_net_x1,
      dvalid => delay15_q_net_x1,
      idx_out => delay13_q_net_x2,
      phase_out => convert4_dout_net_x2,
      slope_out => mux_y_net_x2,
      sync_out => delay9_q_net_x2
    );

  expand_data_in_d5d71b9bb1: entity work.expand_data_in_entity_d5d71b9bb1
    port map (
      bus_in => delay14_q_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  expand_fd0_7384476f9f: entity work.expand_fd0_entity_7384476f9f
    port map (
      bus_in => delay7_q_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x3,
      msb_out5 => slice5_y_net_x4,
      out2 => slice2_y_net_x6,
      out3 => slice3_y_net_x4,
      out4 => reinterpret4_output_port_net_x1
    );

  fd_fs1_17caded306: entity work.fd_fs1_entity_17caded306
    port map (
      a0 => convert4_dout_net_x3,
      a1 => mux_y_net_x3,
      ce_1 => ce_1_sg_x558,
      clk_1 => clk_1_sg_x558,
      data => delay11_q_net_x2,
      index => delay13_q_net_x3,
      data_out => concat_y_net_x4
    );

  fd_fs_fa00e52681: entity work.fd_fs_entity_fa00e52681
    port map (
      a0 => convert4_dout_net_x2,
      a1 => mux_y_net_x2,
      ce_1 => ce_1_sg_x558,
      clk_1 => clk_1_sg_x558,
      data => delay11_q_net_x1,
      index => delay13_q_net_x2,
      sync => delay9_q_net_x2,
      valid => delay15_q_net_x1,
      data_out => concat_y_net_x3,
      sync_out => slice1_y_net_x2,
      valid_out => slice_y_net_x1
    );

  fd_fs_tvg0_3f83eaa054: entity work.fd_fs_tvg0_entity_3f83eaa054
    port map (
      ce_1 => ce_1_sg_x558,
      clk_1 => clk_1_sg_x558,
      din0 => delay22_q_net_x1,
      pulse_en => delay_q_net_x6,
      sync => delay20_q_net_x0,
      time_x0 => delay24_q_net_x0,
      use_tvg => register5_q_net_x2,
      dout0 => mux_y_net_x1,
      sync_out => delay_q_net_x2,
      time_o => delay1_q_net_x2
    );

  fd_fs_tvg1_864661c217: entity work.fd_fs_tvg1_entity_864661c217
    port map (
      ce_1 => ce_1_sg_x558,
      clk_1 => clk_1_sg_x558,
      din0 => delay2_q_net_x0,
      use_tvg => register5_q_net_x2,
      dout0 => mux_y_net_x4
    );

  fd_local_time_fd1d59e087: entity work.fd_local_time_entity_fd1d59e087
    port map (
      ce_1 => ce_1_sg_x558,
      clk_1 => clk_1_sg_x558,
      reset => logical14_y_net_x11,
      sync => delay16_q_net_x1,
      time_x0 => clock_op_net_x1
    );

  fd_tr0_ff3cd11b73: entity work.fd_tr0_entity_ff3cd11b73
    port map (
      arm => logical12_y_net_x1,
      ce_1 => ce_1_sg_x558,
      clk_1 => clk_1_sg_x558,
      current_time => delay1_q_net_x2,
      din => concatenate_y_net_x1,
      load_now => delay6_q_net_x7,
      load_time => concat9_y_net_x4,
      load_value => concat22_y_net_x3,
      rst => logical14_y_net_x11,
      arm_count => count0_op_net_x0,
      dout => delay7_q_net_x1,
      enable => delay_q_net_x4,
      ld_count => count1_op_net_x0,
      value => register_q_net_x0
    );

  fd_tr1_b3b52905a2: entity work.fd_tr1_entity_b3b52905a2
    port map (
      arm => logical1_y_net_x1,
      ce_1 => ce_1_sg_x558,
      clk_1 => clk_1_sg_x558,
      current_time => delay1_q_net_x2,
      din => mux_y_net_x4,
      load_now => delay6_q_net_x7,
      load_time => concat2_y_net_x3,
      load_value => concat1_y_net_x4,
      rst => logical14_y_net_x11,
      arm_count => count0_op_net_x1,
      dout => delay7_q_net_x2,
      enable => delay_q_net_x5,
      ld_count => count1_op_net_x1,
      value => register_q_net_x1
    );

  logical1: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay6_q_net_x7,
      d1(0) => slice11_y_net_x1,
      y(0) => logical1_y_net_x1
    );

  logical12: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay6_q_net_x7,
      d1(0) => slice13_y_net_x1,
      y(0) => logical12_y_net_x1
    );

  logical20: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay6_q_net_x7,
      d1(0) => slice13_y_net_x1,
      y(0) => logical20_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 79,
      y_width => 16
    )
    port map (
      x => register_q_net_x1,
      y => slice1_y_net_x1
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 79,
      y_width => 16
    )
    port map (
      x => register_q_net_x0,
      y => slice15_y_net_x0
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 63,
      new_msb => 78,
      x_width => 79,
      y_width => 16
    )
    port map (
      x => register_q_net_x0,
      y => slice16_y_net_x0
    );

  slice17: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 31,
      x_width => 79,
      y_width => 16
    )
    port map (
      x => register_q_net_x0,
      y => slice17_y_net
    );

  slice18: entity work.xlslice
    generic map (
      new_lsb => 32,
      new_msb => 46,
      x_width => 79,
      y_width => 15
    )
    port map (
      x => register_q_net_x0,
      y => slice18_y_net
    );

  slice19: entity work.xlslice
    generic map (
      new_lsb => 47,
      new_msb => 62,
      x_width => 79,
      y_width => 16
    )
    port map (
      x => register_q_net_x0,
      y => slice19_y_net_x0
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 63,
      new_msb => 78,
      x_width => 79,
      y_width => 16
    )
    port map (
      x => register_q_net_x1,
      y => slice2_y_net_x2
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 31,
      x_width => 79,
      y_width => 16
    )
    port map (
      x => register_q_net_x1,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 32,
      new_msb => 46,
      x_width => 79,
      y_width => 15
    )
    port map (
      x => register_q_net_x1,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 47,
      new_msb => 62,
      x_width => 79,
      y_width => 16
    )
    port map (
      x => register_q_net_x1,
      y => slice5_y_net_x2
    );

  tvg_tr_1f329b553b: entity work.tvg_tr_entity_1f329b553b
    port map (
      arm => logical20_y_net_x1,
      ce_1 => ce_1_sg_x558,
      clk_1 => clk_1_sg_x558,
      current_time => clock_op_net_x1,
      load_now => delay6_q_net_x7,
      load_time => concat9_y_net_x4,
      rst => logical14_y_net_x11,
      enable => delay_q_net_x6
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/buffer/armed_sync"

entity armed_sync_entity_c4620211ad is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    mrst: in std_logic; 
    sync: in std_logic; 
    armed: out std_logic; 
    armed_sync: out std_logic
  );
end armed_sync_entity_c4620211ad;

architecture structural of armed_sync_entity_c4620211ad is
  signal a_s_x0: std_logic;
  signal ce_1_sg_x559: std_logic;
  signal clk_1_sg_x559: std_logic;
  signal delay22_q_net_x0: std_logic;
  signal enabled_sync: std_logic;
  signal logical14_y_net_x12: std_logic;
  signal logical2_y_net_x0: std_logic;
  signal mrst_armed: std_logic;
  signal output_x0: std_logic;

begin
  ce_1_sg_x559 <= ce_1;
  clk_1_sg_x559 <= clk_1;
  logical14_y_net_x12 <= mrst;
  delay22_q_net_x0 <= sync;
  armed <= a_s_x0;
  armed_sync <= logical2_y_net_x0;

  logical: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay22_q_net_x0,
      d1(0) => mrst_armed,
      y(0) => enabled_sync
    );

  logical1: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => a_s_x0,
      d1(0) => enabled_sync,
      y(0) => output_x0
    );

  logical2: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay22_q_net_x0,
      d1(0) => output_x0,
      y(0) => logical2_y_net_x0
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x559,
      clk => clk_1_sg_x559,
      d(0) => enabled_sync,
      en(0) => enabled_sync,
      rst(0) => logical14_y_net_x12,
      q(0) => a_s_x0
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x559,
      clk => clk_1_sg_x559,
      d(0) => logical14_y_net_x12,
      en(0) => logical14_y_net_x12,
      rst(0) => delay22_q_net_x0,
      q(0) => mrst_armed
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/buffer"

entity buffer_entity_f07faed274 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(71 downto 0); 
    mrst: in std_logic; 
    sync: in std_logic; 
    target_x0: in std_logic_vector(9 downto 0); 
    data: out std_logic_vector(71 downto 0); 
    dvalid: out std_logic; 
    sync_out: out std_logic
  );
end buffer_entity_f07faed274;

architecture structural of buffer_entity_f07faed274 is
  signal a_s_x0: std_logic;
  signal ce_1_sg_x562: std_logic;
  signal clk_1_sg_x562: std_logic;
  signal coarse_chans: std_logic_vector(6 downto 0);
  signal constant1_op_net: std_logic_vector(11 downto 0);
  signal constant3_op_net: std_logic_vector(11 downto 0);
  signal constant4_op_net: std_logic_vector(71 downto 0);
  signal constant5_op_net: std_logic;
  signal constant7_op_net: std_logic;
  signal constant_op_net: std_logic;
  signal datao_x0: std_logic_vector(71 downto 0);
  signal datav_x0: std_logic;
  signal delay22_q_net_x1: std_logic;
  signal delay24_q_net_x0: std_logic_vector(71 downto 0);
  signal delay3_q_net: std_logic;
  signal delay4_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal edge_op_y_net_x2: std_logic;
  signal logical14_y_net_x13: std_logic;
  signal logical2_y_net_x0: std_logic;
  signal re_addr: std_logic_vector(11 downto 0);
  signal re_en: std_logic;
  signal re_trig: std_logic;
  signal register1_q_net_x0: std_logic;
  signal relational1_op_net: std_logic;
  signal relational2_op_net_x0: std_logic;
  signal relational_op_net: std_logic;
  signal slice21_y_net_x1: std_logic_vector(9 downto 0);
  signal target: std_logic_vector(15 downto 0);
  signal target_count: std_logic_vector(14 downto 0);
  signal wr_addr: std_logic_vector(11 downto 0);
  signal wr_enable: std_logic;

begin
  ce_1_sg_x562 <= ce_1;
  clk_1_sg_x562 <= clk_1;
  delay24_q_net_x0 <= din;
  logical14_y_net_x13 <= mrst;
  delay22_q_net_x1 <= sync;
  slice21_y_net_x1 <= target_x0;
  data <= datao_x0;
  dvalid <= datav_x0;
  sync_out <= edge_op_y_net_x2;

  armed_sync_c4620211ad: entity work.armed_sync_entity_c4620211ad
    port map (
      ce_1 => ce_1_sg_x562,
      clk_1 => clk_1_sg_x562,
      mrst => logical14_y_net_x13,
      sync => delay22_q_net_x1,
      armed => a_s_x0,
      armed_sync => logical2_y_net_x0
    );

  buffer_x0: entity work.xldpram_c09f12_01
    generic map (
      c_address_width_a => 12,
      c_address_width_b => 12,
      c_width_a => 72,
      c_width_b => 72,
      core_name0 => "bmg_72_3bc6d5a32af9b138",
      latency => 1
    )
    port map (
      a_ce => ce_1_sg_x562,
      a_clk => clk_1_sg_x562,
      addra => wr_addr,
      addrb => re_addr,
      b_ce => ce_1_sg_x562,
      b_clk => clk_1_sg_x562,
      dina => delay24_q_net_x0,
      dinb => constant4_op_net,
      ena => "1",
      enb => "1",
      rsta => "0",
      rstb => "0",
      wea(0) => wr_enable,
      web(0) => constant5_op_net,
      doutb => datao_x0
    );

  coarse_chans_x0: entity work.counter_e63924e4e7
    port map (
      ce => ce_1_sg_x562,
      clk => clk_1_sg_x562,
      clr => '0',
      rst(0) => logical2_y_net_x0,
      op => coarse_chans
    );

  constant1: entity work.constant_9b805894ff
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant3: entity work.constant_6d93c28b86
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant3_op_net
    );

  constant4: entity work.constant_68d110842c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant4_op_net
    );

  constant5: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant5_op_net
    );

  constant7: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant7_op_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  convert2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 10,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x562,
      clk => clk_1_sg_x562,
      clr => '0',
      din => slice21_y_net_x1,
      en => "1",
      dout => target
    );

  delay2: entity work.delay_0341f7be44
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d(0) => relational_op_net,
      q(0) => wr_enable
    );

  delay3: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x562,
      clk => clk_1_sg_x562,
      clr => '0',
      d(0) => re_en,
      q(0) => delay3_q_net
    );

  delay4: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x562,
      clk => clk_1_sg_x562,
      clr => '0',
      d(0) => logical2_y_net_x0,
      q(0) => delay4_q_net
    );

  edge_detect1_a2d4d0fa11: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x562,
      clk_1 => clk_1_sg_x562,
      in_x0 => relational2_op_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  edge_detect2_11b387d781: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x562,
      clk_1 => clk_1_sg_x562,
      in_x0 => register1_q_net_x0,
      out_x0 => edge_op_y_net_x2
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay3_q_net,
      d1(0) => a_s_x0,
      y(0) => datav_x0
    );

  logical4: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => edge_op_y_net_x0,
      d1(0) => a_s_x0,
      y(0) => re_trig
    );

  re_counter: entity work.counter_779ff41485
    port map (
      ce => ce_1_sg_x562,
      clk => clk_1_sg_x562,
      clr => '0',
      en(0) => re_en,
      rst(0) => re_trig,
      op => re_addr
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x562,
      clk => clk_1_sg_x562,
      d(0) => constant7_op_net,
      en(0) => re_trig,
      rst(0) => logical2_y_net_x0,
      q(0) => register1_q_net_x0
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x562,
      clk => clk_1_sg_x562,
      d(0) => constant_op_net,
      en(0) => re_trig,
      rst(0) => relational1_op_net,
      q(0) => re_en
    );

  relational: entity work.relational_a0c795533c
    port map (
      a => target_count,
      b => coarse_chans,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_36ed515732
    port map (
      a => constant3_op_net,
      b => re_addr,
      ce => ce_1_sg_x562,
      clk => clk_1_sg_x562,
      clr => '0',
      op(0) => relational1_op_net
    );

  relational2: entity work.relational_36ed515732
    port map (
      a => wr_addr,
      b => constant1_op_net,
      ce => ce_1_sg_x562,
      clk => clk_1_sg_x562,
      clr => '0',
      op(0) => relational2_op_net_x0
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 15,
      x_width => 16,
      y_width => 15
    )
    port map (
      x => target,
      y => target_count
    );

  wr_addr_x0: entity work.counter_779ff41485
    port map (
      ce => ce_1_sg_x562,
      clk => clk_1_sg_x562,
      clr => '0',
      en(0) => wr_enable,
      rst(0) => delay4_q_net,
      op => wr_addr
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/bus_expand1"

entity bus_expand1_entity_70a99f462b is
  port (
    bus_in: in std_logic_vector(71 downto 0); 
    lsb_out1: out std_logic_vector(35 downto 0); 
    msb_out2: out std_logic_vector(35 downto 0)
  );
end bus_expand1_entity_70a99f462b;

architecture structural of bus_expand1_entity_70a99f462b is
  signal datao_x2: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic_vector(35 downto 0);
  signal slice2_y_net: std_logic_vector(35 downto 0);

begin
  datao_x2 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 35,
      x_width => 72,
      y_width => 36
    )
    port map (
      x => datao_x2,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 71,
      x_width => 72,
      y_width => 36
    )
    port map (
      x => datao_x2,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/indexgen"

entity indexgen_entity_9d60342707 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coarse_chan: in std_logic_vector(9 downto 0); 
    xk_index: in std_logic_vector(11 downto 0); 
    index_x0: out std_logic_vector(19 downto 0); 
    offset_x0: out std_logic_vector(20 downto 0)
  );
end indexgen_entity_9d60342707;

architecture structural of indexgen_entity_9d60342707 is
  signal addsub2_s_net: std_logic_vector(22 downto 0);
  signal ce_1_sg_x563: std_logic;
  signal clk_1_sg_x563: std_logic;
  signal constant1_op_net: std_logic_vector(20 downto 0);
  signal constant2_op_net: std_logic_vector(11 downto 0);
  signal constant3_op_net: std_logic_vector(19 downto 0);
  signal convert1_dout_net: std_logic_vector(19 downto 0);
  signal convert2_dout_net: std_logic_vector(19 downto 0);
  signal convert3_dout_net: std_logic_vector(7 downto 0);
  signal delay1_q_net_x0: std_logic_vector(11 downto 0);
  signal delay4_q_net_x0: std_logic_vector(20 downto 0);
  signal index: std_logic_vector(20 downto 0);
  signal mux_y_net_x0: std_logic_vector(19 downto 0);
  signal offset: std_logic_vector(20 downto 0);
  signal relational_op_net: std_logic;
  signal slice21_y_net_x2: std_logic_vector(9 downto 0);
  signal start: std_logic_vector(19 downto 0);
  signal tmp: std_logic_vector(21 downto 0);
  signal tmp2: std_logic_vector(20 downto 0);
  signal tmp3: std_logic_vector(21 downto 0);

begin
  ce_1_sg_x563 <= ce_1;
  clk_1_sg_x563 <= clk_1;
  slice21_y_net_x2 <= coarse_chan;
  delay1_q_net_x0 <= xk_index;
  index_x0 <= mux_y_net_x0;
  offset_x0 <= delay4_q_net_x0;

  addsub: entity work.xladdsub_c09f12_01
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 20,
      b_arith => xlSigned,
      b_bin_pt => 0,
      b_width => 21,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 22,
      core_name0 => "addsb_11_0_607fe0700100c715",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 22,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 0,
      s_width => 22
    )
    port map (
      a => start,
      b => offset,
      ce => ce_1_sg_x563,
      clk => clk_1_sg_x563,
      clr => '0',
      en => "1",
      s => tmp
    );

  addsub1: entity work.xladdsub_c09f12_01
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 12,
      b_arith => xlSigned,
      b_bin_pt => 0,
      b_width => 21,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 22,
      core_name0 => "addsb_11_0_607fe0700100c715",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 22,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 0,
      s_width => 22
    )
    port map (
      a => delay1_q_net_x0,
      b => tmp2,
      ce => ce_1_sg_x563,
      clk => clk_1_sg_x563,
      clr => '0',
      en => "1",
      s => tmp3
    );

  addsub2: entity work.xladdsub_c09f12_01
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 0,
      a_width => 21,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 21,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 23,
      core_name0 => "addsb_11_0_cdd18bba176b5e77",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 23,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 0,
      s_width => 23
    )
    port map (
      a => index,
      b => constant1_op_net,
      ce => ce_1_sg_x563,
      clk => clk_1_sg_x563,
      clr => '0',
      en => "1",
      s => addsub2_s_net
    );

  concat1: entity work.concat_db62c09dea
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => convert3_dout_net,
      in1 => constant2_op_net,
      y => start
    );

  constant1: entity work.constant_5df6a9ace6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_fd28b32bf8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_ac675e5b18
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant3_op_net
    );

  constant5: entity work.constant_03e4098635
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => offset
    );

  convert1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 0,
      din_width => 23,
      dout_arith => 2,
      dout_bin_pt => 0,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x563,
      clk => clk_1_sg_x563,
      clr => '0',
      din => addsub2_s_net,
      en => "1",
      dout => convert1_dout_net
    );

  convert2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 0,
      din_width => 21,
      dout_arith => 2,
      dout_bin_pt => 0,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x563,
      clk => clk_1_sg_x563,
      clr => '0',
      din => index,
      en => "1",
      dout => convert2_dout_net
    );

  convert3: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 10,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 8,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x563,
      clk => clk_1_sg_x563,
      clr => '0',
      din => slice21_y_net_x2,
      en => "1",
      dout => convert3_dout_net
    );

  convert4: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 0,
      din_width => 22,
      dout_arith => 2,
      dout_bin_pt => 0,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x563,
      clk => clk_1_sg_x563,
      clr => '0',
      din => tmp,
      en => "1",
      dout => tmp2
    );

  convert5: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 0,
      din_width => 22,
      dout_arith => 2,
      dout_bin_pt => 0,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x563,
      clk => clk_1_sg_x563,
      clr => '0',
      din => tmp3,
      en => "1",
      dout => index
    );

  delay4: entity work.delay_2dc2e1c046
    port map (
      ce => ce_1_sg_x563,
      clk => clk_1_sg_x563,
      clr => '0',
      d => tmp2,
      q => delay4_q_net_x0
    );

  mux: entity work.mux_5b0d4156a2
    port map (
      ce => ce_1_sg_x563,
      clk => clk_1_sg_x563,
      clr => '0',
      d0 => convert2_dout_net,
      d1 => convert1_dout_net,
      sel(0) => relational_op_net,
      y => mux_y_net_x0
    );

  relational: entity work.relational_72dd42448d
    port map (
      a => index,
      b => constant3_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/pfb_fir_async1/pol1_in1_coeffs"

entity pol1_in1_coeffs_entity_bc8c92e227 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(15 downto 0); 
    dout: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end pol1_in1_coeffs_entity_bc8c92e227;

architecture structural of pol1_in1_coeffs_entity_bc8c92e227 is
  signal ce_1_sg_x564: std_logic;
  signal clk_1_sg_x564: std_logic;
  signal concat_y_net: std_logic_vector(15 downto 0);
  signal counter_op_net: std_logic_vector(10 downto 0);
  signal delay1_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_q_net_x0: std_logic;
  signal edge_op_y_net_x4: std_logic;
  signal fan_delay1_q_net: std_logic_vector(10 downto 0);
  signal fan_delay2_q_net: std_logic_vector(10 downto 0);
  signal register_q_net_x0: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(35 downto 0);
  signal rom1_data_net: std_logic_vector(7 downto 0);
  signal rom2_data_net: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x564 <= ce_1;
  clk_1_sg_x564 <= clk_1;
  reinterpret2_output_port_net_x1 <= din;
  edge_op_y_net_x4 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;
  sync_out <= delay_q_net_x0;

  concat: entity work.concat_8e53793314
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concat_y_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_99cfda0476972b76",
      op_arith => xlUnsigned,
      op_width => 11
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      clr => '0',
      en => "1",
      rst(0) => edge_op_y_net_x4,
      op => counter_op_net
    );

  delay: entity work.xldelay
    generic map (
      latency => 5,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d(0) => edge_op_y_net_x4,
      en => '1',
      rst => '1',
      q(0) => delay_q_net_x0
    );

  delay1: entity work.xldelay
    generic map (
      latency => 5,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => reinterpret2_output_port_net_x1,
      en => '1',
      rst => '1',
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 11
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 11
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay2_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 16,
      init_value => b"0000000000000000"
    )
    port map (
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  rom1: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 11,
      c_width => 8,
      core_name0 => "bmg_72_804e79c102c84f5c",
      latency => 2
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 11,
      c_width => 8,
      core_name0 => "bmg_72_043bb11b7d009cca",
      latency => 2
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x564,
      clk => clk_1_sg_x564,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/pfb_fir_async1/pol1_in1_last_tap/pfb_add_tree_async/adder_tree1"

entity adder_tree1_entity_4b3dc0964f is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din1: in std_logic_vector(15 downto 0); 
    din2: in std_logic_vector(15 downto 0); 
    sync: in std_logic; 
    dout: out std_logic_vector(15 downto 0); 
    sync_out: out std_logic
  );
end adder_tree1_entity_4b3dc0964f;

architecture structural of adder_tree1_entity_4b3dc0964f is
  signal addr1_s_net_x0: std_logic_vector(15 downto 0);
  signal ce_1_sg_x565: std_logic;
  signal clk_1_sg_x565: std_logic;
  signal delay_q_net_x0: std_logic;
  signal reint0_1_output_port_net_x0: std_logic_vector(15 downto 0);
  signal reint1_1_output_port_net_x0: std_logic_vector(15 downto 0);
  signal sync_delay_q_net_x0: std_logic;

begin
  ce_1_sg_x565 <= ce_1;
  clk_1_sg_x565 <= clk_1;
  reint0_1_output_port_net_x0 <= din1;
  reint1_1_output_port_net_x0 <= din2;
  delay_q_net_x0 <= sync;
  dout <= addr1_s_net_x0;
  sync_out <= sync_delay_q_net_x0;

  addr1: entity work.xladdsub_c09f12_01
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 14,
      a_width => 16,
      b_arith => xlSigned,
      b_bin_pt => 14,
      b_width => 16,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 17,
      core_name0 => "addsb_11_0_0b9b6e1cbccbb2be",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 17,
      latency => 2,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 14,
      s_width => 16
    )
    port map (
      a => reint0_1_output_port_net_x0,
      b => reint1_1_output_port_net_x0,
      ce => ce_1_sg_x565,
      clk => clk_1_sg_x565,
      clr => '0',
      en => "1",
      s => addr1_s_net_x0
    );

  sync_delay: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x565,
      clk => clk_1_sg_x565,
      clr => '0',
      d(0) => delay_q_net_x0,
      q(0) => sync_delay_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/pfb_fir_async1/pol1_in1_last_tap/pfb_add_tree_async/adder_tree2"

entity adder_tree2_entity_bfdc0b6b4c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din1: in std_logic_vector(15 downto 0); 
    din2: in std_logic_vector(15 downto 0); 
    dout: out std_logic_vector(15 downto 0)
  );
end adder_tree2_entity_bfdc0b6b4c;

architecture structural of adder_tree2_entity_bfdc0b6b4c is
  signal addr1_s_net_x0: std_logic_vector(15 downto 0);
  signal ce_1_sg_x566: std_logic;
  signal clk_1_sg_x566: std_logic;
  signal reint0_2_output_port_net_x0: std_logic_vector(15 downto 0);
  signal reint1_2_output_port_net_x0: std_logic_vector(15 downto 0);

begin
  ce_1_sg_x566 <= ce_1;
  clk_1_sg_x566 <= clk_1;
  reint0_2_output_port_net_x0 <= din1;
  reint1_2_output_port_net_x0 <= din2;
  dout <= addr1_s_net_x0;

  addr1: entity work.xladdsub_c09f12_01
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 14,
      a_width => 16,
      b_arith => xlSigned,
      b_bin_pt => 14,
      b_width => 16,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 17,
      core_name0 => "addsb_11_0_0b9b6e1cbccbb2be",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 17,
      latency => 2,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 14,
      s_width => 16
    )
    port map (
      a => reint0_2_output_port_net_x0,
      b => reint1_2_output_port_net_x0,
      ce => ce_1_sg_x566,
      clk => clk_1_sg_x566,
      clr => '0',
      en => "1",
      s => addr1_s_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/pfb_fir_async1/pol1_in1_last_tap/pfb_add_tree_async"

entity pfb_add_tree_async_entity_591571284b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(63 downto 0); 
    dv: in std_logic; 
    sync: in std_logic; 
    dout: out std_logic_vector(35 downto 0); 
    dv_out: out std_logic; 
    sync_out: out std_logic
  );
end pfb_add_tree_async_entity_591571284b;

architecture structural of pfb_add_tree_async_entity_591571284b is
  signal addr1_s_net_x0: std_logic_vector(15 downto 0);
  signal addr1_s_net_x1: std_logic_vector(15 downto 0);
  signal ce_1_sg_x567: std_logic;
  signal clk_1_sg_x567: std_logic;
  signal concat_y_net_x0: std_logic_vector(63 downto 0);
  signal concat_y_net_x3: std_logic_vector(35 downto 0);
  signal convert1_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(17 downto 0);
  signal delay1_q_net_x0: std_logic;
  signal delay_convert_q_net_x1: std_logic;
  signal delay_dv_q_net_x1: std_logic;
  signal delay_q_net_x1: std_logic;
  signal reint0_1_output_port_net_x0: std_logic_vector(15 downto 0);
  signal reint0_2_output_port_net_x0: std_logic_vector(15 downto 0);
  signal reint1_1_output_port_net_x0: std_logic_vector(15 downto 0);
  signal reint1_2_output_port_net_x0: std_logic_vector(15 downto 0);
  signal scale1_op_net: std_logic_vector(15 downto 0);
  signal scale2_op_net: std_logic_vector(15 downto 0);
  signal slice0_1_y_net: std_logic_vector(15 downto 0);
  signal slice0_2_y_net: std_logic_vector(15 downto 0);
  signal slice1_1_y_net: std_logic_vector(15 downto 0);
  signal slice1_2_y_net: std_logic_vector(15 downto 0);
  signal sync_delay_q_net_x0: std_logic;

begin
  ce_1_sg_x567 <= ce_1;
  clk_1_sg_x567 <= clk_1;
  concat_y_net_x0 <= din;
  delay1_q_net_x0 <= dv;
  delay_q_net_x1 <= sync;
  dout <= concat_y_net_x3;
  dv_out <= delay_dv_q_net_x1;
  sync_out <= delay_convert_q_net_x1;

  adder_tree1_4b3dc0964f: entity work.adder_tree1_entity_4b3dc0964f
    port map (
      ce_1 => ce_1_sg_x567,
      clk_1 => clk_1_sg_x567,
      din1 => reint0_1_output_port_net_x0,
      din2 => reint1_1_output_port_net_x0,
      sync => delay_q_net_x1,
      dout => addr1_s_net_x0,
      sync_out => sync_delay_q_net_x0
    );

  adder_tree2_bfdc0b6b4c: entity work.adder_tree2_entity_bfdc0b6b4c
    port map (
      ce_1 => ce_1_sg_x567,
      clk_1 => clk_1_sg_x567,
      din1 => reint0_2_output_port_net_x0,
      din2 => reint1_2_output_port_net_x0,
      dout => addr1_s_net_x1
    );

  convert1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 15,
      din_width => 16,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 2,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x567,
      clk => clk_1_sg_x567,
      clr => '0',
      din => scale1_op_net,
      en => "1",
      dout => convert1_dout_net_x0
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 15,
      din_width => 16,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 2,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x567,
      clk => clk_1_sg_x567,
      clr => '0',
      din => scale2_op_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay_convert: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x567,
      clk => clk_1_sg_x567,
      d(0) => sync_delay_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_convert_q_net_x1
    );

  delay_dv: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x567,
      clk => clk_1_sg_x567,
      d(0) => delay1_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_dv_q_net_x1
    );

  reint0_1: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice0_1_y_net,
      output_port => reint0_1_output_port_net_x0
    );

  reint0_2: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice0_2_y_net,
      output_port => reint0_2_output_port_net_x0
    );

  reint1_1: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_1_y_net,
      output_port => reint1_1_output_port_net_x0
    );

  reint1_2: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_2_y_net,
      output_port => reint1_2_output_port_net_x0
    );

  ri_to_c_222604f7f6: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => convert2_dout_net_x0,
      re => convert1_dout_net_x0,
      c => concat_y_net_x3
    );

  scale1: entity work.scale_fa7c2ab9f6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr1_s_net_x0,
      op => scale1_op_net
    );

  scale2: entity work.scale_fa7c2ab9f6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr1_s_net_x1,
      op => scale2_op_net
    );

  slice0_1: entity work.xlslice
    generic map (
      new_lsb => 48,
      new_msb => 63,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => concat_y_net_x0,
      y => slice0_1_y_net
    );

  slice0_2: entity work.xlslice
    generic map (
      new_lsb => 32,
      new_msb => 47,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => concat_y_net_x0,
      y => slice0_2_y_net
    );

  slice1_1: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 31,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => concat_y_net_x0,
      y => slice1_1_y_net
    );

  slice1_2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => concat_y_net_x0,
      y => slice1_2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/pfb_fir_async1/pol1_in1_last_tap/ri_to_c"

entity ri_to_c_entity_21766a8f4a is
  port (
    im: in std_logic_vector(15 downto 0); 
    re: in std_logic_vector(15 downto 0); 
    c: out std_logic_vector(31 downto 0)
  );
end ri_to_c_entity_21766a8f4a;

architecture structural of ri_to_c_entity_21766a8f4a is
  signal concat_y_net_x0: std_logic_vector(31 downto 0);
  signal mult1_p_net_x0: std_logic_vector(15 downto 0);
  signal mult_p_net_x0: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(15 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(15 downto 0);

begin
  mult_p_net_x0 <= im;
  mult1_p_net_x0 <= re;
  c <= concat_y_net_x0;

  concat: entity work.concat_a369e00c6b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret_output_port_net,
      in1 => reinterpret1_output_port_net,
      y => concat_y_net_x0
    );

  reinterpret: entity work.reinterpret_7025463ea8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mult1_p_net_x0,
      output_port => reinterpret_output_port_net
    );

  reinterpret1: entity work.reinterpret_7025463ea8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mult_p_net_x0,
      output_port => reinterpret1_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/pfb_fir_async1/pol1_in1_last_tap/split_data"

entity split_data_entity_23537c7e5f is
  port (
    bus_in: in std_logic_vector(35 downto 0); 
    lsb_out1: out std_logic_vector(7 downto 0); 
    msb_out2: out std_logic_vector(7 downto 0)
  );
end split_data_entity_23537c7e5f;

architecture structural of split_data_entity_23537c7e5f is
  signal reinterpret1_output_port_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(7 downto 0);
  signal single_port_ram_data_out_net_x0: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic_vector(7 downto 0);
  signal slice2_y_net: std_logic_vector(7 downto 0);

begin
  single_port_ram_data_out_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 27,
      x_width => 36,
      y_width => 8
    )
    port map (
      x => single_port_ram_data_out_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 28,
      new_msb => 35,
      x_width => 36,
      y_width => 8
    )
    port map (
      x => single_port_ram_data_out_net_x0,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/pfb_fir_async1/pol1_in1_last_tap"

entity pol1_in1_last_tap_entity_c58d5bf7f0 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeff: in std_logic_vector(7 downto 0); 
    din: in std_logic_vector(35 downto 0); 
    dvin: in std_logic; 
    sync: in std_logic; 
    taps_in: in std_logic_vector(31 downto 0); 
    dout: out std_logic_vector(35 downto 0); 
    dv_out: out std_logic; 
    sync_out: out std_logic
  );
end pol1_in1_last_tap_entity_c58d5bf7f0;

architecture structural of pol1_in1_last_tap_entity_c58d5bf7f0 is
  signal ce_1_sg_x568: std_logic;
  signal clk_1_sg_x568: std_logic;
  signal concat_y_net_x0: std_logic_vector(63 downto 0);
  signal concat_y_net_x4: std_logic_vector(31 downto 0);
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal delay1_q_net_x0: std_logic;
  signal delay1_q_net_x1: std_logic_vector(7 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay_convert_q_net_x2: std_logic;
  signal delay_dv_q_net_x2: std_logic;
  signal delay_q_net_x1: std_logic;
  signal interpret_coeff_output_port_net: std_logic_vector(7 downto 0);
  signal mult1_p_net_x0: std_logic_vector(15 downto 0);
  signal mult_p_net_x0: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(7 downto 0);
  signal single_port_ram_data_out_net_x1: std_logic_vector(35 downto 0);
  signal sync_delay_q_net_x0: std_logic;
  signal tapout_delay_q_net_x0: std_logic_vector(31 downto 0);

begin
  ce_1_sg_x568 <= ce_1;
  clk_1_sg_x568 <= clk_1;
  delay1_q_net_x1 <= coeff;
  single_port_ram_data_out_net_x1 <= din;
  delay2_q_net_x0 <= dvin;
  sync_delay_q_net_x0 <= sync;
  tapout_delay_q_net_x0 <= taps_in;
  dout <= concat_y_net_x5;
  dv_out <= delay_dv_q_net_x2;
  sync_out <= delay_convert_q_net_x2;

  concat: entity work.concat_62c4475a80
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concat_y_net_x4,
      in1 => tapout_delay_q_net_x0,
      y => concat_y_net_x0
    );

  delay: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x568,
      clk => clk_1_sg_x568,
      d(0) => sync_delay_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_q_net_x1
    );

  delay1: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x568,
      clk => clk_1_sg_x568,
      d(0) => delay2_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay1_q_net_x0
    );

  interpret_coeff: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => delay1_q_net_x1,
      output_port => interpret_coeff_output_port_net
    );

  mult: entity work.mult_1f4d330bcc
    port map (
      a => reinterpret1_output_port_net_x0,
      b => interpret_coeff_output_port_net,
      ce => ce_1_sg_x568,
      clk => clk_1_sg_x568,
      clr => '0',
      p => mult_p_net_x0
    );

  mult1: entity work.mult_1f4d330bcc
    port map (
      a => reinterpret2_output_port_net_x0,
      b => interpret_coeff_output_port_net,
      ce => ce_1_sg_x568,
      clk => clk_1_sg_x568,
      clr => '0',
      p => mult1_p_net_x0
    );

  pfb_add_tree_async_591571284b: entity work.pfb_add_tree_async_entity_591571284b
    port map (
      ce_1 => ce_1_sg_x568,
      clk_1 => clk_1_sg_x568,
      din => concat_y_net_x0,
      dv => delay1_q_net_x0,
      sync => delay_q_net_x1,
      dout => concat_y_net_x5,
      dv_out => delay_dv_q_net_x2,
      sync_out => delay_convert_q_net_x2
    );

  ri_to_c_21766a8f4a: entity work.ri_to_c_entity_21766a8f4a
    port map (
      im => mult_p_net_x0,
      re => mult1_p_net_x0,
      c => concat_y_net_x4
    );

  split_data_23537c7e5f: entity work.split_data_entity_23537c7e5f
    port map (
      bus_in => single_port_ram_data_out_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out2 => reinterpret2_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/pfb_fir_async1/pol1_in1_tap1"

entity pol1_in1_tap1_entity_36567b3995 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeffs: in std_logic_vector(15 downto 0); 
    din: in std_logic_vector(35 downto 0); 
    dvin: in std_logic; 
    coeff_out: out std_logic_vector(7 downto 0); 
    dout: out std_logic_vector(35 downto 0); 
    dv_out: out std_logic; 
    taps_out: out std_logic_vector(31 downto 0)
  );
end pol1_in1_tap1_entity_36567b3995;

architecture structural of pol1_in1_tap1_entity_36567b3995 is
  signal addr: std_logic_vector(10 downto 0);
  signal ce_1_sg_x569: std_logic;
  signal clk_1_sg_x569: std_logic;
  signal concat_y_net_x0: std_logic_vector(31 downto 0);
  signal delay1_q_net_x3: std_logic_vector(35 downto 0);
  signal delay1_q_net_x4: std_logic_vector(7 downto 0);
  signal delay2_q_net_x1: std_logic;
  signal dv_delay_q_net_x0: std_logic;
  signal interpret_coeff_output_port_net: std_logic_vector(7 downto 0);
  signal mult1_p_net_x0: std_logic_vector(15 downto 0);
  signal mult_p_net_x0: std_logic_vector(15 downto 0);
  signal register_q_net_x1: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(7 downto 0);
  signal single_port_ram_data_out_net_x2: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic_vector(7 downto 0);
  signal slice_y_net: std_logic_vector(7 downto 0);
  signal tapout_delay_q_net_x1: std_logic_vector(31 downto 0);

begin
  ce_1_sg_x569 <= ce_1;
  clk_1_sg_x569 <= clk_1;
  register_q_net_x1 <= coeffs;
  delay1_q_net_x3 <= din;
  dv_delay_q_net_x0 <= dvin;
  coeff_out <= delay1_q_net_x4;
  dout <= single_port_ram_data_out_net_x2;
  dv_out <= delay2_q_net_x1;
  taps_out <= tapout_delay_q_net_x1;

  addr_ctr: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_99cfda0476972b76",
      op_arith => xlUnsigned,
      op_width => 11
    )
    port map (
      ce => ce_1_sg_x569,
      clk => clk_1_sg_x569,
      clr => '0',
      en => "1",
      rst => "0",
      op => addr
    );

  delay1: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 8
    )
    port map (
      ce => ce_1_sg_x569,
      clk => clk_1_sg_x569,
      d => slice1_y_net,
      en => '1',
      rst => '1',
      q => delay1_q_net_x4
    );

  delay2: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x569,
      clk => clk_1_sg_x569,
      d(0) => dv_delay_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay2_q_net_x1
    );

  interpret_coeff: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_y_net,
      output_port => interpret_coeff_output_port_net
    );

  mult: entity work.mult_1f4d330bcc
    port map (
      a => reinterpret1_output_port_net_x0,
      b => interpret_coeff_output_port_net,
      ce => ce_1_sg_x569,
      clk => clk_1_sg_x569,
      clr => '0',
      p => mult_p_net_x0
    );

  mult1: entity work.mult_1f4d330bcc
    port map (
      a => reinterpret2_output_port_net_x0,
      b => interpret_coeff_output_port_net,
      ce => ce_1_sg_x569,
      clk => clk_1_sg_x569,
      clr => '0',
      p => mult1_p_net_x0
    );

  ri_to_c_804bb00b89: entity work.ri_to_c_entity_21766a8f4a
    port map (
      im => mult_p_net_x0,
      re => mult1_p_net_x0,
      c => concat_y_net_x0
    );

  single_port_ram: entity work.xlspram_c09f12_01
    generic map (
      c_address_width => 11,
      c_width => 36,
      core_name0 => "bmg_72_ddcdd9bb5f78a2a9",
      latency => 2
    )
    port map (
      addr => addr,
      ce => ce_1_sg_x569,
      clk => clk_1_sg_x569,
      data_in => delay1_q_net_x3,
      en => "1",
      rst => "0",
      we(0) => dv_delay_q_net_x0,
      data_out => single_port_ram_data_out_net_x2
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 7,
      x_width => 16,
      y_width => 8
    )
    port map (
      x => register_q_net_x1,
      y => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 15,
      x_width => 16,
      y_width => 8
    )
    port map (
      x => register_q_net_x1,
      y => slice1_y_net
    );

  split_data_9d872bb04e: entity work.split_data_entity_23537c7e5f
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out2 => reinterpret2_output_port_net_x0
    );

  tapout_delay: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 32
    )
    port map (
      ce => ce_1_sg_x569,
      clk => clk_1_sg_x569,
      d => concat_y_net_x0,
      en => '1',
      rst => '1',
      q => tapout_delay_q_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/pfb_fir_async1/pol1_in2_coeffs"

entity pol1_in2_coeffs_entity_8d7039447f is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(15 downto 0); 
    dout: out std_logic_vector(35 downto 0)
  );
end pol1_in2_coeffs_entity_8d7039447f;

architecture structural of pol1_in2_coeffs_entity_8d7039447f is
  signal ce_1_sg_x570: std_logic;
  signal clk_1_sg_x570: std_logic;
  signal concat_y_net: std_logic_vector(15 downto 0);
  signal counter_op_net: std_logic_vector(10 downto 0);
  signal delay1_q_net_x0: std_logic_vector(35 downto 0);
  signal edge_op_y_net_x5: std_logic;
  signal fan_delay1_q_net: std_logic_vector(10 downto 0);
  signal fan_delay2_q_net: std_logic_vector(10 downto 0);
  signal register_q_net_x0: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(7 downto 0);
  signal rom1_data_net: std_logic_vector(7 downto 0);
  signal rom2_data_net: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x570 <= ce_1;
  clk_1_sg_x570 <= clk_1;
  reinterpret1_output_port_net_x1 <= din;
  edge_op_y_net_x5 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_8e53793314
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concat_y_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_99cfda0476972b76",
      op_arith => xlUnsigned,
      op_width => 11
    )
    port map (
      ce => ce_1_sg_x570,
      clk => clk_1_sg_x570,
      clr => '0',
      en => "1",
      rst(0) => edge_op_y_net_x5,
      op => counter_op_net
    );

  delay1: entity work.xldelay
    generic map (
      latency => 5,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x570,
      clk => clk_1_sg_x570,
      d => reinterpret1_output_port_net_x1,
      en => '1',
      rst => '1',
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 11
    )
    port map (
      ce => ce_1_sg_x570,
      clk => clk_1_sg_x570,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 11
    )
    port map (
      ce => ce_1_sg_x570,
      clk => clk_1_sg_x570,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay2_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 16,
      init_value => b"0000000000000000"
    )
    port map (
      ce => ce_1_sg_x570,
      clk => clk_1_sg_x570,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  rom1: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 11,
      c_width => 8,
      core_name0 => "bmg_72_4f929f931e999067",
      latency => 2
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x570,
      clk => clk_1_sg_x570,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 11,
      c_width => 8,
      core_name0 => "bmg_72_ba30712f7b147c00",
      latency => 2
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x570,
      clk => clk_1_sg_x570,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/pfb_fir_async1/pol1_in2_last_tap/pfb_add_tree_async"

entity pfb_add_tree_async_entity_93c68ef3c8 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(63 downto 0); 
    dout: out std_logic_vector(35 downto 0)
  );
end pfb_add_tree_async_entity_93c68ef3c8;

architecture structural of pfb_add_tree_async_entity_93c68ef3c8 is
  signal addr1_s_net_x0: std_logic_vector(15 downto 0);
  signal addr1_s_net_x1: std_logic_vector(15 downto 0);
  signal ce_1_sg_x573: std_logic;
  signal clk_1_sg_x573: std_logic;
  signal concat_y_net_x0: std_logic_vector(63 downto 0);
  signal concat_y_net_x4: std_logic_vector(35 downto 0);
  signal convert1_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(17 downto 0);
  signal reint0_1_output_port_net_x0: std_logic_vector(15 downto 0);
  signal reint0_2_output_port_net_x0: std_logic_vector(15 downto 0);
  signal reint1_1_output_port_net_x0: std_logic_vector(15 downto 0);
  signal reint1_2_output_port_net_x0: std_logic_vector(15 downto 0);
  signal scale1_op_net: std_logic_vector(15 downto 0);
  signal scale2_op_net: std_logic_vector(15 downto 0);
  signal slice0_1_y_net: std_logic_vector(15 downto 0);
  signal slice0_2_y_net: std_logic_vector(15 downto 0);
  signal slice1_1_y_net: std_logic_vector(15 downto 0);
  signal slice1_2_y_net: std_logic_vector(15 downto 0);

begin
  ce_1_sg_x573 <= ce_1;
  clk_1_sg_x573 <= clk_1;
  concat_y_net_x0 <= din;
  dout <= concat_y_net_x4;

  adder_tree1_5e2f91b04c: entity work.adder_tree2_entity_bfdc0b6b4c
    port map (
      ce_1 => ce_1_sg_x573,
      clk_1 => clk_1_sg_x573,
      din1 => reint0_1_output_port_net_x0,
      din2 => reint1_1_output_port_net_x0,
      dout => addr1_s_net_x0
    );

  adder_tree2_66478975fe: entity work.adder_tree2_entity_bfdc0b6b4c
    port map (
      ce_1 => ce_1_sg_x573,
      clk_1 => clk_1_sg_x573,
      din1 => reint0_2_output_port_net_x0,
      din2 => reint1_2_output_port_net_x0,
      dout => addr1_s_net_x1
    );

  convert1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 15,
      din_width => 16,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 2,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x573,
      clk => clk_1_sg_x573,
      clr => '0',
      din => scale1_op_net,
      en => "1",
      dout => convert1_dout_net_x0
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 15,
      din_width => 16,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 2,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x573,
      clk => clk_1_sg_x573,
      clr => '0',
      din => scale2_op_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  reint0_1: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice0_1_y_net,
      output_port => reint0_1_output_port_net_x0
    );

  reint0_2: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice0_2_y_net,
      output_port => reint0_2_output_port_net_x0
    );

  reint1_1: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_1_y_net,
      output_port => reint1_1_output_port_net_x0
    );

  reint1_2: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_2_y_net,
      output_port => reint1_2_output_port_net_x0
    );

  ri_to_c_d1cba936c7: entity work.ri_to_c0_entity_724b130d6e
    port map (
      im => convert2_dout_net_x0,
      re => convert1_dout_net_x0,
      c => concat_y_net_x4
    );

  scale1: entity work.scale_fa7c2ab9f6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr1_s_net_x0,
      op => scale1_op_net
    );

  scale2: entity work.scale_fa7c2ab9f6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr1_s_net_x1,
      op => scale2_op_net
    );

  slice0_1: entity work.xlslice
    generic map (
      new_lsb => 48,
      new_msb => 63,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => concat_y_net_x0,
      y => slice0_1_y_net
    );

  slice0_2: entity work.xlslice
    generic map (
      new_lsb => 32,
      new_msb => 47,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => concat_y_net_x0,
      y => slice0_2_y_net
    );

  slice1_1: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 31,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => concat_y_net_x0,
      y => slice1_1_y_net
    );

  slice1_2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => concat_y_net_x0,
      y => slice1_2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/pfb_fir_async1/pol1_in2_last_tap"

entity pol1_in2_last_tap_entity_ca52ec1650 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeff: in std_logic_vector(7 downto 0); 
    din: in std_logic_vector(35 downto 0); 
    taps_in: in std_logic_vector(31 downto 0); 
    dout: out std_logic_vector(35 downto 0)
  );
end pol1_in2_last_tap_entity_ca52ec1650;

architecture structural of pol1_in2_last_tap_entity_ca52ec1650 is
  signal ce_1_sg_x574: std_logic;
  signal clk_1_sg_x574: std_logic;
  signal concat_y_net_x0: std_logic_vector(63 downto 0);
  signal concat_y_net_x1: std_logic_vector(31 downto 0);
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal delay1_q_net_x0: std_logic_vector(7 downto 0);
  signal interpret_coeff_output_port_net: std_logic_vector(7 downto 0);
  signal mult1_p_net_x0: std_logic_vector(15 downto 0);
  signal mult_p_net_x0: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(7 downto 0);
  signal single_port_ram_data_out_net_x1: std_logic_vector(35 downto 0);
  signal tapout_delay_q_net_x0: std_logic_vector(31 downto 0);

begin
  ce_1_sg_x574 <= ce_1;
  clk_1_sg_x574 <= clk_1;
  delay1_q_net_x0 <= coeff;
  single_port_ram_data_out_net_x1 <= din;
  tapout_delay_q_net_x0 <= taps_in;
  dout <= concat_y_net_x5;

  concat: entity work.concat_62c4475a80
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concat_y_net_x1,
      in1 => tapout_delay_q_net_x0,
      y => concat_y_net_x0
    );

  interpret_coeff: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => delay1_q_net_x0,
      output_port => interpret_coeff_output_port_net
    );

  mult: entity work.mult_1f4d330bcc
    port map (
      a => reinterpret1_output_port_net_x0,
      b => interpret_coeff_output_port_net,
      ce => ce_1_sg_x574,
      clk => clk_1_sg_x574,
      clr => '0',
      p => mult_p_net_x0
    );

  mult1: entity work.mult_1f4d330bcc
    port map (
      a => reinterpret2_output_port_net_x0,
      b => interpret_coeff_output_port_net,
      ce => ce_1_sg_x574,
      clk => clk_1_sg_x574,
      clr => '0',
      p => mult1_p_net_x0
    );

  pfb_add_tree_async_93c68ef3c8: entity work.pfb_add_tree_async_entity_93c68ef3c8
    port map (
      ce_1 => ce_1_sg_x574,
      clk_1 => clk_1_sg_x574,
      din => concat_y_net_x0,
      dout => concat_y_net_x5
    );

  ri_to_c_bb6fa07ed5: entity work.ri_to_c_entity_21766a8f4a
    port map (
      im => mult_p_net_x0,
      re => mult1_p_net_x0,
      c => concat_y_net_x1
    );

  split_data_dfbe9eaf40: entity work.split_data_entity_23537c7e5f
    port map (
      bus_in => single_port_ram_data_out_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out2 => reinterpret2_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/pfb_fir_async1/pol1_in2_tap1"

entity pol1_in2_tap1_entity_d877d09e17 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeffs: in std_logic_vector(15 downto 0); 
    din: in std_logic_vector(35 downto 0); 
    dvin: in std_logic; 
    coeff_out: out std_logic_vector(7 downto 0); 
    dout: out std_logic_vector(35 downto 0); 
    taps_out: out std_logic_vector(31 downto 0)
  );
end pol1_in2_tap1_entity_d877d09e17;

architecture structural of pol1_in2_tap1_entity_d877d09e17 is
  signal addr: std_logic_vector(10 downto 0);
  signal ce_1_sg_x575: std_logic;
  signal clk_1_sg_x575: std_logic;
  signal concat_y_net_x0: std_logic_vector(31 downto 0);
  signal delay1_q_net_x2: std_logic_vector(35 downto 0);
  signal delay1_q_net_x3: std_logic_vector(7 downto 0);
  signal dv_delay_q_net_x1: std_logic;
  signal interpret_coeff_output_port_net: std_logic_vector(7 downto 0);
  signal mult1_p_net_x0: std_logic_vector(15 downto 0);
  signal mult_p_net_x0: std_logic_vector(15 downto 0);
  signal register_q_net_x1: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(7 downto 0);
  signal single_port_ram_data_out_net_x2: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic_vector(7 downto 0);
  signal slice_y_net: std_logic_vector(7 downto 0);
  signal tapout_delay_q_net_x1: std_logic_vector(31 downto 0);

begin
  ce_1_sg_x575 <= ce_1;
  clk_1_sg_x575 <= clk_1;
  register_q_net_x1 <= coeffs;
  delay1_q_net_x2 <= din;
  dv_delay_q_net_x1 <= dvin;
  coeff_out <= delay1_q_net_x3;
  dout <= single_port_ram_data_out_net_x2;
  taps_out <= tapout_delay_q_net_x1;

  addr_ctr: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_99cfda0476972b76",
      op_arith => xlUnsigned,
      op_width => 11
    )
    port map (
      ce => ce_1_sg_x575,
      clk => clk_1_sg_x575,
      clr => '0',
      en => "1",
      rst => "0",
      op => addr
    );

  delay1: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 8
    )
    port map (
      ce => ce_1_sg_x575,
      clk => clk_1_sg_x575,
      d => slice1_y_net,
      en => '1',
      rst => '1',
      q => delay1_q_net_x3
    );

  interpret_coeff: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_y_net,
      output_port => interpret_coeff_output_port_net
    );

  mult: entity work.mult_1f4d330bcc
    port map (
      a => reinterpret1_output_port_net_x0,
      b => interpret_coeff_output_port_net,
      ce => ce_1_sg_x575,
      clk => clk_1_sg_x575,
      clr => '0',
      p => mult_p_net_x0
    );

  mult1: entity work.mult_1f4d330bcc
    port map (
      a => reinterpret2_output_port_net_x0,
      b => interpret_coeff_output_port_net,
      ce => ce_1_sg_x575,
      clk => clk_1_sg_x575,
      clr => '0',
      p => mult1_p_net_x0
    );

  ri_to_c_66a81a0871: entity work.ri_to_c_entity_21766a8f4a
    port map (
      im => mult_p_net_x0,
      re => mult1_p_net_x0,
      c => concat_y_net_x0
    );

  single_port_ram: entity work.xlspram_c09f12_01
    generic map (
      c_address_width => 11,
      c_width => 36,
      core_name0 => "bmg_72_ddcdd9bb5f78a2a9",
      latency => 2
    )
    port map (
      addr => addr,
      ce => ce_1_sg_x575,
      clk => clk_1_sg_x575,
      data_in => delay1_q_net_x2,
      en => "1",
      rst => "0",
      we(0) => dv_delay_q_net_x1,
      data_out => single_port_ram_data_out_net_x2
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 7,
      x_width => 16,
      y_width => 8
    )
    port map (
      x => register_q_net_x1,
      y => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 15,
      x_width => 16,
      y_width => 8
    )
    port map (
      x => register_q_net_x1,
      y => slice1_y_net
    );

  split_data_31c86d1414: entity work.split_data_entity_23537c7e5f
    port map (
      bus_in => delay1_q_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out2 => reinterpret2_output_port_net_x0
    );

  tapout_delay: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 32
    )
    port map (
      ce => ce_1_sg_x575,
      clk => clk_1_sg_x575,
      d => concat_y_net_x0,
      en => '1',
      rst => '1',
      q => tapout_delay_q_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/pfb_fir_async1/sync_generate"

entity sync_generate_entity_533415c247 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dv: in std_logic; 
    sync: in std_logic; 
    sync_out_x0: out std_logic
  );
end sync_generate_entity_533415c247;

architecture structural of sync_generate_entity_533415c247 is
  signal ce_1_sg_x576: std_logic;
  signal clk_1_sg_x576: std_logic;
  signal constant1_op_net: std_logic_vector(31 downto 0);
  signal constant_op_net: std_logic;
  signal counter_op_net: std_logic_vector(31 downto 0);
  signal delay_q_net_x1: std_logic;
  signal dv_delay_q_net_x2: std_logic;
  signal logical_y_net: std_logic;
  signal register_q_net: std_logic;
  signal sync_delay_q_net_x1: std_logic;
  signal sync_out: std_logic;

begin
  ce_1_sg_x576 <= ce_1;
  clk_1_sg_x576 <= clk_1;
  dv_delay_q_net_x2 <= dv;
  delay_q_net_x1 <= sync;
  sync_out_x0 <= sync_delay_q_net_x1;

  constant1: entity work.constant_c11787fdd1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_0400b347688ef51a",
      op_arith => xlUnsigned,
      op_width => 32
    )
    port map (
      ce => ce_1_sg_x576,
      clk => clk_1_sg_x576,
      clr => '0',
      en(0) => logical_y_net,
      rst(0) => sync_out,
      op => counter_op_net
    );

  logical: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dv_delay_q_net_x2,
      d1(0) => register_q_net,
      y(0) => logical_y_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x576,
      clk => clk_1_sg_x576,
      d(0) => constant_op_net,
      en(0) => delay_q_net_x1,
      rst(0) => sync_out,
      q(0) => register_q_net
    );

  relational: entity work.relational_770e12e4ab
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => ce_1_sg_x576,
      clk => clk_1_sg_x576,
      clr => '0',
      op(0) => sync_out
    );

  sync_delay: entity work.delay_0341f7be44
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d(0) => sync_out,
      q(0) => sync_delay_q_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/pfb_fir_async1"

entity pfb_fir_async1_entity_179eba1a8c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dv: in std_logic; 
    pol1_in1: in std_logic_vector(35 downto 0); 
    pol1_in2: in std_logic_vector(35 downto 0); 
    sync: in std_logic; 
    dv_out: out std_logic; 
    pol1_out1: out std_logic_vector(35 downto 0); 
    pol1_out2: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end pfb_fir_async1_entity_179eba1a8c;

architecture structural of pfb_fir_async1_entity_179eba1a8c is
  signal ce_1_sg_x577: std_logic;
  signal clk_1_sg_x577: std_logic;
  signal concat_y_net_x7: std_logic_vector(35 downto 0);
  signal concat_y_net_x8: std_logic_vector(35 downto 0);
  signal datav_x2: std_logic;
  signal delay1_q_net_x2: std_logic_vector(35 downto 0);
  signal delay1_q_net_x3: std_logic_vector(35 downto 0);
  signal delay1_q_net_x4: std_logic_vector(7 downto 0);
  signal delay1_q_net_x5: std_logic_vector(7 downto 0);
  signal delay2_q_net_x1: std_logic;
  signal delay_convert_q_net_x3: std_logic;
  signal delay_dv_q_net_x3: std_logic;
  signal delay_q_net_x1: std_logic;
  signal dv_delay_q_net_x2: std_logic;
  signal edge_op_y_net_x6: std_logic;
  signal register_q_net_x1: std_logic_vector(15 downto 0);
  signal register_q_net_x2: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(35 downto 0);
  signal single_port_ram_data_out_net_x2: std_logic_vector(35 downto 0);
  signal single_port_ram_data_out_net_x3: std_logic_vector(35 downto 0);
  signal sync_delay_q_net_x1: std_logic;
  signal tapout_delay_q_net_x1: std_logic_vector(31 downto 0);
  signal tapout_delay_q_net_x2: std_logic_vector(31 downto 0);

begin
  ce_1_sg_x577 <= ce_1;
  clk_1_sg_x577 <= clk_1;
  datav_x2 <= dv;
  reinterpret2_output_port_net_x2 <= pol1_in1;
  reinterpret1_output_port_net_x2 <= pol1_in2;
  edge_op_y_net_x6 <= sync;
  dv_out <= delay_dv_q_net_x3;
  pol1_out1 <= concat_y_net_x7;
  pol1_out2 <= concat_y_net_x8;
  sync_out <= delay_convert_q_net_x3;

  dv_delay: entity work.xldelay
    generic map (
      latency => 4,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x577,
      clk => clk_1_sg_x577,
      d(0) => datav_x2,
      en => '1',
      rst => '1',
      q(0) => dv_delay_q_net_x2
    );

  pol1_in1_coeffs_bc8c92e227: entity work.pol1_in1_coeffs_entity_bc8c92e227
    port map (
      ce_1 => ce_1_sg_x577,
      clk_1 => clk_1_sg_x577,
      din => reinterpret2_output_port_net_x2,
      sync => edge_op_y_net_x6,
      coeff => register_q_net_x1,
      dout => delay1_q_net_x3,
      sync_out => delay_q_net_x1
    );

  pol1_in1_last_tap_c58d5bf7f0: entity work.pol1_in1_last_tap_entity_c58d5bf7f0
    port map (
      ce_1 => ce_1_sg_x577,
      clk_1 => clk_1_sg_x577,
      coeff => delay1_q_net_x4,
      din => single_port_ram_data_out_net_x2,
      dvin => delay2_q_net_x1,
      sync => sync_delay_q_net_x1,
      taps_in => tapout_delay_q_net_x1,
      dout => concat_y_net_x7,
      dv_out => delay_dv_q_net_x3,
      sync_out => delay_convert_q_net_x3
    );

  pol1_in1_tap1_36567b3995: entity work.pol1_in1_tap1_entity_36567b3995
    port map (
      ce_1 => ce_1_sg_x577,
      clk_1 => clk_1_sg_x577,
      coeffs => register_q_net_x1,
      din => delay1_q_net_x3,
      dvin => dv_delay_q_net_x2,
      coeff_out => delay1_q_net_x4,
      dout => single_port_ram_data_out_net_x2,
      dv_out => delay2_q_net_x1,
      taps_out => tapout_delay_q_net_x1
    );

  pol1_in2_coeffs_8d7039447f: entity work.pol1_in2_coeffs_entity_8d7039447f
    port map (
      ce_1 => ce_1_sg_x577,
      clk_1 => clk_1_sg_x577,
      din => reinterpret1_output_port_net_x2,
      sync => edge_op_y_net_x6,
      coeff => register_q_net_x2,
      dout => delay1_q_net_x2
    );

  pol1_in2_last_tap_ca52ec1650: entity work.pol1_in2_last_tap_entity_ca52ec1650
    port map (
      ce_1 => ce_1_sg_x577,
      clk_1 => clk_1_sg_x577,
      coeff => delay1_q_net_x5,
      din => single_port_ram_data_out_net_x3,
      taps_in => tapout_delay_q_net_x2,
      dout => concat_y_net_x8
    );

  pol1_in2_tap1_d877d09e17: entity work.pol1_in2_tap1_entity_d877d09e17
    port map (
      ce_1 => ce_1_sg_x577,
      clk_1 => clk_1_sg_x577,
      coeffs => register_q_net_x2,
      din => delay1_q_net_x2,
      dvin => dv_delay_q_net_x2,
      coeff_out => delay1_q_net_x5,
      dout => single_port_ram_data_out_net_x3,
      taps_out => tapout_delay_q_net_x2
    );

  sync_generate_533415c247: entity work.sync_generate_entity_533415c247
    port map (
      ce_1 => ce_1_sg_x577,
      clk_1 => clk_1_sg_x577,
      dv => dv_delay_q_net_x2,
      sync => delay_q_net_x1,
      sync_out_x0 => sync_delay_q_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/xilinx_ffts/bus_create1"

entity bus_create1_entity_4f50c3e796 is
  port (
    in1: in std_logic_vector(30 downto 0); 
    in2: in std_logic_vector(30 downto 0); 
    bus_out: out std_logic_vector(61 downto 0)
  );
end bus_create1_entity_4f50c3e796;

architecture structural of bus_create1_entity_4f50c3e796 is
  signal concatenate_y_net_x0: std_logic_vector(61 downto 0);
  signal fft_pol0_xk_im_net_x0: std_logic_vector(30 downto 0);
  signal fft_pol0_xk_re_net_x0: std_logic_vector(30 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(30 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(30 downto 0);

begin
  fft_pol0_xk_re_net_x0 <= in1;
  fft_pol0_xk_im_net_x0 <= in2;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_94729ef7e0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_64ddc4af5e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => fft_pol0_xk_re_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_64ddc4af5e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => fft_pol0_xk_im_net_x0,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/xilinx_ffts/bus_expand"

entity bus_expand_entity_d4648db3a8 is
  port (
    bus_in: in std_logic_vector(71 downto 0); 
    lsb_out1: out std_logic_vector(17 downto 0); 
    msb_out4: out std_logic_vector(17 downto 0); 
    out2: out std_logic_vector(17 downto 0); 
    out3: out std_logic_vector(17 downto 0)
  );
end bus_expand_entity_d4648db3a8;

architecture structural of bus_expand_entity_d4648db3a8 is
  signal delay2_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);
  signal slice1_y_net: std_logic_vector(17 downto 0);
  signal slice2_y_net: std_logic_vector(17 downto 0);
  signal slice3_y_net: std_logic_vector(17 downto 0);
  signal slice4_y_net: std_logic_vector(17 downto 0);

begin
  delay2_q_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out4 <= reinterpret4_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;

  reinterpret1: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 72,
      y_width => 18
    )
    port map (
      x => delay2_q_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 35,
      x_width => 72,
      y_width => 18
    )
    port map (
      x => delay2_q_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 53,
      x_width => 72,
      y_width => 18
    )
    port map (
      x => delay2_q_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 54,
      new_msb => 71,
      x_width => 72,
      y_width => 18
    )
    port map (
      x => delay2_q_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/xilinx_ffts/create_sync"

entity create_sync_entity_c968f2d235 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    xdata: in std_logic_vector(123 downto 0); 
    xdv: in std_logic; 
    data_out: out std_logic_vector(123 downto 0); 
    dv_out: out std_logic; 
    sync_out: out std_logic
  );
end create_sync_entity_c968f2d235;

architecture structural of create_sync_entity_c968f2d235 is
  signal ce_1_sg_x578: std_logic;
  signal clk_1_sg_x578: std_logic;
  signal concatenate_y_net_x5: std_logic_vector(123 downto 0);
  signal delay1_q_net: std_logic_vector(123 downto 0);
  signal delay2_q_net: std_logic;
  signal delay3_q_net_x0: std_logic;
  signal delay4_q_net_x0: std_logic_vector(123 downto 0);
  signal delay_convert_q_net_x4: std_logic;
  signal delay_q_net: std_logic;
  signal fft_pol0_dv_net_x0: std_logic;
  signal inverter_op_net: std_logic;
  signal logical_y_net: std_logic;
  signal register2_q_net: std_logic;
  signal register3_q_net_x0: std_logic;

begin
  ce_1_sg_x578 <= ce_1;
  clk_1_sg_x578 <= clk_1;
  delay_convert_q_net_x4 <= sync_in;
  concatenate_y_net_x5 <= xdata;
  fft_pol0_dv_net_x0 <= xdv;
  data_out <= delay4_q_net_x0;
  dv_out <= delay3_q_net_x0;
  sync_out <= register3_q_net_x0;

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x578,
      clk => clk_1_sg_x578,
      clr => '0',
      d(0) => fft_pol0_dv_net_x0,
      q(0) => delay_q_net
    );

  delay1: entity work.delay_2940aaa0cf
    port map (
      ce => ce_1_sg_x578,
      clk => clk_1_sg_x578,
      clr => '0',
      d => concatenate_y_net_x5,
      q => delay1_q_net
    );

  delay2: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x578,
      clk => clk_1_sg_x578,
      clr => '0',
      d(0) => fft_pol0_dv_net_x0,
      q(0) => delay2_q_net
    );

  delay3: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x578,
      clk => clk_1_sg_x578,
      clr => '0',
      d(0) => delay2_q_net,
      q(0) => delay3_q_net_x0
    );

  delay4: entity work.delay_2940aaa0cf
    port map (
      ce => ce_1_sg_x578,
      clk => clk_1_sg_x578,
      clr => '0',
      d => delay1_q_net,
      q => delay4_q_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x578,
      clk => clk_1_sg_x578,
      clr => '0',
      ip(0) => delay_q_net,
      op(0) => inverter_op_net
    );

  logical: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => fft_pol0_dv_net_x0,
      d1(0) => inverter_op_net,
      y(0) => logical_y_net
    );

  register2: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x578,
      clk => clk_1_sg_x578,
      d(0) => delay_convert_q_net_x4,
      en(0) => delay_convert_q_net_x4,
      rst(0) => register3_q_net_x0,
      q(0) => register2_q_net
    );

  register3: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x578,
      clk => clk_1_sg_x578,
      d(0) => register2_q_net,
      en(0) => logical_y_net,
      rst(0) => register3_q_net_x0,
      q(0) => register3_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/xilinx_ffts/create_xstart"

entity create_xstart_entity_c17e97ae68 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data: in std_logic_vector(71 downto 0); 
    mrst: in std_logic; 
    sync: in std_logic; 
    xdata_x0: out std_logic_vector(71 downto 0); 
    xrst_x0: out std_logic; 
    xstart_x0: out std_logic
  );
end create_xstart_entity_c17e97ae68;

architecture structural of create_xstart_entity_c17e97ae68 is
  signal arm: std_logic;
  signal ce_1_sg_x579: std_logic;
  signal clk_1_sg_x579: std_logic;
  signal concatenate_y_net_x17: std_logic_vector(71 downto 0);
  signal constant3_op_net: std_logic_vector(18 downto 0);
  signal ctr: std_logic_vector(18 downto 0);
  signal delay2_q_net_x1: std_logic_vector(71 downto 0);
  signal delay_convert_q_net_x5: std_logic;
  signal logical14_y_net_x14: std_logic;
  signal master_en: std_logic;
  signal master_sync: std_logic;
  signal xdata: std_logic_vector(71 downto 0);
  signal xrst_x1: std_logic;
  signal xstart_x1: std_logic;

begin
  ce_1_sg_x579 <= ce_1;
  clk_1_sg_x579 <= clk_1;
  concatenate_y_net_x17 <= data;
  logical14_y_net_x14 <= mrst;
  delay_convert_q_net_x5 <= sync;
  xdata_x0 <= delay2_q_net_x1;
  xrst_x0 <= xrst_x1;
  xstart_x0 <= xstart_x1;

  constant3: entity work.constant_b366689086
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant3_op_net
    );

  counter1: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_ccf1a4007466a9ac",
      op_arith => xlUnsigned,
      op_width => 19
    )
    port map (
      ce => ce_1_sg_x579,
      clk => clk_1_sg_x579,
      clr => '0',
      en(0) => master_en,
      rst(0) => delay_convert_q_net_x5,
      op => ctr
    );

  delay: entity work.delay_a8953e790b
    port map (
      ce => ce_1_sg_x579,
      clk => clk_1_sg_x579,
      clr => '0',
      d => concatenate_y_net_x17,
      q => xdata
    );

  delay1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x579,
      clk => clk_1_sg_x579,
      clr => '0',
      d(0) => delay_convert_q_net_x5,
      q(0) => xrst_x1
    );

  delay2: entity work.delay_a8953e790b
    port map (
      ce => ce_1_sg_x579,
      clk => clk_1_sg_x579,
      clr => '0',
      d => xdata,
      q => delay2_q_net_x1
    );

  logical2: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => arm,
      d1(0) => delay_convert_q_net_x5,
      y(0) => master_sync
    );

  register2: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x579,
      clk => clk_1_sg_x579,
      d(0) => master_sync,
      en(0) => master_sync,
      rst(0) => logical14_y_net_x14,
      q(0) => master_en
    );

  register5: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x579,
      clk => clk_1_sg_x579,
      d(0) => logical14_y_net_x14,
      en(0) => logical14_y_net_x14,
      rst(0) => delay_convert_q_net_x5,
      q(0) => arm
    );

  relational3: entity work.relational_6e0a4878aa
    port map (
      a => ctr,
      b => constant3_op_net,
      ce => ce_1_sg_x579,
      clk => clk_1_sg_x579,
      clr => '0',
      op(0) => xstart_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine/xilinx_ffts"

entity xilinx_ffts_entity_8d01634063 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data: in std_logic_vector(71 downto 0); 
    mrst: in std_logic; 
    sync: in std_logic; 
    fftor0: out std_logic; 
    fftor1: out std_logic; 
    out_data: out std_logic_vector(123 downto 0); 
    out_sync: out std_logic; 
    out_valid: out std_logic; 
    xk_index: out std_logic_vector(11 downto 0)
  );
end xilinx_ffts_entity_8d01634063;

architecture structural of xilinx_ffts_entity_8d01634063 is
  signal ce_1_sg_x580: std_logic;
  signal clk_1_sg_x580: std_logic;
  signal concatenate_y_net_x18: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(61 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(61 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(123 downto 0);
  signal constant1_op_net_x2: std_logic;
  signal constant2_op_net: std_logic;
  signal constant3_op_net_x1: std_logic;
  signal constant4_op_net: std_logic;
  signal delay1_q_net_x1: std_logic_vector(11 downto 0);
  signal delay2_q_net_x1: std_logic_vector(71 downto 0);
  signal delay3_q_net_x1: std_logic;
  signal delay4_q_net_x1: std_logic_vector(123 downto 0);
  signal delay_convert_q_net_x6: std_logic;
  signal fft_pol0_done_net: std_logic;
  signal fft_pol0_dv_net_x0: std_logic;
  signal fft_pol0_xk_im_net_x0: std_logic_vector(30 downto 0);
  signal fft_pol0_xk_index_net: std_logic_vector(11 downto 0);
  signal fft_pol0_xk_re_net_x0: std_logic_vector(30 downto 0);
  signal fft_pol1_done_net: std_logic;
  signal fft_pol1_xk_im_net_x0: std_logic_vector(30 downto 0);
  signal fft_pol1_xk_re_net_x0: std_logic_vector(30 downto 0);
  signal logical14_y_net_x15: std_logic;
  signal register3_q_net_x1: std_logic;
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);
  signal xrst_x1: std_logic;
  signal xstart_x1: std_logic;

begin
  ce_1_sg_x580 <= ce_1;
  clk_1_sg_x580 <= clk_1;
  concatenate_y_net_x18 <= data;
  logical14_y_net_x15 <= mrst;
  delay_convert_q_net_x6 <= sync;
  fftor0 <= constant3_op_net_x1;
  fftor1 <= constant1_op_net_x2;
  out_data <= delay4_q_net_x1;
  out_sync <= register3_q_net_x1;
  out_valid <= delay3_q_net_x1;
  xk_index <= delay1_q_net_x1;

  bus_create1_4f50c3e796: entity work.bus_create1_entity_4f50c3e796
    port map (
      in1 => fft_pol0_xk_re_net_x0,
      in2 => fft_pol0_xk_im_net_x0,
      bus_out => concatenate_y_net_x2
    );

  bus_create2_f3076a8d6e: entity work.bus_create1_entity_74c8747f81
    port map (
      in1 => concatenate_y_net_x2,
      in2 => concatenate_y_net_x4,
      bus_out => concatenate_y_net_x5
    );

  bus_create3_d71da8ddf5: entity work.bus_create1_entity_4f50c3e796
    port map (
      in1 => fft_pol1_xk_re_net_x0,
      in2 => fft_pol1_xk_im_net_x0,
      bus_out => concatenate_y_net_x4
    );

  bus_expand_d4648db3a8: entity work.bus_expand_entity_d4648db3a8
    port map (
      bus_in => delay2_q_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  constant1: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant1_op_net_x2
    );

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  constant3: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net_x1
    );

  constant4: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant4_op_net
    );

  create_sync_c968f2d235: entity work.create_sync_entity_c968f2d235
    port map (
      ce_1 => ce_1_sg_x580,
      clk_1 => clk_1_sg_x580,
      sync_in => delay_convert_q_net_x6,
      xdata => concatenate_y_net_x5,
      xdv => fft_pol0_dv_net_x0,
      data_out => delay4_q_net_x1,
      dv_out => delay3_q_net_x1,
      sync_out => register3_q_net_x1
    );

  create_xstart_c17e97ae68: entity work.create_xstart_entity_c17e97ae68
    port map (
      ce_1 => ce_1_sg_x580,
      clk_1 => clk_1_sg_x580,
      data => concatenate_y_net_x18,
      mrst => logical14_y_net_x15,
      sync => delay_convert_q_net_x6,
      xdata_x0 => delay2_q_net_x1,
      xrst_x0 => xrst_x1,
      xstart_x0 => xstart_x1
    );

  delay1: entity work.delay_55777e5be4
    port map (
      ce => ce_1_sg_x580,
      clk => clk_1_sg_x580,
      clr => '0',
      d => fft_pol0_xk_index_net,
      q => delay1_q_net_x1
    );

  fft_pol0: entity work.xlfast_fourier_transform_a4ad93cf9e09abed368f778cd25f8340
    port map (
      ce => ce_1_sg_x580,
      clk => clk_1_sg_x580,
      en => constant4_op_net,
      fwd_inv => constant4_op_net,
      fwd_inv_we => constant4_op_net,
      rst => xrst_x1,
      start => xstart_x1,
      unload => fft_pol0_done_net,
      xn_im => reinterpret3_output_port_net_x0,
      xn_re => reinterpret4_output_port_net_x0,
      done => fft_pol0_done_net,
      dv => fft_pol0_dv_net_x0,
      xk_im => fft_pol0_xk_im_net_x0,
      xk_index => fft_pol0_xk_index_net,
      xk_re => fft_pol0_xk_re_net_x0
    );

  fft_pol1: entity work.xlfast_fourier_transform_a4ad93cf9e09abed368f778cd25f8340
    port map (
      ce => ce_1_sg_x580,
      clk => clk_1_sg_x580,
      en => constant2_op_net,
      fwd_inv => constant2_op_net,
      fwd_inv_we => constant2_op_net,
      rst => xrst_x1,
      start => xstart_x1,
      unload => fft_pol1_done_net,
      xn_im => reinterpret1_output_port_net_x0,
      xn_re => reinterpret2_output_port_net_x0,
      done => fft_pol1_done_net,
      xk_im => fft_pol1_xk_im_net_x0,
      xk_re => fft_pol1_xk_re_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/fine"

entity fine_entity_d92fd9f38e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coarse_chan_sel: in std_logic_vector(9 downto 0); 
    data: in std_logic_vector(71 downto 0); 
    mrst: in std_logic; 
    sync: in std_logic; 
    tvg_en: in std_logic; 
    data_index: out std_logic_vector(19 downto 0); 
    data_out: out std_logic_vector(123 downto 0); 
    fft_dv: out std_logic; 
    fft_or0: out std_logic; 
    fft_or1: out std_logic; 
    snap_128bit: out std_logic_vector(129 downto 0); 
    snap_buffer72: out std_logic_vector(73 downto 0); 
    snap_pfb72: out std_logic_vector(73 downto 0); 
    sync_out: out std_logic
  );
end fine_entity_d92fd9f38e;

architecture structural of fine_entity_d92fd9f38e is
  signal ce_1_sg_x581: std_logic;
  signal clk_1_sg_x581: std_logic;
  signal concat2_y_net: std_logic_vector(127 downto 0);
  signal concat_y_net_x7: std_logic_vector(35 downto 0);
  signal concat_y_net_x8: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x18: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x21: std_logic_vector(73 downto 0);
  signal concatenate_y_net_x22: std_logic_vector(73 downto 0);
  signal concatenate_y_net_x23: std_logic_vector(129 downto 0);
  signal constant1_op_net_x3: std_logic;
  signal constant3_op_net_x2: std_logic;
  signal convert1_dout_net: std_logic_vector(63 downto 0);
  signal convert2_dout_net: std_logic_vector(63 downto 0);
  signal convert6_dout_net: std_logic_vector(127 downto 0);
  signal datao_x2: std_logic_vector(71 downto 0);
  signal datav_x2: std_logic;
  signal delay1_q_net_x0: std_logic_vector(123 downto 0);
  signal delay1_q_net_x1: std_logic_vector(11 downto 0);
  signal delay22_q_net_x2: std_logic;
  signal delay24_q_net_x1: std_logic_vector(71 downto 0);
  signal delay2_q_net: std_logic_vector(123 downto 0);
  signal delay3_q_net_x1: std_logic;
  signal delay4_q_net_x1: std_logic_vector(20 downto 0);
  signal delay4_q_net_x2: std_logic_vector(123 downto 0);
  signal delay4_q_net_x3: std_logic;
  signal delay5_q_net_x2: std_logic;
  signal delay6_q_net_x0: std_logic_vector(19 downto 0);
  signal delay_convert_q_net_x6: std_logic;
  signal delay_dv_q_net_x3: std_logic;
  signal edge_op_y_net_x6: std_logic;
  signal logical14_y_net_x16: std_logic;
  signal mux4_y_net_x0: std_logic_vector(127 downto 0);
  signal mux_y_net_x0: std_logic_vector(19 downto 0);
  signal register3_q_net_x1: std_logic;
  signal register4_q_net_x0: std_logic;
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(35 downto 0);
  signal slice21_y_net_x3: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x581 <= ce_1;
  clk_1_sg_x581 <= clk_1;
  slice21_y_net_x3 <= coarse_chan_sel;
  delay24_q_net_x1 <= data;
  logical14_y_net_x16 <= mrst;
  delay22_q_net_x2 <= sync;
  register4_q_net_x0 <= tvg_en;
  data_index <= delay6_q_net_x0;
  data_out <= delay1_q_net_x0;
  fft_dv <= delay5_q_net_x2;
  fft_or0 <= constant3_op_net_x2;
  fft_or1 <= constant1_op_net_x3;
  snap_128bit <= concatenate_y_net_x23;
  snap_buffer72 <= concatenate_y_net_x21;
  snap_pfb72 <= concatenate_y_net_x22;
  sync_out <= delay4_q_net_x3;

  buffer_f07faed274: entity work.buffer_entity_f07faed274
    port map (
      ce_1 => ce_1_sg_x581,
      clk_1 => clk_1_sg_x581,
      din => delay24_q_net_x1,
      mrst => logical14_y_net_x16,
      sync => delay22_q_net_x2,
      target_x0 => slice21_y_net_x3,
      data => datao_x2,
      dvalid => datav_x2,
      sync_out => edge_op_y_net_x6
    );

  bus_create1_19c2c621ab: entity work.bus_create2_entity_4e455bb1b3
    port map (
      in1 => delay_convert_q_net_x6,
      in2 => concatenate_y_net_x18,
      in3 => delay_dv_q_net_x3,
      bus_out => concatenate_y_net_x21
    );

  bus_create2_8a965a37d1: entity work.bus_create2_entity_4e455bb1b3
    port map (
      in1 => edge_op_y_net_x6,
      in2 => datao_x2,
      in3 => datav_x2,
      bus_out => concatenate_y_net_x22
    );

  bus_create3_4fd647a3c4: entity work.bus_create11_entity_ed14098eb6
    port map (
      in1 => delay4_q_net_x3,
      in2 => mux4_y_net_x0,
      in3 => delay5_q_net_x2,
      bus_out => concatenate_y_net_x23
    );

  bus_create_83736868fc: entity work.bus_create1_entity_3f464d45e8
    port map (
      in1 => concat_y_net_x7,
      in2 => concat_y_net_x8,
      bus_out => concatenate_y_net_x18
    );

  bus_expand1_70a99f462b: entity work.bus_expand1_entity_70a99f462b
    port map (
      bus_in => datao_x2,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  concat2: entity work.concat_17f3248be4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => convert2_dout_net,
      in1 => convert1_dout_net,
      y => concat2_y_net
    );

  convert1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 0,
      din_width => 21,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 64,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x581,
      clk => clk_1_sg_x581,
      clr => '0',
      din => delay4_q_net_x1,
      en => "1",
      dout => convert1_dout_net
    );

  convert2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 0,
      din_width => 20,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 64,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x581,
      clk => clk_1_sg_x581,
      clr => '0',
      din => mux_y_net_x0,
      en => "1",
      dout => convert2_dout_net
    );

  convert6: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 124,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 128,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x581,
      clk => clk_1_sg_x581,
      clr => '0',
      din => delay2_q_net,
      en => "1",
      dout => convert6_dout_net
    );

  delay1: entity work.delay_bbdca7d4e2
    port map (
      ce => ce_1_sg_x581,
      clk => clk_1_sg_x581,
      clr => '0',
      d => delay4_q_net_x2,
      q => delay1_q_net_x0
    );

  delay2: entity work.delay_2940aaa0cf
    port map (
      ce => ce_1_sg_x581,
      clk => clk_1_sg_x581,
      clr => '0',
      d => delay4_q_net_x2,
      q => delay2_q_net
    );

  delay4: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x581,
      clk => clk_1_sg_x581,
      clr => '0',
      d(0) => register3_q_net_x1,
      q(0) => delay4_q_net_x3
    );

  delay5: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x581,
      clk => clk_1_sg_x581,
      clr => '0',
      d(0) => delay3_q_net_x1,
      q(0) => delay5_q_net_x2
    );

  delay6: entity work.delay_a5c036284d
    port map (
      ce => ce_1_sg_x581,
      clk => clk_1_sg_x581,
      clr => '0',
      d => mux_y_net_x0,
      q => delay6_q_net_x0
    );

  indexgen_9d60342707: entity work.indexgen_entity_9d60342707
    port map (
      ce_1 => ce_1_sg_x581,
      clk_1 => clk_1_sg_x581,
      coarse_chan => slice21_y_net_x3,
      xk_index => delay1_q_net_x1,
      index_x0 => mux_y_net_x0,
      offset_x0 => delay4_q_net_x1
    );

  mux4: entity work.mux_6203b36850
    port map (
      ce => ce_1_sg_x581,
      clk => clk_1_sg_x581,
      clr => '0',
      d0 => convert6_dout_net,
      d1 => concat2_y_net,
      sel(0) => register4_q_net_x0,
      y => mux4_y_net_x0
    );

  pfb_fir_async1_179eba1a8c: entity work.pfb_fir_async1_entity_179eba1a8c
    port map (
      ce_1 => ce_1_sg_x581,
      clk_1 => clk_1_sg_x581,
      dv => datav_x2,
      pol1_in1 => reinterpret2_output_port_net_x2,
      pol1_in2 => reinterpret1_output_port_net_x2,
      sync => edge_op_y_net_x6,
      dv_out => delay_dv_q_net_x3,
      pol1_out1 => concat_y_net_x7,
      pol1_out2 => concat_y_net_x8,
      sync_out => delay_convert_q_net_x6
    );

  xilinx_ffts_8d01634063: entity work.xilinx_ffts_entity_8d01634063
    port map (
      ce_1 => ce_1_sg_x581,
      clk_1 => clk_1_sg_x581,
      data => concatenate_y_net_x18,
      mrst => logical14_y_net_x16,
      sync => delay_convert_q_net_x6,
      fftor0 => constant3_op_net_x2,
      fftor1 => constant1_op_net_x3,
      out_data => delay4_q_net_x2,
      out_sync => register3_q_net_x1,
      out_valid => delay3_q_net_x1,
      xk_index => delay1_q_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/gbe0"

entity gbe0_entity_a4d9102883 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    rst: in std_logic; 
    rx_ack: in std_logic; 
    tx_data: in std_logic_vector(63 downto 0); 
    tx_dest_ip: in std_logic_vector(31 downto 0); 
    tx_dest_port: in std_logic_vector(31 downto 0); 
    tx_end_of_frame: in std_logic; 
    tx_valid: in std_logic; 
    convert_rst_x0: out std_logic; 
    convert_rx_ack_x0: out std_logic; 
    convert_rx_overrun_ack_x0: out std_logic; 
    convert_tx_data_x0: out std_logic_vector(63 downto 0); 
    convert_tx_dest_ip_x0: out std_logic_vector(31 downto 0); 
    convert_tx_end_of_frame_x0: out std_logic; 
    convert_tx_port_x0: out std_logic_vector(15 downto 0); 
    convert_tx_valid_x0: out std_logic
  );
end gbe0_entity_a4d9102883;

architecture structural of gbe0_entity_a4d9102883 is
  signal ce_1_sg_x584: std_logic;
  signal clk_1_sg_x584: std_logic;
  signal constant14_op_net_x0: std_logic;
  signal convert_rst_dout_net_x0: std_logic;
  signal convert_rx_ack_dout_net_x0: std_logic;
  signal convert_rx_overrun_ack_dout_net_x0: std_logic;
  signal convert_tx_data_dout_net_x0: std_logic_vector(63 downto 0);
  signal convert_tx_dest_ip_dout_net_x0: std_logic_vector(31 downto 0);
  signal convert_tx_end_of_frame_dout_net_x0: std_logic;
  signal convert_tx_port_dout_net_x0: std_logic_vector(15 downto 0);
  signal convert_tx_valid_dout_net_x0: std_logic;
  signal delay36_q_net_x0: std_logic_vector(31 downto 0);
  signal logical2_y_net_x2: std_logic;
  signal logical3_y_net_x0: std_logic;
  signal register0_q_net_x7: std_logic_vector(31 downto 0);
  signal register0_q_net_x8: std_logic;
  signal register0_q_net_x9: std_logic_vector(63 downto 0);

begin
  ce_1_sg_x584 <= ce_1;
  clk_1_sg_x584 <= clk_1;
  logical3_y_net_x0 <= rst;
  constant14_op_net_x0 <= rx_ack;
  register0_q_net_x9 <= tx_data;
  register0_q_net_x7 <= tx_dest_ip;
  delay36_q_net_x0 <= tx_dest_port;
  register0_q_net_x8 <= tx_end_of_frame;
  logical2_y_net_x2 <= tx_valid;
  convert_rst_x0 <= convert_rst_dout_net_x0;
  convert_rx_ack_x0 <= convert_rx_ack_dout_net_x0;
  convert_rx_overrun_ack_x0 <= convert_rx_overrun_ack_dout_net_x0;
  convert_tx_data_x0 <= convert_tx_data_dout_net_x0;
  convert_tx_dest_ip_x0 <= convert_tx_dest_ip_dout_net_x0;
  convert_tx_end_of_frame_x0 <= convert_tx_end_of_frame_dout_net_x0;
  convert_tx_port_x0 <= convert_tx_port_dout_net_x0;
  convert_tx_valid_x0 <= convert_tx_valid_dout_net_x0;

  convert_rst: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x584,
      clk => clk_1_sg_x584,
      clr => '0',
      din(0) => logical3_y_net_x0,
      en => "1",
      dout(0) => convert_rst_dout_net_x0
    );

  convert_rx_ack: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x584,
      clk => clk_1_sg_x584,
      clr => '0',
      din(0) => constant14_op_net_x0,
      en => "1",
      dout(0) => convert_rx_ack_dout_net_x0
    );

  convert_rx_overrun_ack: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x584,
      clk => clk_1_sg_x584,
      clr => '0',
      din(0) => constant14_op_net_x0,
      en => "1",
      dout(0) => convert_rx_overrun_ack_dout_net_x0
    );

  convert_tx_data: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 64,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 64,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x584,
      clk => clk_1_sg_x584,
      clr => '0',
      din => register0_q_net_x9,
      en => "1",
      dout => convert_tx_data_dout_net_x0
    );

  convert_tx_dest_ip: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 32,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x584,
      clk => clk_1_sg_x584,
      clr => '0',
      din => register0_q_net_x7,
      en => "1",
      dout => convert_tx_dest_ip_dout_net_x0
    );

  convert_tx_end_of_frame: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x584,
      clk => clk_1_sg_x584,
      clr => '0',
      din(0) => register0_q_net_x8,
      en => "1",
      dout(0) => convert_tx_end_of_frame_dout_net_x0
    );

  convert_tx_port: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 32,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x584,
      clk => clk_1_sg_x584,
      clr => '0',
      din => delay36_q_net_x0,
      en => "1",
      dout => convert_tx_port_dout_net_x0
    );

  convert_tx_valid: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x584,
      clk => clk_1_sg_x584,
      clr => '0',
      din(0) => logical2_y_net_x2,
      en => "1",
      dout(0) => convert_tx_valid_dout_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/gbe_err"

entity gbe_err_entity_4ff5b5b3bc is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    discard: in std_logic; 
    eof: in std_logic; 
    rst: in std_logic; 
    valid: in std_logic; 
    err_cnt: out std_logic_vector(31 downto 0); 
    tx_cnt: out std_logic_vector(31 downto 0)
  );
end gbe_err_entity_4ff5b5b3bc;

architecture structural of gbe_err_entity_4ff5b5b3bc is
  signal ce_1_sg_x585: std_logic;
  signal clk_1_sg_x585: std_logic;
  signal constant2_op_net: std_logic_vector(6 downto 0);
  signal delay17_q_net: std_logic;
  signal delay1_q_net: std_logic;
  signal delay2_q_net: std_logic;
  signal delay3_q_net: std_logic;
  signal edge_op_y_net_x3: std_logic;
  signal inverter3_op_net: std_logic;
  signal logical1_y_net: std_logic;
  signal logical2_y_net: std_logic;
  signal logical2_y_net_x3: std_logic;
  signal logical3_y_net: std_logic;
  signal logical4_y_net: std_logic;
  signal logical5_y_net: std_logic;
  signal logical6_y_net: std_logic;
  signal payload_cnt1_op_net_x0: std_logic_vector(31 downto 0);
  signal payload_cnt2_op_net: std_logic_vector(6 downto 0);
  signal payload_cnt_op_net_x0: std_logic_vector(31 downto 0);
  signal register0_q_net_x1: std_logic;
  signal register0_q_net_x9: std_logic;
  signal relational1_op_net: std_logic;

begin
  ce_1_sg_x585 <= ce_1;
  clk_1_sg_x585 <= clk_1;
  register0_q_net_x1 <= discard;
  register0_q_net_x9 <= eof;
  edge_op_y_net_x3 <= rst;
  logical2_y_net_x3 <= valid;
  err_cnt <= payload_cnt1_op_net_x0;
  tx_cnt <= payload_cnt_op_net_x0;

  constant2: entity work.constant_473db002f8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  delay1: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x585,
      clk => clk_1_sg_x585,
      clr => '0',
      d(0) => register0_q_net_x1,
      q(0) => delay1_q_net
    );

  delay17: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x585,
      clk => clk_1_sg_x585,
      clr => '0',
      d(0) => edge_op_y_net_x3,
      q(0) => delay17_q_net
    );

  delay2: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x585,
      clk => clk_1_sg_x585,
      clr => '0',
      d(0) => register0_q_net_x9,
      q(0) => delay2_q_net
    );

  delay3: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x585,
      clk => clk_1_sg_x585,
      clr => '0',
      d(0) => logical2_y_net_x3,
      q(0) => delay3_q_net
    );

  inverter3: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x585,
      clk => clk_1_sg_x585,
      clr => '0',
      ip(0) => delay1_q_net,
      op(0) => inverter3_op_net
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical6_y_net,
      d1(0) => delay3_q_net,
      y(0) => logical1_y_net
    );

  logical2: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical4_y_net,
      d1(0) => logical5_y_net,
      y(0) => logical2_y_net
    );

  logical3: entity work.logical_954ee29728
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter3_op_net,
      d1(0) => delay2_q_net,
      d2(0) => delay3_q_net,
      y(0) => logical3_y_net
    );

  logical4: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay3_q_net,
      d1(0) => delay1_q_net,
      y(0) => logical4_y_net
    );

  logical5: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical1_y_net,
      d1(0) => relational1_op_net,
      y(0) => logical5_y_net
    );

  logical6: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay1_q_net,
      d1(0) => delay2_q_net,
      y(0) => logical6_y_net
    );

  payload_cnt: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_0400b347688ef51a",
      op_arith => xlUnsigned,
      op_width => 32
    )
    port map (
      ce => ce_1_sg_x585,
      clk => clk_1_sg_x585,
      clr => '0',
      en(0) => logical3_y_net,
      rst(0) => delay17_q_net,
      op => payload_cnt_op_net_x0
    );

  payload_cnt1: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_0400b347688ef51a",
      op_arith => xlUnsigned,
      op_width => 32
    )
    port map (
      ce => ce_1_sg_x585,
      clk => clk_1_sg_x585,
      clr => '0',
      en(0) => logical2_y_net,
      rst(0) => delay17_q_net,
      op => payload_cnt1_op_net_x0
    );

  payload_cnt2: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_aeada998ec385fcd",
      op_arith => xlUnsigned,
      op_width => 7
    )
    port map (
      ce => ce_1_sg_x585,
      clk => clk_1_sg_x585,
      clr => '0',
      en(0) => delay3_q_net,
      rst(0) => logical1_y_net,
      op => payload_cnt2_op_net
    );

  relational1: entity work.relational_23065a6aa3
    port map (
      a => payload_cnt2_op_net,
      b => constant2_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/katadc0"

entity katadc0_entity_180325740b is
  port (
    atten0: in std_logic_vector(5 downto 0); 
    atten1: in std_logic_vector(5 downto 0); 
    c09f12_01_katadc0_user_datai0: in std_logic_vector(7 downto 0); 
    c09f12_01_katadc0_user_datai1: in std_logic_vector(7 downto 0); 
    c09f12_01_katadc0_user_datai2: in std_logic_vector(7 downto 0); 
    c09f12_01_katadc0_user_datai3: in std_logic_vector(7 downto 0); 
    c09f12_01_katadc0_user_dataq0: in std_logic_vector(7 downto 0); 
    c09f12_01_katadc0_user_dataq1: in std_logic_vector(7 downto 0); 
    c09f12_01_katadc0_user_dataq2: in std_logic_vector(7 downto 0); 
    c09f12_01_katadc0_user_dataq3: in std_logic_vector(7 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    en0: in std_logic; 
    en1: in std_logic; 
    cast0_x0: out std_logic_vector(13 downto 0); 
    cast1_x0: out std_logic; 
    data0_0: out std_logic_vector(7 downto 0); 
    data0_1: out std_logic_vector(7 downto 0); 
    data0_2: out std_logic_vector(7 downto 0); 
    data0_3: out std_logic_vector(7 downto 0); 
    data1_0: out std_logic_vector(7 downto 0); 
    data1_1: out std_logic_vector(7 downto 0); 
    data1_2: out std_logic_vector(7 downto 0); 
    data1_3: out std_logic_vector(7 downto 0)
  );
end katadc0_entity_180325740b;

architecture structural of katadc0_entity_180325740b is
  signal c09f12_01_katadc0_user_datai0_net_x0: std_logic_vector(7 downto 0);
  signal c09f12_01_katadc0_user_datai1_net_x0: std_logic_vector(7 downto 0);
  signal c09f12_01_katadc0_user_datai2_net_x0: std_logic_vector(7 downto 0);
  signal c09f12_01_katadc0_user_datai3_net_x0: std_logic_vector(7 downto 0);
  signal c09f12_01_katadc0_user_dataq0_net_x0: std_logic_vector(7 downto 0);
  signal c09f12_01_katadc0_user_dataq1_net_x0: std_logic_vector(7 downto 0);
  signal c09f12_01_katadc0_user_dataq2_net_x0: std_logic_vector(7 downto 0);
  signal c09f12_01_katadc0_user_dataq3_net_x0: std_logic_vector(7 downto 0);
  signal cast0_dout_net_x0: std_logic_vector(13 downto 0);
  signal cast1_dout_net_x0: std_logic;
  signal ce_1_sg_x588: std_logic;
  signal changed_op_net: std_logic;
  signal clk_1_sg_x588: std_logic;
  signal con_y_net: std_logic_vector(14 downto 0);
  signal concat0_0_y_net: std_logic_vector(7 downto 0);
  signal concat0_1_y_net: std_logic_vector(7 downto 0);
  signal concat0_2_y_net: std_logic_vector(7 downto 0);
  signal concat0_3_y_net: std_logic_vector(7 downto 0);
  signal concat1_0_y_net: std_logic_vector(7 downto 0);
  signal concat1_1_y_net: std_logic_vector(7 downto 0);
  signal concat1_2_y_net: std_logic_vector(7 downto 0);
  signal concat1_3_y_net: std_logic_vector(7 downto 0);
  signal inv0_0_op_net: std_logic;
  signal inv0_1_op_net: std_logic;
  signal inv0_2_op_net: std_logic;
  signal inv0_3_op_net: std_logic;
  signal inv0_op_net: std_logic_vector(5 downto 0);
  signal inv1_0_op_net: std_logic;
  signal inv1_1_op_net: std_logic;
  signal inv1_2_op_net: std_logic;
  signal inv1_3_op_net: std_logic;
  signal inv1_op_net: std_logic_vector(5 downto 0);
  signal logical10_y_net_x0: std_logic;
  signal logical8_y_net_x0: std_logic;
  signal reg_q_net: std_logic_vector(14 downto 0);
  signal reinterpret0_0_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret0_1_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret0_2_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret0_3_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret1_0_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret1_1_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret1_2_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret1_3_output_port_net_x1: std_logic_vector(7 downto 0);
  signal sign0_0_y_net: std_logic;
  signal sign0_1_y_net: std_logic;
  signal sign0_2_y_net: std_logic;
  signal sign0_3_y_net: std_logic;
  signal sign1_0_y_net: std_logic;
  signal sign1_1_y_net: std_logic;
  signal sign1_2_y_net: std_logic;
  signal sign1_3_y_net: std_logic;
  signal slc0_y_net: std_logic;
  signal slc1_y_net: std_logic_vector(5 downto 0);
  signal slc2_y_net: std_logic;
  signal slc3_y_net: std_logic_vector(5 downto 0);
  signal slc4_y_net: std_logic_vector(13 downto 0);
  signal slice30_y_net_x0: std_logic_vector(5 downto 0);
  signal slice34_y_net_x0: std_logic_vector(5 downto 0);
  signal trigger_op_net: std_logic;
  signal val0_0_y_net: std_logic_vector(6 downto 0);
  signal val0_1_y_net: std_logic_vector(6 downto 0);
  signal val0_2_y_net: std_logic_vector(6 downto 0);
  signal val0_3_y_net: std_logic_vector(6 downto 0);
  signal val1_0_y_net: std_logic_vector(6 downto 0);
  signal val1_1_y_net: std_logic_vector(6 downto 0);
  signal val1_2_y_net: std_logic_vector(6 downto 0);
  signal val1_3_y_net: std_logic_vector(6 downto 0);

begin
  slice30_y_net_x0 <= atten0;
  slice34_y_net_x0 <= atten1;
  c09f12_01_katadc0_user_datai0_net_x0 <= c09f12_01_katadc0_user_datai0;
  c09f12_01_katadc0_user_datai1_net_x0 <= c09f12_01_katadc0_user_datai1;
  c09f12_01_katadc0_user_datai2_net_x0 <= c09f12_01_katadc0_user_datai2;
  c09f12_01_katadc0_user_datai3_net_x0 <= c09f12_01_katadc0_user_datai3;
  c09f12_01_katadc0_user_dataq0_net_x0 <= c09f12_01_katadc0_user_dataq0;
  c09f12_01_katadc0_user_dataq1_net_x0 <= c09f12_01_katadc0_user_dataq1;
  c09f12_01_katadc0_user_dataq2_net_x0 <= c09f12_01_katadc0_user_dataq2;
  c09f12_01_katadc0_user_dataq3_net_x0 <= c09f12_01_katadc0_user_dataq3;
  ce_1_sg_x588 <= ce_1;
  clk_1_sg_x588 <= clk_1;
  logical8_y_net_x0 <= en0;
  logical10_y_net_x0 <= en1;
  cast0_x0 <= cast0_dout_net_x0;
  cast1_x0 <= cast1_dout_net_x0;
  data0_0 <= reinterpret0_0_output_port_net_x1;
  data0_1 <= reinterpret0_1_output_port_net_x1;
  data0_2 <= reinterpret0_2_output_port_net_x1;
  data0_3 <= reinterpret0_3_output_port_net_x1;
  data1_0 <= reinterpret1_0_output_port_net_x1;
  data1_1 <= reinterpret1_1_output_port_net_x1;
  data1_2 <= reinterpret1_2_output_port_net_x1;
  data1_3 <= reinterpret1_3_output_port_net_x1;

  cast0: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 14,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 14,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x588,
      clk => clk_1_sg_x588,
      clr => '0',
      din => slc4_y_net,
      en => "1",
      dout => cast0_dout_net_x0
    );

  cast1: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x588,
      clk => clk_1_sg_x588,
      clr => '0',
      din(0) => changed_op_net,
      en => "1",
      dout(0) => cast1_dout_net_x0
    );

  changed: entity work.relational_5d2bc997de
    port map (
      a => reg_q_net,
      b => con_y_net,
      ce => ce_1_sg_x588,
      clk => clk_1_sg_x588,
      clr => '0',
      op(0) => changed_op_net
    );

  con: entity work.concat_e3f217b04f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => trigger_op_net,
      in1(0) => slc2_y_net,
      in2 => inv1_op_net,
      in3(0) => slc0_y_net,
      in4 => inv0_op_net,
      y => con_y_net
    );

  concat0_0: entity work.concat_83e473517e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => inv0_0_op_net,
      in1 => val0_0_y_net,
      y => concat0_0_y_net
    );

  concat0_1: entity work.concat_83e473517e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => inv0_1_op_net,
      in1 => val0_1_y_net,
      y => concat0_1_y_net
    );

  concat0_2: entity work.concat_83e473517e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => inv0_2_op_net,
      in1 => val0_2_y_net,
      y => concat0_2_y_net
    );

  concat0_3: entity work.concat_83e473517e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => inv0_3_op_net,
      in1 => val0_3_y_net,
      y => concat0_3_y_net
    );

  concat1_0: entity work.concat_83e473517e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => inv1_0_op_net,
      in1 => val1_0_y_net,
      y => concat1_0_y_net
    );

  concat1_1: entity work.concat_83e473517e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => inv1_1_op_net,
      in1 => val1_1_y_net,
      y => concat1_1_y_net
    );

  concat1_2: entity work.concat_83e473517e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => inv1_2_op_net,
      in1 => val1_2_y_net,
      y => concat1_2_y_net
    );

  concat1_3: entity work.concat_83e473517e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => inv1_3_op_net,
      in1 => val1_3_y_net,
      y => concat1_3_y_net
    );

  inv0: entity work.inverter_62c5f03117
    port map (
      ce => ce_1_sg_x588,
      clk => clk_1_sg_x588,
      clr => '0',
      ip => slc1_y_net,
      op => inv0_op_net
    );

  inv0_0: entity work.inverter_e2b989a05e
    port map (
      ce => ce_1_sg_x588,
      clk => clk_1_sg_x588,
      clr => '0',
      ip(0) => sign0_0_y_net,
      op(0) => inv0_0_op_net
    );

  inv0_1: entity work.inverter_e2b989a05e
    port map (
      ce => ce_1_sg_x588,
      clk => clk_1_sg_x588,
      clr => '0',
      ip(0) => sign0_1_y_net,
      op(0) => inv0_1_op_net
    );

  inv0_2: entity work.inverter_e2b989a05e
    port map (
      ce => ce_1_sg_x588,
      clk => clk_1_sg_x588,
      clr => '0',
      ip(0) => sign0_2_y_net,
      op(0) => inv0_2_op_net
    );

  inv0_3: entity work.inverter_e2b989a05e
    port map (
      ce => ce_1_sg_x588,
      clk => clk_1_sg_x588,
      clr => '0',
      ip(0) => sign0_3_y_net,
      op(0) => inv0_3_op_net
    );

  inv1: entity work.inverter_62c5f03117
    port map (
      ce => ce_1_sg_x588,
      clk => clk_1_sg_x588,
      clr => '0',
      ip => slc3_y_net,
      op => inv1_op_net
    );

  inv1_0: entity work.inverter_e2b989a05e
    port map (
      ce => ce_1_sg_x588,
      clk => clk_1_sg_x588,
      clr => '0',
      ip(0) => sign1_0_y_net,
      op(0) => inv1_0_op_net
    );

  inv1_1: entity work.inverter_e2b989a05e
    port map (
      ce => ce_1_sg_x588,
      clk => clk_1_sg_x588,
      clr => '0',
      ip(0) => sign1_1_y_net,
      op(0) => inv1_1_op_net
    );

  inv1_2: entity work.inverter_e2b989a05e
    port map (
      ce => ce_1_sg_x588,
      clk => clk_1_sg_x588,
      clr => '0',
      ip(0) => sign1_2_y_net,
      op(0) => inv1_2_op_net
    );

  inv1_3: entity work.inverter_e2b989a05e
    port map (
      ce => ce_1_sg_x588,
      clk => clk_1_sg_x588,
      clr => '0',
      ip(0) => sign1_3_y_net,
      op(0) => inv1_3_op_net
    );

  reg_x0: entity work.xlregister
    generic map (
      d_width => 15,
      init_value => b"000000000000000"
    )
    port map (
      ce => ce_1_sg_x588,
      clk => clk_1_sg_x588,
      d => con_y_net,
      en => "1",
      rst => "0",
      q => reg_q_net
    );

  reinterpret0_0: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat0_0_y_net,
      output_port => reinterpret0_0_output_port_net_x1
    );

  reinterpret0_1: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat0_1_y_net,
      output_port => reinterpret0_1_output_port_net_x1
    );

  reinterpret0_2: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat0_2_y_net,
      output_port => reinterpret0_2_output_port_net_x1
    );

  reinterpret0_3: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat0_3_y_net,
      output_port => reinterpret0_3_output_port_net_x1
    );

  reinterpret1_0: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat1_0_y_net,
      output_port => reinterpret1_0_output_port_net_x1
    );

  reinterpret1_1: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat1_1_y_net,
      output_port => reinterpret1_1_output_port_net_x1
    );

  reinterpret1_2: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat1_2_y_net,
      output_port => reinterpret1_2_output_port_net_x1
    );

  reinterpret1_3: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat1_3_y_net,
      output_port => reinterpret1_3_output_port_net_x1
    );

  sign0_0: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => c09f12_01_katadc0_user_datai0_net_x0,
      y(0) => sign0_0_y_net
    );

  sign0_1: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => c09f12_01_katadc0_user_datai1_net_x0,
      y(0) => sign0_1_y_net
    );

  sign0_2: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => c09f12_01_katadc0_user_datai2_net_x0,
      y(0) => sign0_2_y_net
    );

  sign0_3: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => c09f12_01_katadc0_user_datai3_net_x0,
      y(0) => sign0_3_y_net
    );

  sign1_0: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => c09f12_01_katadc0_user_dataq0_net_x0,
      y(0) => sign1_0_y_net
    );

  sign1_1: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => c09f12_01_katadc0_user_dataq1_net_x0,
      y(0) => sign1_1_y_net
    );

  sign1_2: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => c09f12_01_katadc0_user_dataq2_net_x0,
      y(0) => sign1_2_y_net
    );

  sign1_3: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => c09f12_01_katadc0_user_dataq3_net_x0,
      y(0) => sign1_3_y_net
    );

  slc0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 1,
      y_width => 1
    )
    port map (
      x(0) => logical8_y_net_x0,
      y(0) => slc0_y_net
    );

  slc1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 5,
      x_width => 6,
      y_width => 6
    )
    port map (
      x => slice30_y_net_x0,
      y => slc1_y_net
    );

  slc2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 1,
      y_width => 1
    )
    port map (
      x(0) => logical10_y_net_x0,
      y(0) => slc2_y_net
    );

  slc3: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 5,
      x_width => 6,
      y_width => 6
    )
    port map (
      x => slice34_y_net_x0,
      y => slc3_y_net
    );

  slc4: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 13,
      x_width => 15,
      y_width => 14
    )
    port map (
      x => reg_q_net,
      y => slc4_y_net
    );

  trigger: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => trigger_op_net
    );

  val0_0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 6,
      x_width => 8,
      y_width => 7
    )
    port map (
      x => c09f12_01_katadc0_user_datai0_net_x0,
      y => val0_0_y_net
    );

  val0_1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 6,
      x_width => 8,
      y_width => 7
    )
    port map (
      x => c09f12_01_katadc0_user_datai1_net_x0,
      y => val0_1_y_net
    );

  val0_2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 6,
      x_width => 8,
      y_width => 7
    )
    port map (
      x => c09f12_01_katadc0_user_datai2_net_x0,
      y => val0_2_y_net
    );

  val0_3: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 6,
      x_width => 8,
      y_width => 7
    )
    port map (
      x => c09f12_01_katadc0_user_datai3_net_x0,
      y => val0_3_y_net
    );

  val1_0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 6,
      x_width => 8,
      y_width => 7
    )
    port map (
      x => c09f12_01_katadc0_user_dataq0_net_x0,
      y => val1_0_y_net
    );

  val1_1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 6,
      x_width => 8,
      y_width => 7
    )
    port map (
      x => c09f12_01_katadc0_user_dataq1_net_x0,
      y => val1_1_y_net
    );

  val1_2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 6,
      x_width => 8,
      y_width => 7
    )
    port map (
      x => c09f12_01_katadc0_user_dataq2_net_x0,
      y => val1_2_y_net
    );

  val1_3: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 6,
      x_width => 8,
      y_width => 7
    )
    port map (
      x => c09f12_01_katadc0_user_dataq3_net_x0,
      y => val1_3_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/leds/Subsystem/led_pulse0/freeze_cntr"

entity freeze_cntr_entity_c607e7b420 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    en: in std_logic; 
    rst: in std_logic; 
    addr: out std_logic_vector(25 downto 0)
  );
end freeze_cntr_entity_c607e7b420;

architecture structural of freeze_cntr_entity_c607e7b420 is
  signal ce_1_sg_x592: std_logic;
  signal clk_1_sg_x592: std_logic;
  signal constant_op_net_x0: std_logic;
  signal counter3_op_net: std_logic_vector(26 downto 0);
  signal edge_op_y_net_x1: std_logic;
  signal enable1_y_net: std_logic;
  signal enable_y_net_x0: std_logic_vector(25 downto 0);
  signal inverter1_op_net: std_logic;
  signal logical5_y_net: std_logic;

begin
  ce_1_sg_x592 <= ce_1;
  clk_1_sg_x592 <= clk_1;
  constant_op_net_x0 <= en;
  edge_op_y_net_x1 <= rst;
  addr <= enable_y_net_x0;

  counter3: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_0c0d4ef78e6c6aa9",
      op_arith => xlUnsigned,
      op_width => 27
    )
    port map (
      ce => ce_1_sg_x592,
      clk => clk_1_sg_x592,
      clr => '0',
      en(0) => logical5_y_net,
      rst(0) => edge_op_y_net_x1,
      op => counter3_op_net
    );

  enable: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 25,
      x_width => 27,
      y_width => 26
    )
    port map (
      x => counter3_op_net,
      y => enable_y_net_x0
    );

  enable1: entity work.xlslice
    generic map (
      new_lsb => 26,
      new_msb => 26,
      x_width => 27,
      y_width => 1
    )
    port map (
      x => counter3_op_net,
      y(0) => enable1_y_net
    );

  inverter1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x592,
      clk => clk_1_sg_x592,
      clr => '0',
      ip(0) => enable1_y_net,
      op(0) => inverter1_op_net
    );

  logical5: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => constant_op_net_x0,
      d1(0) => inverter1_op_net,
      y(0) => logical5_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/leds/Subsystem/led_pulse0"

entity led_pulse0_entity_bdaae4e684 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic; 
    counter1_x0: out std_logic_vector(7 downto 0); 
    counter2_x0: out std_logic_vector(8 downto 0); 
    edge_detect1: out std_logic; 
    freeze_cntr: out std_logic_vector(25 downto 0); 
    out1: out std_logic; 
    slice_x0: out std_logic
  );
end led_pulse0_entity_bdaae4e684;

architecture structural of led_pulse0_entity_bdaae4e684 is
  signal ce_1_sg_x593: std_logic;
  signal clk_1_sg_x593: std_logic;
  signal constant_op_net_x0: std_logic;
  signal counter1_op_net_x0: std_logic_vector(7 downto 0);
  signal counter2_op_net_x0: std_logic_vector(8 downto 0);
  signal counter_op_net: std_logic_vector(7 downto 0);
  signal edge_op_y_net_x0: std_logic;
  signal edge_op_y_net_x2: std_logic;
  signal enable_y_net_x1: std_logic_vector(25 downto 0);
  signal inverter_op_net: std_logic;
  signal register_q_net_x1: std_logic;
  signal relational_op_net_x0: std_logic;
  signal slice1_y_net_x0: std_logic;
  signal slice_y_net_x0: std_logic;

begin
  ce_1_sg_x593 <= ce_1;
  clk_1_sg_x593 <= clk_1;
  register_q_net_x1 <= in1;
  counter1_x0 <= counter1_op_net_x0;
  counter2_x0 <= counter2_op_net_x0;
  edge_detect1 <= edge_op_y_net_x2;
  freeze_cntr <= enable_y_net_x1;
  out1 <= relational_op_net_x0;
  slice_x0 <= slice_y_net_x0;

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net_x0
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_4df07e1ba68d0c6e",
      op_arith => xlUnsigned,
      op_width => 8
    )
    port map (
      ce => ce_1_sg_x593,
      clk => clk_1_sg_x593,
      clr => '0',
      en => "1",
      rst => "0",
      op => counter_op_net
    );

  counter1: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_d98da069fc1111dd",
      op_arith => xlUnsigned,
      op_width => 8
    )
    port map (
      ce => ce_1_sg_x593,
      clk => clk_1_sg_x593,
      clr => '0',
      en(0) => edge_op_y_net_x0,
      rst(0) => edge_op_y_net_x2,
      up(0) => inverter_op_net,
      op => counter1_op_net_x0
    );

  counter2: entity work.xlcounter_limit_c09f12_01
    generic map (
      cnt_15_0 => 511,
      cnt_31_16 => 0,
      cnt_47_32 => 0,
      cnt_63_48 => 0,
      core_name0 => "cntr_11_0_bc43ff9b02fd1262",
      count_limited => 0,
      op_arith => xlUnsigned,
      op_width => 9
    )
    port map (
      ce => ce_1_sg_x593,
      clk => clk_1_sg_x593,
      clr => '0',
      en(0) => edge_op_y_net_x0,
      rst(0) => edge_op_y_net_x2,
      op => counter2_op_net_x0
    );

  edge_detect1_44b509942d: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x593,
      clk_1 => clk_1_sg_x593,
      in_x0 => register_q_net_x1,
      out_x0 => edge_op_y_net_x2
    );

  edge_detect_b79e32776d: entity work.edge_detect_entity_773f207806
    port map (
      ce_1 => ce_1_sg_x593,
      clk_1 => clk_1_sg_x593,
      in_x0 => slice1_y_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  freeze_cntr_c607e7b420: entity work.freeze_cntr_entity_c607e7b420
    port map (
      ce_1 => ce_1_sg_x593,
      clk_1 => clk_1_sg_x593,
      en => constant_op_net_x0,
      rst => edge_op_y_net_x2,
      addr => enable_y_net_x1
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x593,
      clk => clk_1_sg_x593,
      clr => '0',
      ip(0) => slice_y_net_x0,
      op(0) => inverter_op_net
    );

  relational: entity work.relational_ba5c6f1dfc
    port map (
      a => counter_op_net,
      b => counter1_op_net_x0,
      ce => ce_1_sg_x593,
      clk => clk_1_sg_x593,
      clr => '0',
      op(0) => relational_op_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 8,
      x_width => 9,
      y_width => 1
    )
    port map (
      x => counter2_op_net_x0,
      y(0) => slice_y_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 17,
      new_msb => 17,
      x_width => 26,
      y_width => 1
    )
    port map (
      x => enable_y_net_x1,
      y(0) => slice1_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/leds/Subsystem"

entity subsystem_entity_b66990d278 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    rst: in std_logic; 
    led_pulse0: out std_logic_vector(7 downto 0); 
    led_pulse0_x0: out std_logic_vector(8 downto 0); 
    led_pulse0_x1: out std_logic; 
    led_pulse0_x2: out std_logic; 
    led_pulse0_x3: out std_logic_vector(25 downto 0); 
    led_pulse1: out std_logic_vector(7 downto 0); 
    led_pulse1_x0: out std_logic_vector(8 downto 0); 
    led_pulse1_x1: out std_logic; 
    led_pulse1_x2: out std_logic; 
    led_pulse1_x3: out std_logic_vector(25 downto 0); 
    led_pulse2: out std_logic_vector(7 downto 0); 
    led_pulse2_x0: out std_logic_vector(8 downto 0); 
    led_pulse2_x1: out std_logic; 
    led_pulse2_x2: out std_logic; 
    led_pulse2_x3: out std_logic_vector(25 downto 0); 
    led_pulse3: out std_logic_vector(7 downto 0); 
    led_pulse3_x0: out std_logic_vector(8 downto 0); 
    led_pulse3_x1: out std_logic; 
    led_pulse3_x2: out std_logic; 
    led_pulse3_x3: out std_logic_vector(25 downto 0); 
    led_pulse4: out std_logic_vector(7 downto 0); 
    led_pulse4_x0: out std_logic_vector(8 downto 0); 
    led_pulse4_x1: out std_logic; 
    led_pulse4_x2: out std_logic; 
    led_pulse4_x3: out std_logic_vector(25 downto 0); 
    led_pulse5: out std_logic_vector(7 downto 0); 
    led_pulse5_x0: out std_logic_vector(8 downto 0); 
    led_pulse5_x1: out std_logic; 
    led_pulse5_x2: out std_logic; 
    led_pulse5_x3: out std_logic_vector(25 downto 0); 
    led_pulse6: out std_logic_vector(7 downto 0); 
    led_pulse6_x0: out std_logic_vector(8 downto 0); 
    led_pulse6_x1: out std_logic; 
    led_pulse6_x2: out std_logic; 
    led_pulse6_x3: out std_logic_vector(25 downto 0); 
    led_pulse7: out std_logic_vector(7 downto 0); 
    led_pulse7_x0: out std_logic_vector(8 downto 0); 
    led_pulse7_x1: out std_logic; 
    led_pulse7_x2: out std_logic; 
    led_pulse7_x3: out std_logic_vector(25 downto 0); 
    out1: out std_logic; 
    out2: out std_logic; 
    out3: out std_logic; 
    out4: out std_logic; 
    out5: out std_logic; 
    out6: out std_logic; 
    out7: out std_logic; 
    out8: out std_logic
  );
end subsystem_entity_b66990d278;

architecture structural of subsystem_entity_b66990d278 is
  signal assert_dout_net: std_logic;
  signal ce_1_sg_x622: std_logic;
  signal clk_1_sg_x622: std_logic;
  signal counter1_op_net_x10: std_logic_vector(7 downto 0);
  signal counter1_op_net_x11: std_logic_vector(7 downto 0);
  signal counter1_op_net_x12: std_logic_vector(7 downto 0);
  signal counter1_op_net_x13: std_logic_vector(7 downto 0);
  signal counter1_op_net_x14: std_logic_vector(7 downto 0);
  signal counter1_op_net_x15: std_logic_vector(7 downto 0);
  signal counter1_op_net_x8: std_logic_vector(7 downto 0);
  signal counter1_op_net_x9: std_logic_vector(7 downto 0);
  signal counter2_op_net_x10: std_logic_vector(8 downto 0);
  signal counter2_op_net_x11: std_logic_vector(8 downto 0);
  signal counter2_op_net_x12: std_logic_vector(8 downto 0);
  signal counter2_op_net_x13: std_logic_vector(8 downto 0);
  signal counter2_op_net_x14: std_logic_vector(8 downto 0);
  signal counter2_op_net_x15: std_logic_vector(8 downto 0);
  signal counter2_op_net_x8: std_logic_vector(8 downto 0);
  signal counter2_op_net_x9: std_logic_vector(8 downto 0);
  signal counter_op_net: std_logic_vector(23 downto 0);
  signal edge_op_y_net_x0: std_logic;
  signal edge_op_y_net_x10: std_logic;
  signal edge_op_y_net_x11: std_logic;
  signal edge_op_y_net_x12: std_logic;
  signal edge_op_y_net_x13: std_logic;
  signal edge_op_y_net_x14: std_logic;
  signal edge_op_y_net_x15: std_logic;
  signal edge_op_y_net_x16: std_logic;
  signal edge_op_y_net_x17: std_logic;
  signal enable_y_net_x10: std_logic_vector(25 downto 0);
  signal enable_y_net_x11: std_logic_vector(25 downto 0);
  signal enable_y_net_x12: std_logic_vector(25 downto 0);
  signal enable_y_net_x13: std_logic_vector(25 downto 0);
  signal enable_y_net_x14: std_logic_vector(25 downto 0);
  signal enable_y_net_x15: std_logic_vector(25 downto 0);
  signal enable_y_net_x16: std_logic_vector(25 downto 0);
  signal enable_y_net_x9: std_logic_vector(25 downto 0);
  signal logical14_y_net_x17: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical2_y_net_x1: std_logic;
  signal logical3_y_net_x1: std_logic;
  signal logical4_y_net_x1: std_logic;
  signal logical5_y_net_x1: std_logic;
  signal logical6_y_net_x1: std_logic;
  signal register10_q_net: std_logic;
  signal register11_q_net: std_logic;
  signal register12_q_net: std_logic;
  signal register13_q_net: std_logic;
  signal register14_q_net: std_logic;
  signal register1_q_net: std_logic;
  signal register2_q_net: std_logic;
  signal register3_q_net: std_logic;
  signal register4_q_net: std_logic;
  signal register5_q_net: std_logic;
  signal register6_q_net: std_logic;
  signal register7_q_net_x1: std_logic;
  signal register9_q_net: std_logic;
  signal register_q_net_x1: std_logic;
  signal relational_op_net_x10: std_logic;
  signal relational_op_net_x11: std_logic;
  signal relational_op_net_x12: std_logic;
  signal relational_op_net_x13: std_logic;
  signal relational_op_net_x14: std_logic;
  signal relational_op_net_x15: std_logic;
  signal relational_op_net_x8: std_logic;
  signal relational_op_net_x9: std_logic;
  signal slice2_y_net_x0: std_logic;
  signal slice_y_net_x10: std_logic;
  signal slice_y_net_x11: std_logic;
  signal slice_y_net_x12: std_logic;
  signal slice_y_net_x13: std_logic;
  signal slice_y_net_x14: std_logic;
  signal slice_y_net_x15: std_logic;
  signal slice_y_net_x8: std_logic;
  signal slice_y_net_x9: std_logic;

begin
  ce_1_sg_x622 <= ce_1;
  clk_1_sg_x622 <= clk_1;
  logical14_y_net_x17 <= rst;
  led_pulse0 <= counter1_op_net_x8;
  led_pulse0_x0 <= counter2_op_net_x8;
  led_pulse0_x1 <= slice_y_net_x8;
  led_pulse0_x2 <= edge_op_y_net_x10;
  led_pulse0_x3 <= enable_y_net_x9;
  led_pulse1 <= counter1_op_net_x9;
  led_pulse1_x0 <= counter2_op_net_x9;
  led_pulse1_x1 <= slice_y_net_x9;
  led_pulse1_x2 <= edge_op_y_net_x11;
  led_pulse1_x3 <= enable_y_net_x10;
  led_pulse2 <= counter1_op_net_x10;
  led_pulse2_x0 <= counter2_op_net_x10;
  led_pulse2_x1 <= slice_y_net_x10;
  led_pulse2_x2 <= edge_op_y_net_x12;
  led_pulse2_x3 <= enable_y_net_x11;
  led_pulse3 <= counter1_op_net_x11;
  led_pulse3_x0 <= counter2_op_net_x11;
  led_pulse3_x1 <= slice_y_net_x11;
  led_pulse3_x2 <= edge_op_y_net_x13;
  led_pulse3_x3 <= enable_y_net_x12;
  led_pulse4 <= counter1_op_net_x12;
  led_pulse4_x0 <= counter2_op_net_x12;
  led_pulse4_x1 <= slice_y_net_x12;
  led_pulse4_x2 <= edge_op_y_net_x14;
  led_pulse4_x3 <= enable_y_net_x13;
  led_pulse5 <= counter1_op_net_x13;
  led_pulse5_x0 <= counter2_op_net_x13;
  led_pulse5_x1 <= slice_y_net_x13;
  led_pulse5_x2 <= edge_op_y_net_x15;
  led_pulse5_x3 <= enable_y_net_x14;
  led_pulse6 <= counter1_op_net_x14;
  led_pulse6_x0 <= counter2_op_net_x14;
  led_pulse6_x1 <= slice_y_net_x14;
  led_pulse6_x2 <= edge_op_y_net_x16;
  led_pulse6_x3 <= enable_y_net_x15;
  led_pulse7 <= counter1_op_net_x15;
  led_pulse7_x0 <= counter2_op_net_x15;
  led_pulse7_x1 <= slice_y_net_x15;
  led_pulse7_x2 <= edge_op_y_net_x17;
  led_pulse7_x3 <= enable_y_net_x16;
  out1 <= relational_op_net_x8;
  out2 <= relational_op_net_x9;
  out3 <= relational_op_net_x10;
  out4 <= relational_op_net_x11;
  out5 <= relational_op_net_x12;
  out6 <= relational_op_net_x13;
  out7 <= relational_op_net_x14;
  out8 <= relational_op_net_x15;

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 1,
      dout_width => 1
    )
    port map (
      din(0) => register9_q_net,
      dout(0) => assert_dout_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_48e1762367ed2904",
      op_arith => xlUnsigned,
      op_width => 24
    )
    port map (
      ce => ce_1_sg_x622,
      clk => clk_1_sg_x622,
      clr => '0',
      en => "1",
      rst(0) => logical14_y_net_x17,
      op => counter_op_net
    );

  edge_detect1_15766d8c71: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x622,
      clk_1 => clk_1_sg_x622,
      in_x0 => slice2_y_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  led_pulse0_bdaae4e684: entity work.led_pulse0_entity_bdaae4e684
    port map (
      ce_1 => ce_1_sg_x622,
      clk_1 => clk_1_sg_x622,
      in1 => register_q_net_x1,
      counter1_x0 => counter1_op_net_x8,
      counter2_x0 => counter2_op_net_x8,
      edge_detect1 => edge_op_y_net_x10,
      freeze_cntr => enable_y_net_x9,
      out1 => relational_op_net_x8,
      slice_x0 => slice_y_net_x8
    );

  led_pulse1_0ba2b60c80: entity work.led_pulse0_entity_bdaae4e684
    port map (
      ce_1 => ce_1_sg_x622,
      clk_1 => clk_1_sg_x622,
      in1 => logical1_y_net_x1,
      counter1_x0 => counter1_op_net_x9,
      counter2_x0 => counter2_op_net_x9,
      edge_detect1 => edge_op_y_net_x11,
      freeze_cntr => enable_y_net_x10,
      out1 => relational_op_net_x9,
      slice_x0 => slice_y_net_x9
    );

  led_pulse2_63cc5eb628: entity work.led_pulse0_entity_bdaae4e684
    port map (
      ce_1 => ce_1_sg_x622,
      clk_1 => clk_1_sg_x622,
      in1 => logical2_y_net_x1,
      counter1_x0 => counter1_op_net_x10,
      counter2_x0 => counter2_op_net_x10,
      edge_detect1 => edge_op_y_net_x12,
      freeze_cntr => enable_y_net_x11,
      out1 => relational_op_net_x10,
      slice_x0 => slice_y_net_x10
    );

  led_pulse3_e1b5f78b44: entity work.led_pulse0_entity_bdaae4e684
    port map (
      ce_1 => ce_1_sg_x622,
      clk_1 => clk_1_sg_x622,
      in1 => logical3_y_net_x1,
      counter1_x0 => counter1_op_net_x11,
      counter2_x0 => counter2_op_net_x11,
      edge_detect1 => edge_op_y_net_x13,
      freeze_cntr => enable_y_net_x12,
      out1 => relational_op_net_x11,
      slice_x0 => slice_y_net_x11
    );

  led_pulse4_6b7917784d: entity work.led_pulse0_entity_bdaae4e684
    port map (
      ce_1 => ce_1_sg_x622,
      clk_1 => clk_1_sg_x622,
      in1 => logical4_y_net_x1,
      counter1_x0 => counter1_op_net_x12,
      counter2_x0 => counter2_op_net_x12,
      edge_detect1 => edge_op_y_net_x14,
      freeze_cntr => enable_y_net_x13,
      out1 => relational_op_net_x12,
      slice_x0 => slice_y_net_x12
    );

  led_pulse5_cfdaed9c52: entity work.led_pulse0_entity_bdaae4e684
    port map (
      ce_1 => ce_1_sg_x622,
      clk_1 => clk_1_sg_x622,
      in1 => logical5_y_net_x1,
      counter1_x0 => counter1_op_net_x13,
      counter2_x0 => counter2_op_net_x13,
      edge_detect1 => edge_op_y_net_x15,
      freeze_cntr => enable_y_net_x14,
      out1 => relational_op_net_x13,
      slice_x0 => slice_y_net_x13
    );

  led_pulse6_5fc967cbcc: entity work.led_pulse0_entity_bdaae4e684
    port map (
      ce_1 => ce_1_sg_x622,
      clk_1 => clk_1_sg_x622,
      in1 => logical6_y_net_x1,
      counter1_x0 => counter1_op_net_x14,
      counter2_x0 => counter2_op_net_x14,
      edge_detect1 => edge_op_y_net_x16,
      freeze_cntr => enable_y_net_x15,
      out1 => relational_op_net_x14,
      slice_x0 => slice_y_net_x14
    );

  led_pulse7_496a865472: entity work.led_pulse0_entity_bdaae4e684
    port map (
      ce_1 => ce_1_sg_x622,
      clk_1 => clk_1_sg_x622,
      in1 => register7_q_net_x1,
      counter1_x0 => counter1_op_net_x15,
      counter2_x0 => counter2_op_net_x15,
      edge_detect1 => edge_op_y_net_x17,
      freeze_cntr => enable_y_net_x16,
      out1 => relational_op_net_x15,
      slice_x0 => slice_y_net_x15
    );

  logical1: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register9_q_net,
      d1(0) => register1_q_net,
      y(0) => logical1_y_net_x1
    );

  logical2: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register10_q_net,
      d1(0) => register2_q_net,
      y(0) => logical2_y_net_x1
    );

  logical3: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register11_q_net,
      d1(0) => register3_q_net,
      y(0) => logical3_y_net_x1
    );

  logical4: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register12_q_net,
      d1(0) => register4_q_net,
      y(0) => logical4_y_net_x1
    );

  logical5: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register13_q_net,
      d1(0) => register5_q_net,
      y(0) => logical5_y_net_x1
    );

  logical6: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register14_q_net,
      d1(0) => register6_q_net,
      y(0) => logical6_y_net_x1
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x622,
      clk => clk_1_sg_x622,
      d(0) => register_q_net_x1,
      en(0) => edge_op_y_net_x0,
      rst(0) => logical14_y_net_x17,
      q(0) => register1_q_net
    );

  register10: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x622,
      clk => clk_1_sg_x622,
      d(0) => register11_q_net,
      en(0) => edge_op_y_net_x0,
      rst(0) => logical14_y_net_x17,
      q(0) => register10_q_net
    );

  register11: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x622,
      clk => clk_1_sg_x622,
      d(0) => register12_q_net,
      en(0) => edge_op_y_net_x0,
      rst(0) => logical14_y_net_x17,
      q(0) => register11_q_net
    );

  register12: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x622,
      clk => clk_1_sg_x622,
      d(0) => register13_q_net,
      en(0) => edge_op_y_net_x0,
      rst(0) => logical14_y_net_x17,
      q(0) => register12_q_net
    );

  register13: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x622,
      clk => clk_1_sg_x622,
      d(0) => register14_q_net,
      en(0) => edge_op_y_net_x0,
      rst(0) => logical14_y_net_x17,
      q(0) => register13_q_net
    );

  register14: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x622,
      clk => clk_1_sg_x622,
      d(0) => register7_q_net_x1,
      en(0) => edge_op_y_net_x0,
      rst(0) => logical14_y_net_x17,
      q(0) => register14_q_net
    );

  register2: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x622,
      clk => clk_1_sg_x622,
      d(0) => register1_q_net,
      en(0) => edge_op_y_net_x0,
      rst(0) => logical14_y_net_x17,
      q(0) => register2_q_net
    );

  register3: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x622,
      clk => clk_1_sg_x622,
      d(0) => register2_q_net,
      en(0) => edge_op_y_net_x0,
      rst(0) => logical14_y_net_x17,
      q(0) => register3_q_net
    );

  register4: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x622,
      clk => clk_1_sg_x622,
      d(0) => register3_q_net,
      en(0) => edge_op_y_net_x0,
      rst(0) => logical14_y_net_x17,
      q(0) => register4_q_net
    );

  register5: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x622,
      clk => clk_1_sg_x622,
      d(0) => register4_q_net,
      en(0) => edge_op_y_net_x0,
      rst(0) => logical14_y_net_x17,
      q(0) => register5_q_net
    );

  register6: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x622,
      clk => clk_1_sg_x622,
      d(0) => register5_q_net,
      en(0) => edge_op_y_net_x0,
      rst(0) => logical14_y_net_x17,
      q(0) => register6_q_net
    );

  register7: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x622,
      clk => clk_1_sg_x622,
      d(0) => register6_q_net,
      en(0) => edge_op_y_net_x0,
      rst(0) => logical14_y_net_x17,
      q(0) => register7_q_net_x1
    );

  register9: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x622,
      clk => clk_1_sg_x622,
      d(0) => register10_q_net,
      en(0) => edge_op_y_net_x0,
      rst(0) => logical14_y_net_x17,
      q(0) => register9_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"1"
    )
    port map (
      ce => ce_1_sg_x622,
      clk => clk_1_sg_x622,
      d(0) => assert_dout_net,
      en(0) => edge_op_y_net_x0,
      rst(0) => logical14_y_net_x17,
      q(0) => register_q_net_x1
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 23,
      new_msb => 23,
      x_width => 24,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice2_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/leds/pulse_ext/posedge"

entity posedge_entity_8c9b4fc2fb is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end posedge_entity_8c9b4fc2fb;

architecture structural of posedge_entity_8c9b4fc2fb is
  signal ce_1_sg_x623: std_logic;
  signal clk_1_sg_x623: std_logic;
  signal delay_q_net: std_logic;
  signal inverter_op_net: std_logic;
  signal logical17_y_net_x0: std_logic;
  signal logical_y_net_x0: std_logic;

begin
  ce_1_sg_x623 <= ce_1;
  clk_1_sg_x623 <= clk_1;
  logical17_y_net_x0 <= in_x0;
  out_x0 <= logical_y_net_x0;

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x623,
      clk => clk_1_sg_x623,
      d(0) => logical17_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_q_net
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x623,
      clk => clk_1_sg_x623,
      clr => '0',
      ip(0) => delay_q_net,
      op(0) => inverter_op_net
    );

  logical: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => logical17_y_net_x0,
      y(0) => logical_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/leds/pulse_ext"

entity pulse_ext_entity_39d1b29fcf is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end pulse_ext_entity_39d1b29fcf;

architecture structural of pulse_ext_entity_39d1b29fcf is
  signal ce_1_sg_x624: std_logic;
  signal clk_1_sg_x624: std_logic;
  signal constant5_op_net: std_logic_vector(24 downto 0);
  signal counter3_op_net: std_logic_vector(24 downto 0);
  signal logical17_y_net_x1: std_logic;
  signal logical_y_net_x0: std_logic;
  signal relational5_op_net_x0: std_logic;

begin
  ce_1_sg_x624 <= ce_1;
  clk_1_sg_x624 <= clk_1;
  logical17_y_net_x1 <= in_x0;
  out_x0 <= relational5_op_net_x0;

  constant5: entity work.constant_2ae71e3b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant5_op_net
    );

  counter3: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_5175c845ca556d8f",
      op_arith => xlUnsigned,
      op_width => 25
    )
    port map (
      ce => ce_1_sg_x624,
      clk => clk_1_sg_x624,
      clr => '0',
      en(0) => relational5_op_net_x0,
      rst(0) => logical_y_net_x0,
      op => counter3_op_net
    );

  posedge_8c9b4fc2fb: entity work.posedge_entity_8c9b4fc2fb
    port map (
      ce_1 => ce_1_sg_x624,
      clk_1 => clk_1_sg_x624,
      in_x0 => logical17_y_net_x1,
      out_x0 => logical_y_net_x0
    );

  relational5: entity work.relational_487ac75be9
    port map (
      a => counter3_op_net,
      b => constant5_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational5_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/leds/pulse_ext2"

entity pulse_ext2_entity_5b77244ab9 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end pulse_ext2_entity_5b77244ab9;

architecture structural of pulse_ext2_entity_5b77244ab9 is
  signal ce_1_sg_x628: std_logic;
  signal clk_1_sg_x628: std_logic;
  signal constant5_op_net: std_logic_vector(30 downto 0);
  signal counter3_op_net: std_logic_vector(30 downto 0);
  signal logical1_y_net_x1: std_logic;
  signal logical_y_net_x0: std_logic;
  signal relational5_op_net_x0: std_logic;

begin
  ce_1_sg_x628 <= ce_1;
  clk_1_sg_x628 <= clk_1;
  logical1_y_net_x1 <= in_x0;
  out_x0 <= relational5_op_net_x0;

  constant5: entity work.constant_33835d3375
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant5_op_net
    );

  counter3: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_9cad7c433fbdcec9",
      op_arith => xlUnsigned,
      op_width => 31
    )
    port map (
      ce => ce_1_sg_x628,
      clk => clk_1_sg_x628,
      clr => '0',
      en(0) => relational5_op_net_x0,
      rst(0) => logical_y_net_x0,
      op => counter3_op_net
    );

  posedge_7efca3d8a1: entity work.posedge_entity_8c9b4fc2fb
    port map (
      ce_1 => ce_1_sg_x628,
      clk_1 => clk_1_sg_x628,
      in_x0 => logical1_y_net_x1,
      out_x0 => logical_y_net_x0
    );

  relational5: entity work.relational_d3a37482f6
    port map (
      a => counter3_op_net,
      b => constant5_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational5_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/leds/roach_gpioa0"

entity roach_gpioa0_entity_f5eb6eeb90 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    gpio_out: in std_logic; 
    convert_x0: out std_logic
  );
end roach_gpioa0_entity_f5eb6eeb90;

architecture structural of roach_gpioa0_entity_f5eb6eeb90 is
  signal ce_1_sg_x631: std_logic;
  signal clk_1_sg_x631: std_logic;
  signal convert_dout_net_x0: std_logic;
  signal mux_y_net_x0: std_logic;

begin
  ce_1_sg_x631 <= ce_1;
  clk_1_sg_x631 <= clk_1;
  mux_y_net_x0 <= gpio_out;
  convert_x0 <= convert_dout_net_x0;

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x631,
      clk => clk_1_sg_x631,
      clr => '0',
      din(0) => mux_y_net_x0,
      en => "1",
      dout(0) => convert_dout_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/leds/roach_gpioa_oe"

entity roach_gpioa_oe_entity_be1a2cf1d1 is
  port (
    gpio_out: in std_logic; 
    convert_x0: out std_logic
  );
end roach_gpioa_oe_entity_be1a2cf1d1;

architecture structural of roach_gpioa_oe_entity_be1a2cf1d1 is
  signal constant_op_net_x0: std_logic;
  signal convert_dout_net_x0: std_logic;

begin
  constant_op_net_x0 <= gpio_out;
  convert_x0 <= convert_dout_net_x0;

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => '1',
      clk => '1',
      clr => '0',
      din(0) => constant_op_net_x0,
      en => "1",
      dout(0) => convert_dout_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/leds/roach_led0"

entity roach_led0_entity_be9a3489ac is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    gpio_out: in std_logic; 
    convert_x0: out std_logic
  );
end roach_led0_entity_be9a3489ac;

architecture structural of roach_led0_entity_be9a3489ac is
  signal ce_1_sg_x639: std_logic;
  signal clk_1_sg_x639: std_logic;
  signal convert_dout_net_x0: std_logic;
  signal inverter2_op_net_x0: std_logic;

begin
  ce_1_sg_x639 <= ce_1;
  clk_1_sg_x639 <= clk_1;
  inverter2_op_net_x0 <= gpio_out;
  convert_x0 <= convert_dout_net_x0;

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x639,
      clk => clk_1_sg_x639,
      clr => '0',
      din(0) => inverter2_op_net_x0,
      en => "1",
      dout(0) => convert_dout_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/leds"

entity leds_entity_7bfe27f09c is
  port (
    adc_en0: in std_logic; 
    adc_en1: in std_logic; 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    comms: in std_logic; 
    fancy_en: in std_logic; 
    or0: in std_logic; 
    or1: in std_logic; 
    pps: in std_logic; 
    rst: in std_logic; 
    sync_led: in std_logic; 
    warning: in std_logic; 
    roach_gpioa0: out std_logic; 
    roach_gpioa1: out std_logic; 
    roach_gpioa2: out std_logic; 
    roach_gpioa3: out std_logic; 
    roach_gpioa4: out std_logic; 
    roach_gpioa5: out std_logic; 
    roach_gpioa6: out std_logic; 
    roach_gpioa7: out std_logic; 
    roach_gpioa_oe: out std_logic; 
    roach_led0: out std_logic; 
    roach_led1: out std_logic; 
    roach_led2: out std_logic; 
    roach_led3: out std_logic; 
    subsystem: out std_logic_vector(7 downto 0); 
    subsystem_x0: out std_logic_vector(8 downto 0); 
    subsystem_x1: out std_logic; 
    subsystem_x10: out std_logic_vector(25 downto 0); 
    subsystem_x11: out std_logic_vector(7 downto 0); 
    subsystem_x12: out std_logic_vector(8 downto 0); 
    subsystem_x13: out std_logic; 
    subsystem_x14: out std_logic; 
    subsystem_x15: out std_logic; 
    subsystem_x16: out std_logic_vector(25 downto 0); 
    subsystem_x17: out std_logic_vector(7 downto 0); 
    subsystem_x18: out std_logic_vector(8 downto 0); 
    subsystem_x19: out std_logic; 
    subsystem_x2: out std_logic; 
    subsystem_x20: out std_logic; 
    subsystem_x21: out std_logic; 
    subsystem_x22: out std_logic_vector(25 downto 0); 
    subsystem_x23: out std_logic_vector(7 downto 0); 
    subsystem_x24: out std_logic_vector(8 downto 0); 
    subsystem_x25: out std_logic; 
    subsystem_x26: out std_logic; 
    subsystem_x27: out std_logic; 
    subsystem_x28: out std_logic_vector(25 downto 0); 
    subsystem_x29: out std_logic_vector(7 downto 0); 
    subsystem_x3: out std_logic; 
    subsystem_x30: out std_logic_vector(8 downto 0); 
    subsystem_x31: out std_logic; 
    subsystem_x32: out std_logic; 
    subsystem_x33: out std_logic; 
    subsystem_x34: out std_logic_vector(25 downto 0); 
    subsystem_x35: out std_logic_vector(7 downto 0); 
    subsystem_x36: out std_logic_vector(8 downto 0); 
    subsystem_x37: out std_logic; 
    subsystem_x38: out std_logic; 
    subsystem_x39: out std_logic; 
    subsystem_x4: out std_logic_vector(25 downto 0); 
    subsystem_x40: out std_logic_vector(25 downto 0); 
    subsystem_x41: out std_logic_vector(7 downto 0); 
    subsystem_x42: out std_logic_vector(8 downto 0); 
    subsystem_x43: out std_logic; 
    subsystem_x44: out std_logic; 
    subsystem_x45: out std_logic; 
    subsystem_x46: out std_logic_vector(25 downto 0); 
    subsystem_x5: out std_logic_vector(7 downto 0); 
    subsystem_x6: out std_logic_vector(8 downto 0); 
    subsystem_x7: out std_logic; 
    subsystem_x8: out std_logic; 
    subsystem_x9: out std_logic
  );
end leds_entity_7bfe27f09c;

architecture structural of leds_entity_7bfe27f09c is
  signal arm12_y_net_x0: std_logic;
  signal ce_1_sg_x643: std_logic;
  signal clk_1_sg_x643: std_logic;
  signal constant_op_net_x0: std_logic;
  signal convert_dout_net_x13: std_logic;
  signal convert_dout_net_x14: std_logic;
  signal convert_dout_net_x15: std_logic;
  signal convert_dout_net_x16: std_logic;
  signal convert_dout_net_x17: std_logic;
  signal convert_dout_net_x18: std_logic;
  signal convert_dout_net_x19: std_logic;
  signal convert_dout_net_x20: std_logic;
  signal convert_dout_net_x21: std_logic;
  signal convert_dout_net_x22: std_logic;
  signal convert_dout_net_x23: std_logic;
  signal convert_dout_net_x24: std_logic;
  signal convert_dout_net_x25: std_logic;
  signal counter1_op_net: std_logic;
  signal counter1_op_net_x16: std_logic_vector(7 downto 0);
  signal counter1_op_net_x17: std_logic_vector(7 downto 0);
  signal counter1_op_net_x18: std_logic_vector(7 downto 0);
  signal counter1_op_net_x19: std_logic_vector(7 downto 0);
  signal counter1_op_net_x20: std_logic_vector(7 downto 0);
  signal counter1_op_net_x21: std_logic_vector(7 downto 0);
  signal counter1_op_net_x22: std_logic_vector(7 downto 0);
  signal counter1_op_net_x23: std_logic_vector(7 downto 0);
  signal counter2_op_net: std_logic;
  signal counter2_op_net_x16: std_logic_vector(8 downto 0);
  signal counter2_op_net_x17: std_logic_vector(8 downto 0);
  signal counter2_op_net_x18: std_logic_vector(8 downto 0);
  signal counter2_op_net_x19: std_logic_vector(8 downto 0);
  signal counter2_op_net_x20: std_logic_vector(8 downto 0);
  signal counter2_op_net_x21: std_logic_vector(8 downto 0);
  signal counter2_op_net_x22: std_logic_vector(8 downto 0);
  signal counter2_op_net_x23: std_logic_vector(8 downto 0);
  signal delay1_q_net_x3: std_logic;
  signal edge_op_y_net_x18: std_logic;
  signal edge_op_y_net_x19: std_logic;
  signal edge_op_y_net_x20: std_logic;
  signal edge_op_y_net_x21: std_logic;
  signal edge_op_y_net_x22: std_logic;
  signal edge_op_y_net_x23: std_logic;
  signal edge_op_y_net_x24: std_logic;
  signal edge_op_y_net_x25: std_logic;
  signal enable_y_net_x17: std_logic_vector(25 downto 0);
  signal enable_y_net_x18: std_logic_vector(25 downto 0);
  signal enable_y_net_x19: std_logic_vector(25 downto 0);
  signal enable_y_net_x20: std_logic_vector(25 downto 0);
  signal enable_y_net_x21: std_logic_vector(25 downto 0);
  signal enable_y_net_x22: std_logic_vector(25 downto 0);
  signal enable_y_net_x23: std_logic_vector(25 downto 0);
  signal enable_y_net_x24: std_logic_vector(25 downto 0);
  signal inverter1_op_net_x0: std_logic;
  signal inverter2_op_net_x0: std_logic;
  signal inverter3_op_net_x0: std_logic;
  signal inverter4_op_net: std_logic;
  signal inverter_op_net_x0: std_logic;
  signal logical10_y_net_x1: std_logic;
  signal logical12_y_net_x2: std_logic;
  signal logical14_y_net_x18: std_logic;
  signal logical17_y_net_x2: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical2_y_net: std_logic;
  signal logical4_y_net_x2: std_logic;
  signal logical5_y_net_x0: std_logic;
  signal logical7_y_net_x0: std_logic;
  signal logical8_y_net_x1: std_logic;
  signal logical_y_net: std_logic;
  signal mux1_y_net_x0: std_logic;
  signal mux2_y_net_x0: std_logic;
  signal mux3_y_net_x0: std_logic;
  signal mux4_y_net_x0: std_logic;
  signal mux5_y_net_x0: std_logic;
  signal mux6_y_net_x0: std_logic;
  signal mux7_y_net_x0: std_logic;
  signal mux_y_net_x0: std_logic;
  signal relational5_op_net_x0: std_logic;
  signal relational5_op_net_x1: std_logic;
  signal relational5_op_net_x2: std_logic;
  signal relational5_op_net_x3: std_logic;
  signal relational_op_net_x16: std_logic;
  signal relational_op_net_x17: std_logic;
  signal relational_op_net_x18: std_logic;
  signal relational_op_net_x19: std_logic;
  signal relational_op_net_x20: std_logic;
  signal relational_op_net_x21: std_logic;
  signal relational_op_net_x22: std_logic;
  signal relational_op_net_x23: std_logic;
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic;
  signal slice3_y_net: std_logic;
  signal slice_y_net: std_logic;
  signal slice_y_net_x16: std_logic;
  signal slice_y_net_x17: std_logic;
  signal slice_y_net_x18: std_logic;
  signal slice_y_net_x19: std_logic;
  signal slice_y_net_x20: std_logic;
  signal slice_y_net_x21: std_logic;
  signal slice_y_net_x22: std_logic;
  signal slice_y_net_x23: std_logic;

begin
  logical8_y_net_x1 <= adc_en0;
  logical10_y_net_x1 <= adc_en1;
  ce_1_sg_x643 <= ce_1;
  clk_1_sg_x643 <= clk_1;
  logical4_y_net_x2 <= comms;
  arm12_y_net_x0 <= fancy_en;
  logical17_y_net_x2 <= or0;
  logical12_y_net_x2 <= or1;
  logical5_y_net_x0 <= pps;
  logical14_y_net_x18 <= rst;
  delay1_q_net_x3 <= sync_led;
  logical7_y_net_x0 <= warning;
  roach_gpioa0 <= convert_dout_net_x13;
  roach_gpioa1 <= convert_dout_net_x14;
  roach_gpioa2 <= convert_dout_net_x15;
  roach_gpioa3 <= convert_dout_net_x16;
  roach_gpioa4 <= convert_dout_net_x17;
  roach_gpioa5 <= convert_dout_net_x18;
  roach_gpioa6 <= convert_dout_net_x19;
  roach_gpioa7 <= convert_dout_net_x20;
  roach_gpioa_oe <= convert_dout_net_x21;
  roach_led0 <= convert_dout_net_x22;
  roach_led1 <= convert_dout_net_x23;
  roach_led2 <= convert_dout_net_x24;
  roach_led3 <= convert_dout_net_x25;
  subsystem <= counter1_op_net_x16;
  subsystem_x0 <= counter2_op_net_x16;
  subsystem_x1 <= relational_op_net_x16;
  subsystem_x10 <= enable_y_net_x18;
  subsystem_x11 <= counter1_op_net_x18;
  subsystem_x12 <= counter2_op_net_x18;
  subsystem_x13 <= relational_op_net_x18;
  subsystem_x14 <= slice_y_net_x18;
  subsystem_x15 <= edge_op_y_net_x20;
  subsystem_x16 <= enable_y_net_x19;
  subsystem_x17 <= counter1_op_net_x19;
  subsystem_x18 <= counter2_op_net_x19;
  subsystem_x19 <= relational_op_net_x19;
  subsystem_x2 <= slice_y_net_x16;
  subsystem_x20 <= slice_y_net_x19;
  subsystem_x21 <= edge_op_y_net_x21;
  subsystem_x22 <= enable_y_net_x20;
  subsystem_x23 <= counter1_op_net_x20;
  subsystem_x24 <= counter2_op_net_x20;
  subsystem_x25 <= relational_op_net_x20;
  subsystem_x26 <= slice_y_net_x20;
  subsystem_x27 <= edge_op_y_net_x22;
  subsystem_x28 <= enable_y_net_x21;
  subsystem_x29 <= counter1_op_net_x21;
  subsystem_x3 <= edge_op_y_net_x18;
  subsystem_x30 <= counter2_op_net_x21;
  subsystem_x31 <= relational_op_net_x21;
  subsystem_x32 <= slice_y_net_x21;
  subsystem_x33 <= edge_op_y_net_x23;
  subsystem_x34 <= enable_y_net_x22;
  subsystem_x35 <= counter1_op_net_x22;
  subsystem_x36 <= counter2_op_net_x22;
  subsystem_x37 <= relational_op_net_x22;
  subsystem_x38 <= slice_y_net_x22;
  subsystem_x39 <= edge_op_y_net_x24;
  subsystem_x4 <= enable_y_net_x17;
  subsystem_x40 <= enable_y_net_x23;
  subsystem_x41 <= counter1_op_net_x23;
  subsystem_x42 <= counter2_op_net_x23;
  subsystem_x43 <= relational_op_net_x23;
  subsystem_x44 <= slice_y_net_x23;
  subsystem_x45 <= edge_op_y_net_x25;
  subsystem_x46 <= enable_y_net_x24;
  subsystem_x5 <= counter1_op_net_x17;
  subsystem_x6 <= counter2_op_net_x17;
  subsystem_x7 <= relational_op_net_x17;
  subsystem_x8 <= slice_y_net_x17;
  subsystem_x9 <= edge_op_y_net_x19;

  constant_x0: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net_x0
    );

  counter1: entity work.counter_41314d726b
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      en(0) => delay1_q_net_x3,
      rst(0) => logical14_y_net_x18,
      op(0) => counter1_op_net
    );

  counter2: entity work.counter_41314d726b
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      en(0) => logical5_y_net_x0,
      rst(0) => logical14_y_net_x18,
      op(0) => counter2_op_net
    );

  inverter: entity work.inverter_e4a281cf78
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      ip(0) => counter1_op_net,
      op(0) => inverter_op_net_x0
    );

  inverter1: entity work.inverter_6844eee868
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      ip(0) => logical7_y_net_x0,
      op(0) => inverter1_op_net_x0
    );

  inverter2: entity work.inverter_e4a281cf78
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      ip(0) => counter2_op_net,
      op(0) => inverter2_op_net_x0
    );

  inverter3: entity work.inverter_6844eee868
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      ip(0) => relational5_op_net_x3,
      op(0) => inverter3_op_net_x0
    );

  inverter4: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      ip(0) => relational5_op_net_x2,
      op(0) => inverter4_op_net
    );

  logical: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter4_op_net,
      d1(0) => arm12_y_net_x0,
      y(0) => logical_y_net
    );

  logical1: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      d0(0) => logical7_y_net_x0,
      d1(0) => logical14_y_net_x18,
      y(0) => logical1_y_net_x1
    );

  logical2: entity work.logical_5773759131
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      d0(0) => logical7_y_net_x0,
      d1(0) => relational5_op_net_x0,
      d2(0) => relational5_op_net_x1,
      y(0) => logical2_y_net
    );

  mux: entity work.mux_1e22c21d05
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      d0(0) => slice3_y_net,
      d1(0) => relational_op_net_x16,
      sel(0) => logical_y_net,
      y(0) => mux_y_net_x0
    );

  mux1: entity work.mux_1e22c21d05
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      d0(0) => slice2_y_net,
      d1(0) => relational_op_net_x17,
      sel(0) => logical_y_net,
      y(0) => mux1_y_net_x0
    );

  mux2: entity work.mux_1e22c21d05
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      d0(0) => relational5_op_net_x1,
      d1(0) => relational_op_net_x18,
      sel(0) => logical_y_net,
      y(0) => mux2_y_net_x0
    );

  mux3: entity work.mux_1e22c21d05
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      d0(0) => relational5_op_net_x0,
      d1(0) => relational_op_net_x19,
      sel(0) => logical_y_net,
      y(0) => mux3_y_net_x0
    );

  mux4: entity work.mux_1e22c21d05
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      d0(0) => slice_y_net,
      d1(0) => relational_op_net_x20,
      sel(0) => logical_y_net,
      y(0) => mux4_y_net_x0
    );

  mux5: entity work.mux_1e22c21d05
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      d0(0) => slice1_y_net,
      d1(0) => relational_op_net_x21,
      sel(0) => logical_y_net,
      y(0) => mux5_y_net_x0
    );

  mux6: entity work.mux_1e22c21d05
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      d0(0) => logical10_y_net_x1,
      d1(0) => relational_op_net_x22,
      sel(0) => logical_y_net,
      y(0) => mux6_y_net_x0
    );

  mux7: entity work.mux_1e22c21d05
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      d0(0) => logical8_y_net_x1,
      d1(0) => relational_op_net_x23,
      sel(0) => logical_y_net,
      y(0) => mux7_y_net_x0
    );

  pulse_ext1_0975e3daa8: entity work.pulse_ext_entity_39d1b29fcf
    port map (
      ce_1 => ce_1_sg_x643,
      clk_1 => clk_1_sg_x643,
      in_x0 => logical12_y_net_x2,
      out_x0 => relational5_op_net_x1
    );

  pulse_ext2_5b77244ab9: entity work.pulse_ext2_entity_5b77244ab9
    port map (
      ce_1 => ce_1_sg_x643,
      clk_1 => clk_1_sg_x643,
      in_x0 => logical1_y_net_x1,
      out_x0 => relational5_op_net_x2
    );

  pulse_ext3_6b74262259: entity work.pulse_ext_entity_39d1b29fcf
    port map (
      ce_1 => ce_1_sg_x643,
      clk_1 => clk_1_sg_x643,
      in_x0 => logical4_y_net_x2,
      out_x0 => relational5_op_net_x3
    );

  pulse_ext_39d1b29fcf: entity work.pulse_ext_entity_39d1b29fcf
    port map (
      ce_1 => ce_1_sg_x643,
      clk_1 => clk_1_sg_x643,
      in_x0 => logical17_y_net_x2,
      out_x0 => relational5_op_net_x0
    );

  roach_gpioa0_f5eb6eeb90: entity work.roach_gpioa0_entity_f5eb6eeb90
    port map (
      ce_1 => ce_1_sg_x643,
      clk_1 => clk_1_sg_x643,
      gpio_out => mux_y_net_x0,
      convert_x0 => convert_dout_net_x13
    );

  roach_gpioa1_faa60a8a05: entity work.roach_gpioa0_entity_f5eb6eeb90
    port map (
      ce_1 => ce_1_sg_x643,
      clk_1 => clk_1_sg_x643,
      gpio_out => mux1_y_net_x0,
      convert_x0 => convert_dout_net_x14
    );

  roach_gpioa2_8ef519b0a9: entity work.roach_gpioa0_entity_f5eb6eeb90
    port map (
      ce_1 => ce_1_sg_x643,
      clk_1 => clk_1_sg_x643,
      gpio_out => mux2_y_net_x0,
      convert_x0 => convert_dout_net_x15
    );

  roach_gpioa3_dd10438749: entity work.roach_gpioa0_entity_f5eb6eeb90
    port map (
      ce_1 => ce_1_sg_x643,
      clk_1 => clk_1_sg_x643,
      gpio_out => mux3_y_net_x0,
      convert_x0 => convert_dout_net_x16
    );

  roach_gpioa4_c2e179859d: entity work.roach_gpioa0_entity_f5eb6eeb90
    port map (
      ce_1 => ce_1_sg_x643,
      clk_1 => clk_1_sg_x643,
      gpio_out => mux4_y_net_x0,
      convert_x0 => convert_dout_net_x17
    );

  roach_gpioa5_3619b26af0: entity work.roach_gpioa0_entity_f5eb6eeb90
    port map (
      ce_1 => ce_1_sg_x643,
      clk_1 => clk_1_sg_x643,
      gpio_out => mux5_y_net_x0,
      convert_x0 => convert_dout_net_x18
    );

  roach_gpioa6_300ddaf094: entity work.roach_gpioa0_entity_f5eb6eeb90
    port map (
      ce_1 => ce_1_sg_x643,
      clk_1 => clk_1_sg_x643,
      gpio_out => mux6_y_net_x0,
      convert_x0 => convert_dout_net_x19
    );

  roach_gpioa7_83585955d3: entity work.roach_gpioa0_entity_f5eb6eeb90
    port map (
      ce_1 => ce_1_sg_x643,
      clk_1 => clk_1_sg_x643,
      gpio_out => mux7_y_net_x0,
      convert_x0 => convert_dout_net_x20
    );

  roach_gpioa_oe_be1a2cf1d1: entity work.roach_gpioa_oe_entity_be1a2cf1d1
    port map (
      gpio_out => constant_op_net_x0,
      convert_x0 => convert_dout_net_x21
    );

  roach_led0_be9a3489ac: entity work.roach_led0_entity_be9a3489ac
    port map (
      ce_1 => ce_1_sg_x643,
      clk_1 => clk_1_sg_x643,
      gpio_out => inverter2_op_net_x0,
      convert_x0 => convert_dout_net_x22
    );

  roach_led1_f1ab131465: entity work.roach_led0_entity_be9a3489ac
    port map (
      ce_1 => ce_1_sg_x643,
      clk_1 => clk_1_sg_x643,
      gpio_out => inverter_op_net_x0,
      convert_x0 => convert_dout_net_x23
    );

  roach_led2_93fed198ae: entity work.roach_gpioa0_entity_f5eb6eeb90
    port map (
      ce_1 => ce_1_sg_x643,
      clk_1 => clk_1_sg_x643,
      gpio_out => inverter3_op_net_x0,
      convert_x0 => convert_dout_net_x24
    );

  roach_led3_09b50a71fe: entity work.roach_gpioa0_entity_f5eb6eeb90
    port map (
      ce_1 => ce_1_sg_x643,
      clk_1 => clk_1_sg_x643,
      gpio_out => inverter1_op_net_x0,
      convert_x0 => convert_dout_net_x25
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 1,
      y_width => 1
    )
    port map (
      x(0) => counter2_op_net,
      y(0) => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 1,
      y_width => 1
    )
    port map (
      x(0) => counter1_op_net,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 1,
      y_width => 1
    )
    port map (
      x(0) => logical2_y_net,
      y(0) => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 1,
      y_width => 1
    )
    port map (
      x(0) => relational5_op_net_x3,
      y(0) => slice3_y_net
    );

  subsystem_b66990d278: entity work.subsystem_entity_b66990d278
    port map (
      ce_1 => ce_1_sg_x643,
      clk_1 => clk_1_sg_x643,
      rst => logical14_y_net_x18,
      led_pulse0 => counter1_op_net_x16,
      led_pulse0_x0 => counter2_op_net_x16,
      led_pulse0_x1 => slice_y_net_x16,
      led_pulse0_x2 => edge_op_y_net_x18,
      led_pulse0_x3 => enable_y_net_x17,
      led_pulse1 => counter1_op_net_x17,
      led_pulse1_x0 => counter2_op_net_x17,
      led_pulse1_x1 => slice_y_net_x17,
      led_pulse1_x2 => edge_op_y_net_x19,
      led_pulse1_x3 => enable_y_net_x18,
      led_pulse2 => counter1_op_net_x18,
      led_pulse2_x0 => counter2_op_net_x18,
      led_pulse2_x1 => slice_y_net_x18,
      led_pulse2_x2 => edge_op_y_net_x20,
      led_pulse2_x3 => enable_y_net_x19,
      led_pulse3 => counter1_op_net_x19,
      led_pulse3_x0 => counter2_op_net_x19,
      led_pulse3_x1 => slice_y_net_x19,
      led_pulse3_x2 => edge_op_y_net_x21,
      led_pulse3_x3 => enable_y_net_x20,
      led_pulse4 => counter1_op_net_x20,
      led_pulse4_x0 => counter2_op_net_x20,
      led_pulse4_x1 => slice_y_net_x20,
      led_pulse4_x2 => edge_op_y_net_x22,
      led_pulse4_x3 => enable_y_net_x21,
      led_pulse5 => counter1_op_net_x21,
      led_pulse5_x0 => counter2_op_net_x21,
      led_pulse5_x1 => slice_y_net_x21,
      led_pulse5_x2 => edge_op_y_net_x23,
      led_pulse5_x3 => enable_y_net_x22,
      led_pulse6 => counter1_op_net_x22,
      led_pulse6_x0 => counter2_op_net_x22,
      led_pulse6_x1 => slice_y_net_x22,
      led_pulse6_x2 => edge_op_y_net_x24,
      led_pulse6_x3 => enable_y_net_x23,
      led_pulse7 => counter1_op_net_x23,
      led_pulse7_x0 => counter2_op_net_x23,
      led_pulse7_x1 => slice_y_net_x23,
      led_pulse7_x2 => edge_op_y_net_x25,
      led_pulse7_x3 => enable_y_net_x24,
      out1 => relational_op_net_x16,
      out2 => relational_op_net_x17,
      out3 => relational_op_net_x18,
      out4 => relational_op_net_x19,
      out5 => relational_op_net_x20,
      out6 => relational_op_net_x21,
      out7 => relational_op_net_x22,
      out8 => relational_op_net_x23
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/packetiser"

entity packetiser_entity_38cd0f1979 is
  port (
    antbase: in std_logic_vector(31 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_x0: in std_logic_vector(63 downto 0); 
    dv_x0: in std_logic; 
    mrst: in std_logic; 
    sync: in std_logic; 
    out_oob: out std_logic_vector(7 downto 0); 
    out_pkt: out std_logic_vector(63 downto 0); 
    out_valid: out std_logic
  );
end packetiser_entity_38cd0f1979;

architecture structural of packetiser_entity_38cd0f1979 is
  signal ce_1_sg_x646: std_logic;
  signal clk_1_sg_x646: std_logic;
  signal concat2_y_net: std_logic_vector(7 downto 0);
  signal constant1_op_net: std_logic_vector(4 downto 0);
  signal constant3_op_net: std_logic_vector(4 downto 0);
  signal constant4_op_net: std_logic;
  signal constant5_op_net: std_logic_vector(2 downto 0);
  signal data: std_logic_vector(63 downto 0);
  signal delay1_q_net_x0: std_logic;
  signal delay2_q_net_x0: std_logic;
  signal delay42_q_net_x0: std_logic_vector(31 downto 0);
  signal dv: std_logic;
  signal dvd_hdrv: std_logic;
  signal eof: std_logic;
  signal hdr64: std_logic_vector(63 downto 0);
  signal hdr_val: std_logic;
  signal logical14_y_net_x19: std_logic;
  signal main_ctr: std_logic_vector(52 downto 0);
  signal mrst_armed: std_logic;
  signal mux3_y_net_x0: std_logic_vector(63 downto 0);
  signal oob_out_x2: std_logic_vector(7 downto 0);
  signal payload_ctr: std_logic_vector(4 downto 0);
  signal pcnt: std_logic_vector(11 downto 0);
  signal pcnt_rst: std_logic;
  signal pkt_out_x2: std_logic_vector(63 downto 0);
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;
  signal slice1_y_net: std_logic_vector(11 downto 0);
  signal slice7_y_net: std_logic_vector(15 downto 0);
  signal slice8_y_net: std_logic_vector(7 downto 0);
  signal slice9_y_net: std_logic_vector(3 downto 0);
  signal timestamp: std_logic_vector(35 downto 0);
  signal valid_out_x3: std_logic;

begin
  delay42_q_net_x0 <= antbase;
  ce_1_sg_x646 <= ce_1;
  clk_1_sg_x646 <= clk_1;
  mux3_y_net_x0 <= data_x0;
  delay1_q_net_x0 <= dv_x0;
  logical14_y_net_x19 <= mrst;
  delay2_q_net_x0 <= sync;
  out_oob <= oob_out_x2;
  out_pkt <= pkt_out_x2;
  out_valid <= valid_out_x3;

  concat1: entity work.concat_eb40f005cd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => timestamp,
      in1 => pcnt,
      in2 => slice7_y_net,
      y => hdr64
    );

  concat2: entity work.concat_f4ce182b0d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => constant5_op_net,
      in1(0) => mrst_armed,
      in2(0) => constant4_op_net,
      in3(0) => eof,
      in4(0) => delay2_q_net_x0,
      in5(0) => hdr_val,
      y => concat2_y_net
    );

  concat3: entity work.concat_114a1e1663
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => slice9_y_net,
      in1 => slice8_y_net,
      y => pcnt
    );

  constant1: entity work.constant_fe72737ca0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant3: entity work.constant_578dda96c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant3_op_net
    );

  constant4: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant4_op_net
    );

  constant5: entity work.constant_822933f89b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant5_op_net
    );

  hdr_delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x646,
      clk => clk_1_sg_x646,
      clr => '0',
      d(0) => delay1_q_net_x0,
      q(0) => dv
    );

  hdr_delay1: entity work.delay_e2d047c154
    port map (
      ce => ce_1_sg_x646,
      clk => clk_1_sg_x646,
      clr => '0',
      d => mux3_y_net_x0,
      q => data
    );

  hdr_delay2: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x646,
      clk => clk_1_sg_x646,
      clr => '0',
      d(0) => dvd_hdrv,
      q(0) => valid_out_x3
    );

  hdr_delay3: entity work.delay_23f848c85b
    port map (
      ce => ce_1_sg_x646,
      clk => clk_1_sg_x646,
      clr => '0',
      d => concat2_y_net,
      q => oob_out_x2
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay1_q_net_x0,
      d1(0) => relational_op_net,
      y(0) => hdr_val
    );

  logical2: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dv,
      d1(0) => hdr_val,
      y(0) => dvd_hdrv
    );

  logical3: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => mrst_armed,
      d1(0) => delay2_q_net_x0,
      y(0) => pcnt_rst
    );

  logical4: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dv,
      d1(0) => relational1_op_net,
      y(0) => eof
    );

  main_ctr_x0: entity work.counter_7f1bcfc849
    port map (
      ce => ce_1_sg_x646,
      clk => clk_1_sg_x646,
      clr => '0',
      en(0) => dv,
      rst(0) => pcnt_rst,
      op => main_ctr
    );

  mux: entity work.mux_6054a14682
    port map (
      ce => ce_1_sg_x646,
      clk => clk_1_sg_x646,
      clr => '0',
      d0 => data,
      d1 => hdr64,
      sel(0) => hdr_val,
      y => pkt_out_x2
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x646,
      clk => clk_1_sg_x646,
      d(0) => logical14_y_net_x19,
      en(0) => logical14_y_net_x19,
      rst(0) => delay2_q_net_x0,
      q(0) => mrst_armed
    );

  relational: entity work.relational_9ece3c8c4e
    port map (
      a => payload_ctr,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_9ece3c8c4e
    port map (
      a => payload_ctr,
      b => constant3_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 16,
      x_width => 53,
      y_width => 12
    )
    port map (
      x => main_ctr,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 17,
      new_msb => 52,
      x_width => 53,
      y_width => 36
    )
    port map (
      x => main_ctr,
      y => timestamp
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 4,
      x_width => 53,
      y_width => 5
    )
    port map (
      x => main_ctr,
      y => payload_ctr
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 32,
      y_width => 16
    )
    port map (
      x => delay42_q_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 11,
      x_width => 12,
      y_width => 8
    )
    port map (
      x => slice1_y_net,
      y => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 3,
      x_width => 12,
      y_width => 4
    )
    port map (
      x => slice1_y_net,
      y => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/packetiser_tvg_contiguous"

entity packetiser_tvg_contiguous_entity_8f915d99f4 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(63 downto 0); 
    dv: in std_logic; 
    sync: in std_logic; 
    use_tvg: in std_logic; 
    dout: out std_logic_vector(63 downto 0); 
    dv_out: out std_logic; 
    sync_out_x1: out std_logic
  );
end packetiser_tvg_contiguous_entity_8f915d99f4;

architecture structural of packetiser_tvg_contiguous_entity_8f915d99f4 is
  signal ce_1_sg_x647: std_logic;
  signal clk_1_sg_x647: std_logic;
  signal concat1_y_net: std_logic_vector(63 downto 0);
  signal concat2_y_net: std_logic_vector(11 downto 0);
  signal delay1_q_net_x1: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal dvalid_x0: std_logic;
  signal freq: std_logic_vector(31 downto 0);
  signal master: std_logic_vector(16 downto 0);
  signal mux1_y_net_x0: std_logic_vector(63 downto 0);
  signal mux3_y_net_x1: std_logic_vector(63 downto 0);
  signal payload_ctr: std_logic_vector(15 downto 0);
  signal register1_q_net_x0: std_logic;
  signal slice2_y_net: std_logic_vector(3 downto 0);
  signal slice4_y_net: std_logic_vector(4 downto 0);
  signal slice5_y_net: std_logic_vector(3 downto 0);
  signal slice6_y_net: std_logic_vector(7 downto 0);
  signal sync_out_x0: std_logic;
  signal xeng: std_logic_vector(15 downto 0);

begin
  ce_1_sg_x647 <= ce_1;
  clk_1_sg_x647 <= clk_1;
  mux1_y_net_x0 <= din;
  dvalid_x0 <= dv;
  sync_out_x0 <= sync;
  register1_q_net_x0 <= use_tvg;
  dout <= mux3_y_net_x1;
  dv_out <= delay1_q_net_x1;
  sync_out_x1 <= delay2_q_net_x1;

  concat1: entity work.concat_8ed7cb66cd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => xeng,
      in1 => payload_ctr,
      in2 => freq,
      y => concat1_y_net
    );

  concat2: entity work.concat_114a1e1663
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => slice5_y_net,
      in1 => slice6_y_net,
      y => concat2_y_net
    );

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 12,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x647,
      clk => clk_1_sg_x647,
      clr => '0',
      din => concat2_y_net,
      en => "1",
      dout => freq
    );

  convert2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 5,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x647,
      clk => clk_1_sg_x647,
      clr => '0',
      din => slice4_y_net,
      en => "1",
      dout => payload_ctr
    );

  convert3: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 4,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x647,
      clk => clk_1_sg_x647,
      clr => '0',
      din => slice2_y_net,
      en => "1",
      dout => xeng
    );

  delay1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x647,
      clk => clk_1_sg_x647,
      clr => '0',
      d(0) => dvalid_x0,
      q(0) => delay1_q_net_x1
    );

  delay2: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x647,
      clk => clk_1_sg_x647,
      clr => '0',
      d(0) => sync_out_x0,
      q(0) => delay2_q_net_x1
    );

  mux3: entity work.mux_fd01d62b53
    port map (
      ce => ce_1_sg_x647,
      clk => clk_1_sg_x647,
      clr => '0',
      d0 => mux1_y_net_x0,
      d1 => concat1_y_net,
      sel(0) => register1_q_net_x0,
      y => mux3_y_net_x1
    );

  packet_counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_5c141fadd7b08b3b",
      op_arith => xlUnsigned,
      op_width => 17
    )
    port map (
      ce => ce_1_sg_x647,
      clk => clk_1_sg_x647,
      clr => '0',
      en(0) => dvalid_x0,
      rst(0) => sync_out_x0,
      op => master
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 8,
      x_width => 17,
      y_width => 4
    )
    port map (
      x => master,
      y => slice2_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 4,
      x_width => 17,
      y_width => 5
    )
    port map (
      x => master,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 8,
      x_width => 17,
      y_width => 4
    )
    port map (
      x => master,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 9,
      new_msb => 16,
      x_width => 17,
      y_width => 8
    )
    port map (
      x => master,
      y => slice6_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/qdr_ct/buffer_to_64"

entity buffer_to_64_entity_dd495b5105 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    ct_data: in std_logic_vector(35 downto 0); 
    ct_valid: in std_logic; 
    sync: in std_logic; 
    sync64: out std_logic; 
    x64_bit_data: out std_logic_vector(63 downto 0); 
    x64_bit_valid: out std_logic
  );
end buffer_to_64_entity_dd495b5105;

architecture structural of buffer_to_64_entity_dd495b5105 is
  signal ce_1_sg_x649: std_logic;
  signal clk_1_sg_x649: std_logic;
  signal concat2_y_net: std_logic_vector(63 downto 0);
  signal constant1_op_net: std_logic_vector(63 downto 0);
  signal constant_op_net: std_logic_vector(1 downto 0);
  signal ctr: std_logic_vector(1 downto 0);
  signal d0: std_logic_vector(15 downto 0);
  signal d1: std_logic_vector(15 downto 0);
  signal d2: std_logic_vector(15 downto 0);
  signal d3: std_logic_vector(15 downto 0);
  signal data_out: std_logic_vector(63 downto 0);
  signal dclk: std_logic;
  signal delay1_q_net: std_logic_vector(15 downto 0);
  signal delay6_q_net: std_logic;
  signal dvalid_x1: std_logic;
  signal extract_parity_b_net_x0: std_logic_vector(35 downto 0);
  signal logical1_y_net_x0: std_logic;
  signal mux1_y_net_x1: std_logic_vector(63 downto 0);
  signal mux_y_net_x0: std_logic;
  signal slice4_y_net: std_logic_vector(15 downto 0);
  signal sync_out_x1: std_logic;

begin
  ce_1_sg_x649 <= ce_1;
  clk_1_sg_x649 <= clk_1;
  extract_parity_b_net_x0 <= ct_data;
  logical1_y_net_x0 <= ct_valid;
  mux_y_net_x0 <= sync;
  sync64 <= sync_out_x1;
  x64_bit_data <= mux1_y_net_x1;
  x64_bit_valid <= dvalid_x1;

  concat2: entity work.concat_8b51f4067b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => d0,
      in1 => d1,
      in2 => d2,
      in3 => d3,
      y => concat2_y_net
    );

  constant1: entity work.constant_7ef2258ec8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant_x0: entity work.constant_3a9a3daeb9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_263175d139d7ac6d",
      op_arith => xlUnsigned,
      op_width => 2
    )
    port map (
      ce => ce_1_sg_x649,
      clk => clk_1_sg_x649,
      clr => '0',
      en(0) => delay6_q_net,
      rst(0) => mux_y_net_x0,
      op => ctr
    );

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 16
    )
    port map (
      ce => ce_1_sg_x649,
      clk => clk_1_sg_x649,
      d => delay1_q_net,
      en => '1',
      rst => '1',
      q => d2
    );

  delay1: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 16
    )
    port map (
      ce => ce_1_sg_x649,
      clk => clk_1_sg_x649,
      d => slice4_y_net,
      en => '1',
      rst => '1',
      q => delay1_q_net
    );

  delay2: entity work.xldelay
    generic map (
      latency => 7,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x649,
      clk => clk_1_sg_x649,
      d(0) => mux_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => sync_out_x1
    );

  delay3: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 16
    )
    port map (
      ce => ce_1_sg_x649,
      clk => clk_1_sg_x649,
      d => delay1_q_net,
      en => '1',
      rst => '1',
      q => d1
    );

  delay4: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 16
    )
    port map (
      ce => ce_1_sg_x649,
      clk => clk_1_sg_x649,
      d => delay1_q_net,
      en => '1',
      rst => '1',
      q => d0
    );

  delay5: entity work.delay_9bb25f1d93
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => delay1_q_net,
      q => d3
    );

  delay6: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x649,
      clk => clk_1_sg_x649,
      d(0) => logical1_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay6_q_net
    );

  delay7: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x649,
      clk => clk_1_sg_x649,
      d(0) => dclk,
      en => '1',
      rst => '1',
      q(0) => dvalid_x1
    );

  mux1: entity work.mux_66e06093b2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => constant1_op_net,
      d1 => data_out,
      sel(0) => dvalid_x1,
      y => mux1_y_net_x1
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 64,
      init_value => b"0000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x649,
      clk => clk_1_sg_x649,
      d => concat2_y_net,
      en(0) => dclk,
      rst => "0",
      q => data_out
    );

  relational: entity work.relational_5f1eb17108
    port map (
      a => constant_op_net,
      b => ctr,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => dclk
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 36,
      y_width => 16
    )
    port map (
      x => extract_parity_b_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/qdr_ct/bus_create2"

entity bus_create2_entity_7faa65db15 is
  port (
    in1: in std_logic; 
    in2: in std_logic_vector(63 downto 0); 
    in3: in std_logic; 
    bus_out: out std_logic_vector(65 downto 0)
  );
end bus_create2_entity_7faa65db15;

architecture structural of bus_create2_entity_7faa65db15 is
  signal concatenate_y_net_x19: std_logic_vector(65 downto 0);
  signal dvalid_x2: std_logic;
  signal mux1_y_net_x2: std_logic_vector(63 downto 0);
  signal reinterpret1_output_port_net: std_logic;
  signal reinterpret2_output_port_net: std_logic_vector(63 downto 0);
  signal reinterpret3_output_port_net: std_logic;
  signal sync_out_x2: std_logic;

begin
  sync_out_x2 <= in1;
  mux1_y_net_x2 <= in2;
  dvalid_x2 <= in3;
  bus_out <= concatenate_y_net_x19;

  concatenate: entity work.concat_4564aa4c8b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2(0) => reinterpret3_output_port_net,
      y => concatenate_y_net_x19
    );

  reinterpret1: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => sync_out_x2,
      output_port(0) => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_9a13f6a2a0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux1_y_net_x2,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => dvalid_x2,
      output_port(0) => reinterpret3_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/qdr_ct/qdr"

entity qdr_entity_5ce551e581 is
  port (
    address: in std_logic_vector(18 downto 0); 
    be: in std_logic_vector(3 downto 0); 
    c09f12_01_qdr_ct_qdr_ack: in std_logic; 
    c09f12_01_qdr_ct_qdr_cal_fail: in std_logic; 
    c09f12_01_qdr_ct_qdr_data_out: in std_logic_vector(35 downto 0); 
    c09f12_01_qdr_ct_qdr_phy_ready: in std_logic; 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_in: in std_logic_vector(15 downto 0); 
    rd_en: in std_logic; 
    wr_en: in std_logic; 
    cal_fail: out std_logic; 
    convert_address_x0: out std_logic_vector(31 downto 0); 
    convert_be_x0: out std_logic_vector(3 downto 0); 
    convert_data_in_x0: out std_logic_vector(35 downto 0); 
    convert_rd_en_x0: out std_logic; 
    convert_wr_en_x0: out std_logic; 
    data_out: out std_logic_vector(35 downto 0); 
    data_valid: out std_logic; 
    phy_ready: out std_logic
  );
end qdr_entity_5ce551e581;

architecture structural of qdr_entity_5ce551e581 is
  signal c09f12_01_qdr_ct_qdr_ack_net_x0: std_logic;
  signal c09f12_01_qdr_ct_qdr_cal_fail_net_x0: std_logic;
  signal c09f12_01_qdr_ct_qdr_data_out_net_x0: std_logic_vector(35 downto 0);
  signal c09f12_01_qdr_ct_qdr_phy_ready_net_x0: std_logic;
  signal ce_1_sg_x652: std_logic;
  signal clk_1_sg_x652: std_logic;
  signal constant_op_net_x0: std_logic_vector(3 downto 0);
  signal convert_ack_dout_net: std_logic;
  signal convert_address_dout_net_x0: std_logic_vector(31 downto 0);
  signal convert_be_dout_net_x0: std_logic_vector(3 downto 0);
  signal convert_cal_fail_dout_net_x0: std_logic;
  signal convert_data_in1_dout_net: std_logic_vector(35 downto 0);
  signal convert_data_in_dout_net_x0: std_logic_vector(35 downto 0);
  signal convert_rd_en_dout_net_x0: std_logic;
  signal convert_ready_dout_net_x0: std_logic;
  signal convert_wr_en_dout_net_x0: std_logic;
  signal delay1_q_net: std_logic;
  signal delay3_q_net_x0: std_logic;
  signal delay6_q_net_x0: std_logic;
  signal extract_parity_b_net_x1: std_logic_vector(35 downto 0);
  signal force_ack_output_port_net: std_logic;
  signal force_cal_fail_output_port_net: std_logic;
  signal force_data_out_output_port_net: std_logic_vector(35 downto 0);
  signal force_phy_ready_output_port_net: std_logic;
  signal insert_parity_b_net: std_logic_vector(35 downto 0);
  signal inverter2_op_net: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical_y_net: std_logic;
  signal mux1_y_net_x0: std_logic_vector(15 downto 0);
  signal mux2_y_net_x0: std_logic_vector(18 downto 0);
  signal prev_rd_q_net: std_logic;
  signal qdr_latency_q_net: std_logic;

begin
  mux2_y_net_x0 <= address;
  constant_op_net_x0 <= be;
  c09f12_01_qdr_ct_qdr_ack_net_x0 <= c09f12_01_qdr_ct_qdr_ack;
  c09f12_01_qdr_ct_qdr_cal_fail_net_x0 <= c09f12_01_qdr_ct_qdr_cal_fail;
  c09f12_01_qdr_ct_qdr_data_out_net_x0 <= c09f12_01_qdr_ct_qdr_data_out;
  c09f12_01_qdr_ct_qdr_phy_ready_net_x0 <= c09f12_01_qdr_ct_qdr_phy_ready;
  ce_1_sg_x652 <= ce_1;
  clk_1_sg_x652 <= clk_1;
  mux1_y_net_x0 <= data_in;
  delay3_q_net_x0 <= rd_en;
  delay6_q_net_x0 <= wr_en;
  cal_fail <= convert_cal_fail_dout_net_x0;
  convert_address_x0 <= convert_address_dout_net_x0;
  convert_be_x0 <= convert_be_dout_net_x0;
  convert_data_in_x0 <= convert_data_in_dout_net_x0;
  convert_rd_en_x0 <= convert_rd_en_dout_net_x0;
  convert_wr_en_x0 <= convert_wr_en_dout_net_x0;
  data_out <= extract_parity_b_net_x1;
  data_valid <= logical1_y_net_x1;
  phy_ready <= convert_ready_dout_net_x0;

  convert_ack: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x652,
      clk => clk_1_sg_x652,
      clr => '0',
      din(0) => force_ack_output_port_net,
      en => "1",
      dout(0) => convert_ack_dout_net
    );

  convert_address: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 19,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x652,
      clk => clk_1_sg_x652,
      clr => '0',
      din => mux2_y_net_x0,
      en => "1",
      dout => convert_address_dout_net_x0
    );

  convert_be: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 4,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 4,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x652,
      clk => clk_1_sg_x652,
      clr => '0',
      din => constant_op_net_x0,
      en => "1",
      dout => convert_be_dout_net_x0
    );

  convert_cal_fail: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x652,
      clk => clk_1_sg_x652,
      clr => '0',
      din(0) => force_cal_fail_output_port_net,
      en => "1",
      dout(0) => convert_cal_fail_dout_net_x0
    );

  convert_data_in: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 36,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 36,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x652,
      clk => clk_1_sg_x652,
      clr => '0',
      din => insert_parity_b_net,
      en => "1",
      dout => convert_data_in_dout_net_x0
    );

  convert_data_in1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 16,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 36,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x652,
      clk => clk_1_sg_x652,
      clr => '0',
      din => mux1_y_net_x0,
      en => "1",
      dout => convert_data_in1_dout_net
    );

  convert_rd_en: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x652,
      clk => clk_1_sg_x652,
      clr => '0',
      din(0) => delay3_q_net_x0,
      en => "1",
      dout(0) => convert_rd_en_dout_net_x0
    );

  convert_ready: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x652,
      clk => clk_1_sg_x652,
      clr => '0',
      din(0) => force_phy_ready_output_port_net,
      en => "1",
      dout(0) => convert_ready_dout_net_x0
    );

  convert_wr_en: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x652,
      clk => clk_1_sg_x652,
      clr => '0',
      din(0) => delay6_q_net_x0,
      en => "1",
      dout(0) => convert_wr_en_dout_net_x0
    );

  delay1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x652,
      clk => clk_1_sg_x652,
      clr => '0',
      d(0) => qdr_latency_q_net,
      q(0) => delay1_q_net
    );

  extract_parity: entity work.bitbasher_28534cf16d
    port map (
      a => force_data_out_output_port_net,
      ce => '0',
      clk => '0',
      clr => '0',
      b => extract_parity_b_net_x1
    );

  force_ack: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => c09f12_01_qdr_ct_qdr_ack_net_x0,
      output_port(0) => force_ack_output_port_net
    );

  force_cal_fail: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => c09f12_01_qdr_ct_qdr_cal_fail_net_x0,
      output_port(0) => force_cal_fail_output_port_net
    );

  force_data_out: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => c09f12_01_qdr_ct_qdr_data_out_net_x0,
      output_port => force_data_out_output_port_net
    );

  force_phy_ready: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => c09f12_01_qdr_ct_qdr_phy_ready_net_x0,
      output_port(0) => force_phy_ready_output_port_net
    );

  insert_parity: entity work.bitbasher_bb056d7e90
    port map (
      a => convert_data_in1_dout_net,
      ce => '0',
      clk => '0',
      clr => '0',
      b => insert_parity_b_net
    );

  inverter2: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x652,
      clk => clk_1_sg_x652,
      clr => '0',
      ip(0) => prev_rd_q_net,
      op(0) => inverter2_op_net
    );

  logical: entity work.logical_954ee29728
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => convert_ack_dout_net,
      d1(0) => convert_rd_en_dout_net_x0,
      d2(0) => inverter2_op_net,
      y(0) => logical_y_net
    );

  logical1: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => qdr_latency_q_net,
      d1(0) => delay1_q_net,
      y(0) => logical1_y_net_x1
    );

  prev_rd: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x652,
      clk => clk_1_sg_x652,
      d(0) => logical_y_net,
      en => "1",
      rst => "0",
      q(0) => prev_rd_q_net
    );

  qdr_latency: entity work.xldelay
    generic map (
      latency => 10,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x652,
      clk => clk_1_sg_x652,
      d(0) => logical_y_net,
      en => '1',
      rst => '1',
      q(0) => qdr_latency_q_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/qdr_ct/reorder/dbl_buffer0"

entity dbl_buffer0_entity_8618fa6b3a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din1: in std_logic_vector(15 downto 0); 
    rd_addr: in std_logic_vector(12 downto 0); 
    rw_mode: in std_logic; 
    we: in std_logic; 
    wr_addr: in std_logic_vector(12 downto 0); 
    dout: out std_logic_vector(15 downto 0)
  );
end dbl_buffer0_entity_8618fa6b3a;

architecture structural of dbl_buffer0_entity_8618fa6b3a is
  signal bram0_data_out_net: std_logic_vector(15 downto 0);
  signal bram1_data_out_net: std_logic_vector(15 downto 0);
  signal ce_1_sg_x653: std_logic;
  signal clk_1_sg_x653: std_logic;
  signal constant_op_net: std_logic;
  signal delay1_q_net: std_logic_vector(15 downto 0);
  signal delay2_q_net: std_logic_vector(15 downto 0);
  signal delay_d0_q_net_x0: std_logic_vector(12 downto 0);
  signal delay_din0_q_net_x0: std_logic_vector(15 downto 0);
  signal delay_q_net: std_logic;
  signal delay_sel_q_net_x0: std_logic;
  signal delay_we_q_net_x0: std_logic;
  signal map1_data_net_x0: std_logic_vector(12 downto 0);
  signal mux2_y_net: std_logic;
  signal mux3_y_net: std_logic_vector(12 downto 0);
  signal mux5_y_net: std_logic;
  signal mux6_y_net_x0: std_logic_vector(15 downto 0);
  signal mux_y_net: std_logic_vector(12 downto 0);

begin
  ce_1_sg_x653 <= ce_1;
  clk_1_sg_x653 <= clk_1;
  delay_din0_q_net_x0 <= din1;
  map1_data_net_x0 <= rd_addr;
  delay_sel_q_net_x0 <= rw_mode;
  delay_we_q_net_x0 <= we;
  delay_d0_q_net_x0 <= wr_addr;
  dout <= mux6_y_net_x0;

  bram0: entity work.xlspram_c09f12_01
    generic map (
      c_address_width => 13,
      c_width => 16,
      core_name0 => "bmg_72_b1697c6003ecdb6f",
      latency => 1
    )
    port map (
      addr => mux_y_net,
      ce => ce_1_sg_x653,
      clk => clk_1_sg_x653,
      data_in => delay1_q_net,
      en => "1",
      rst => "0",
      we(0) => mux2_y_net,
      data_out => bram0_data_out_net
    );

  bram1: entity work.xlspram_c09f12_01
    generic map (
      c_address_width => 13,
      c_width => 16,
      core_name0 => "bmg_72_b1697c6003ecdb6f",
      latency => 1
    )
    port map (
      addr => mux3_y_net,
      ce => ce_1_sg_x653,
      clk => clk_1_sg_x653,
      data_in => delay2_q_net,
      en => "1",
      rst => "0",
      we(0) => mux5_y_net,
      data_out => bram1_data_out_net
    );

  constant_x0: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  delay: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x653,
      clk => clk_1_sg_x653,
      d(0) => delay_sel_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_q_net
    );

  delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 16
    )
    port map (
      ce => ce_1_sg_x653,
      clk => clk_1_sg_x653,
      d => delay_din0_q_net_x0,
      en => '1',
      rst => '1',
      q => delay1_q_net
    );

  delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 16
    )
    port map (
      ce => ce_1_sg_x653,
      clk => clk_1_sg_x653,
      d => delay_din0_q_net_x0,
      en => '1',
      rst => '1',
      q => delay2_q_net
    );

  mux: entity work.mux_112578e8da
    port map (
      ce => ce_1_sg_x653,
      clk => clk_1_sg_x653,
      clr => '0',
      d0 => delay_d0_q_net_x0,
      d1 => map1_data_net_x0,
      sel(0) => delay_sel_q_net_x0,
      y => mux_y_net
    );

  mux2: entity work.mux_2aa09bfea3
    port map (
      ce => ce_1_sg_x653,
      clk => clk_1_sg_x653,
      clr => '0',
      d0(0) => delay_we_q_net_x0,
      d1(0) => constant_op_net,
      sel(0) => delay_sel_q_net_x0,
      y(0) => mux2_y_net
    );

  mux3: entity work.mux_112578e8da
    port map (
      ce => ce_1_sg_x653,
      clk => clk_1_sg_x653,
      clr => '0',
      d0 => map1_data_net_x0,
      d1 => delay_d0_q_net_x0,
      sel(0) => delay_sel_q_net_x0,
      y => mux3_y_net
    );

  mux5: entity work.mux_2aa09bfea3
    port map (
      ce => ce_1_sg_x653,
      clk => clk_1_sg_x653,
      clr => '0',
      d0(0) => constant_op_net,
      d1(0) => delay_we_q_net_x0,
      sel(0) => delay_sel_q_net_x0,
      y(0) => mux5_y_net
    );

  mux6: entity work.mux_bfb8dadb36
    port map (
      ce => ce_1_sg_x653,
      clk => clk_1_sg_x653,
      clr => '0',
      d0 => bram1_data_out_net,
      d1 => bram0_data_out_net,
      sel(0) => delay_q_net,
      y => mux6_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/qdr_ct/reorder/sync_delay_en"

entity sync_delay_en_entity_52d3bba593 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    en: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_en_entity_52d3bba593;

architecture structural of sync_delay_en_entity_52d3bba593 is
  signal ce_1_sg_x654: std_logic;
  signal clk_1_sg_x654: std_logic;
  signal constant1_op_net: std_logic_vector(13 downto 0);
  signal constant2_op_net: std_logic_vector(13 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(13 downto 0);
  signal counter_op_net: std_logic_vector(13 downto 0);
  signal logical1_y_net: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x0: std_logic;
  signal or_y_net_x0: std_logic;
  signal pre_sync_delay_q_net_x0: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x654 <= ce_1;
  clk_1_sg_x654 <= clk_1;
  or_y_net_x0 <= en;
  pre_sync_delay_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x0;

  constant1: entity work.constant_068ec526a0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_24fe963a89
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_60de7cd9a7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_e16427883c4a8980",
      op_arith => xlUnsigned,
      op_width => 14
    )
    port map (
      ce => ce_1_sg_x654,
      clk => clk_1_sg_x654,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical1_y_net,
      load(0) => pre_sync_delay_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => pre_sync_delay_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical_y_net,
      d1(0) => or_y_net_x0,
      y(0) => logical1_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => pre_sync_delay_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x0
    );

  relational: entity work.relational_d500ab1630
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_7f67627fe4
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/qdr_ct/reorder"

entity reorder_entity_02db5289ec is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din0: in std_logic_vector(15 downto 0); 
    en: in std_logic; 
    sync: in std_logic; 
    dout0: out std_logic_vector(15 downto 0); 
    sync_out: out std_logic; 
    valid: out std_logic
  );
end reorder_entity_02db5289ec;

architecture structural of reorder_entity_02db5289ec is
  signal ce_1_sg_x655: std_logic;
  signal clk_1_sg_x655: std_logic;
  signal counter_op_net: std_logic_vector(13 downto 0);
  signal delay1_q_net_x1: std_logic;
  signal delay_d0_q_net_x0: std_logic_vector(12 downto 0);
  signal delay_din0_q_net_x0: std_logic_vector(15 downto 0);
  signal delay_q_net_x1: std_logic;
  signal delay_sel_q_net_x0: std_logic;
  signal delay_valid_q_net_x0: std_logic;
  signal delay_we_q_net_x0: std_logic;
  signal map1_data_net_x0: std_logic_vector(12 downto 0);
  signal mux1_y_net_x1: std_logic_vector(15 downto 0);
  signal mux6_y_net_x1: std_logic_vector(15 downto 0);
  signal mux_y_net_x0: std_logic;
  signal or_y_net_x0: std_logic;
  signal post_sync_delay_q_net_x0: std_logic;
  signal pre_sync_delay_q_net_x0: std_logic;
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic_vector(12 downto 0);

begin
  ce_1_sg_x655 <= ce_1;
  clk_1_sg_x655 <= clk_1;
  mux1_y_net_x1 <= din0;
  delay1_q_net_x1 <= en;
  delay_q_net_x1 <= sync;
  dout0 <= mux6_y_net_x1;
  sync_out <= post_sync_delay_q_net_x0;
  valid <= delay_valid_q_net_x0;

  counter: entity work.xlcounter_limit_c09f12_01
    generic map (
      cnt_15_0 => 16383,
      cnt_31_16 => 0,
      cnt_47_32 => 0,
      cnt_63_48 => 0,
      core_name0 => "cntr_11_0_8438db56645cca14",
      count_limited => 0,
      op_arith => xlUnsigned,
      op_width => 14
    )
    port map (
      ce => ce_1_sg_x655,
      clk => clk_1_sg_x655,
      clr => '0',
      en(0) => delay1_q_net_x1,
      rst(0) => delay_q_net_x1,
      op => counter_op_net
    );

  dbl_buffer0_8618fa6b3a: entity work.dbl_buffer0_entity_8618fa6b3a
    port map (
      ce_1 => ce_1_sg_x655,
      clk_1 => clk_1_sg_x655,
      din1 => delay_din0_q_net_x0,
      rd_addr => map1_data_net_x0,
      rw_mode => delay_sel_q_net_x0,
      we => delay_we_q_net_x0,
      wr_addr => delay_d0_q_net_x0,
      dout => mux6_y_net_x1
    );

  delay_d0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 13
    )
    port map (
      ce => ce_1_sg_x655,
      clk => clk_1_sg_x655,
      d => slice2_y_net,
      en => '1',
      rst => '1',
      q => delay_d0_q_net_x0
    );

  delay_din0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 16
    )
    port map (
      ce => ce_1_sg_x655,
      clk => clk_1_sg_x655,
      d => mux1_y_net_x1,
      en => '1',
      rst => '1',
      q => delay_din0_q_net_x0
    );

  delay_sel: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x655,
      clk => clk_1_sg_x655,
      d(0) => slice1_y_net,
      en => '1',
      rst => '1',
      q(0) => delay_sel_q_net_x0
    );

  delay_valid: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x655,
      clk => clk_1_sg_x655,
      d(0) => delay_we_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_valid_q_net_x0
    );

  delay_we: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x655,
      clk => clk_1_sg_x655,
      d(0) => delay1_q_net_x1,
      en => '1',
      rst => '1',
      q(0) => delay_we_q_net_x0
    );

  map1: entity work.xlsprom_c09f12_01
    generic map (
      c_address_width => 13,
      c_width => 13,
      core_name0 => "bmg_72_b3ad50e1afdb9e3d",
      latency => 1
    )
    port map (
      addr => slice2_y_net,
      ce => ce_1_sg_x655,
      clk => clk_1_sg_x655,
      en => "1",
      rst => "0",
      data => map1_data_net_x0
    );

  or_x0: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => pre_sync_delay_q_net_x0,
      d1(0) => delay_we_q_net_x0,
      y(0) => or_y_net_x0
    );

  post_sync_delay: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x655,
      clk => clk_1_sg_x655,
      d(0) => mux_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => post_sync_delay_q_net_x0
    );

  pre_sync_delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x655,
      clk => clk_1_sg_x655,
      d(0) => delay_q_net_x1,
      en => '1',
      rst => '1',
      q(0) => pre_sync_delay_q_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 13,
      new_msb => 13,
      x_width => 14,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 12,
      x_width => 14,
      y_width => 13
    )
    port map (
      x => counter_op_net,
      y => slice2_y_net
    );

  sync_delay_en_52d3bba593: entity work.sync_delay_en_entity_52d3bba593
    port map (
      ce_1 => ce_1_sg_x655,
      clk_1 => clk_1_sg_x655,
      en => or_y_net_x0,
      in_x0 => pre_sync_delay_q_net_x0,
      out_x0 => mux_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/qdr_ct/sync_delay"

entity sync_delay_entity_1cfb55c2a5 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_1cfb55c2a5;

architecture structural of sync_delay_entity_1cfb55c2a5 is
  signal ce_1_sg_x656: std_logic;
  signal clk_1_sg_x656: std_logic;
  signal constant1_op_net: std_logic_vector(3 downto 0);
  signal constant2_op_net: std_logic_vector(3 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(3 downto 0);
  signal counter_op_net: std_logic_vector(3 downto 0);
  signal edge_op_y_net_x1: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x1: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x656 <= ce_1;
  clk_1_sg_x656 <= clk_1;
  edge_op_y_net_x1 <= in_x0;
  out_x0 <= mux_y_net_x1;

  constant1: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_a629aefb53
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_67ad97ca70
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_81c610783c35b073",
      op_arith => xlUnsigned,
      op_width => 4
    )
    port map (
      ce => ce_1_sg_x656,
      clk => clk_1_sg_x656,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => edge_op_y_net_x1,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => edge_op_y_net_x1,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => edge_op_y_net_x1,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x1
    );

  relational: entity work.relational_4d3cfceaf4
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_d930162434
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/qdr_ct"

entity qdr_ct_entity_bc79c61df7 is
  port (
    c09f12_01_qdr_ct_qdr_ack: in std_logic; 
    c09f12_01_qdr_ct_qdr_cal_fail: in std_logic; 
    c09f12_01_qdr_ct_qdr_data_out: in std_logic_vector(35 downto 0); 
    c09f12_01_qdr_ct_qdr_phy_ready: in std_logic; 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d: in std_logic_vector(15 downto 0); 
    en: in std_logic; 
    sync: in std_logic; 
    dv: out std_logic; 
    q: out std_logic_vector(63 downto 0); 
    qdr: out std_logic_vector(31 downto 0); 
    qdr_error: out std_logic; 
    qdr_x0: out std_logic_vector(3 downto 0); 
    qdr_x1: out std_logic_vector(35 downto 0); 
    qdr_x2: out std_logic; 
    qdr_x3: out std_logic; 
    snap64: out std_logic_vector(65 downto 0); 
    sync_out: out std_logic
  );
end qdr_ct_entity_bc79c61df7;

architecture structural of qdr_ct_entity_bc79c61df7 is
  signal addr_op_net: std_logic_vector(19 downto 0);
  signal buffer_y_net_x0: std_logic;
  signal c09f12_01_qdr_ct_qdr_ack_net_x1: std_logic;
  signal c09f12_01_qdr_ct_qdr_cal_fail_net_x1: std_logic;
  signal c09f12_01_qdr_ct_qdr_data_out_net_x1: std_logic_vector(35 downto 0);
  signal c09f12_01_qdr_ct_qdr_phy_ready_net_x1: std_logic;
  signal ce_1_sg_x657: std_logic;
  signal clk_1_sg_x657: std_logic;
  signal col_sel_y_net: std_logic_vector(11 downto 0);
  signal concat_y_net: std_logic_vector(18 downto 0);
  signal concatenate_y_net_x20: std_logic_vector(65 downto 0);
  signal constant_op_net_x0: std_logic_vector(3 downto 0);
  signal convert_address_dout_net_x1: std_logic_vector(31 downto 0);
  signal convert_be_dout_net_x1: std_logic_vector(3 downto 0);
  signal convert_cal_fail_dout_net_x0: std_logic;
  signal convert_data_in_dout_net_x1: std_logic_vector(35 downto 0);
  signal convert_rd_en_dout_net_x1: std_logic;
  signal convert_ready_dout_net_x0: std_logic;
  signal convert_wr_en_dout_net_x1: std_logic;
  signal delay1_q_net: std_logic_vector(18 downto 0);
  signal delay1_q_net_x2: std_logic;
  signal delay2_q_net: std_logic_vector(18 downto 0);
  signal delay3_q_net_x0: std_logic;
  signal delay6_q_net_x0: std_logic;
  signal delay_q_net_x2: std_logic;
  signal delay_valid_q_net_x0: std_logic;
  signal dvalid_x3: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal edge_op_y_net_x1: std_logic;
  signal extract_parity_b_net_x1: std_logic_vector(35 downto 0);
  signal first_q_net: std_logic_vector(15 downto 0);
  signal inverter1_op_net: std_logic;
  signal inverter2_op_net: std_logic;
  signal inverter7_op_net: std_logic;
  signal logical12_y_net_x2: std_logic;
  signal logical1_y_net: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical3_y_net: std_logic;
  signal logical6_y_net: std_logic;
  signal logical_y_net: std_logic;
  signal mux1_y_net_x0: std_logic_vector(15 downto 0);
  signal mux1_y_net_x3: std_logic_vector(15 downto 0);
  signal mux1_y_net_x4: std_logic_vector(63 downto 0);
  signal mux2_y_net_x0: std_logic_vector(18 downto 0);
  signal mux6_y_net_x1: std_logic_vector(15 downto 0);
  signal mux_y_net_x1: std_logic;
  signal post_sync_delay_q_net_x0: std_logic;
  signal register2_q_net_x0: std_logic;
  signal register4_q_net: std_logic;
  signal row_sel_y_net: std_logic_vector(5 downto 0);
  signal second_q_net: std_logic_vector(15 downto 0);
  signal slice1_y_net: std_logic;
  signal slice3_y_net: std_logic_vector(18 downto 0);
  signal sync_out_x3: std_logic;

begin
  c09f12_01_qdr_ct_qdr_ack_net_x1 <= c09f12_01_qdr_ct_qdr_ack;
  c09f12_01_qdr_ct_qdr_cal_fail_net_x1 <= c09f12_01_qdr_ct_qdr_cal_fail;
  c09f12_01_qdr_ct_qdr_data_out_net_x1 <= c09f12_01_qdr_ct_qdr_data_out;
  c09f12_01_qdr_ct_qdr_phy_ready_net_x1 <= c09f12_01_qdr_ct_qdr_phy_ready;
  ce_1_sg_x657 <= ce_1;
  clk_1_sg_x657 <= clk_1;
  mux1_y_net_x3 <= d;
  delay1_q_net_x2 <= en;
  delay_q_net_x2 <= sync;
  dv <= dvalid_x3;
  q <= mux1_y_net_x4;
  qdr <= convert_address_dout_net_x1;
  qdr_error <= logical12_y_net_x2;
  qdr_x0 <= convert_be_dout_net_x1;
  qdr_x1 <= convert_data_in_dout_net_x1;
  qdr_x2 <= convert_rd_en_dout_net_x1;
  qdr_x3 <= convert_wr_en_dout_net_x1;
  snap64 <= concatenate_y_net_x20;
  sync_out <= sync_out_x3;

  addr: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_d443bc0f2f8ab282",
      op_arith => xlUnsigned,
      op_width => 20
    )
    port map (
      ce => ce_1_sg_x657,
      clk => clk_1_sg_x657,
      clr => '0',
      en(0) => delay_valid_q_net_x0,
      rst(0) => post_sync_delay_q_net_x0,
      op => addr_op_net
    );

  buffer_to_64_dd495b5105: entity work.buffer_to_64_entity_dd495b5105
    port map (
      ce_1 => ce_1_sg_x657,
      clk_1 => clk_1_sg_x657,
      ct_data => extract_parity_b_net_x1,
      ct_valid => logical1_y_net_x1,
      sync => mux_y_net_x1,
      sync64 => sync_out_x3,
      x64_bit_data => mux1_y_net_x4,
      x64_bit_valid => dvalid_x3
    );

  buffer_x0: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 18,
      x_width => 19,
      y_width => 1
    )
    port map (
      x => slice3_y_net,
      y(0) => buffer_y_net_x0
    );

  bus_create2_7faa65db15: entity work.bus_create2_entity_7faa65db15
    port map (
      in1 => sync_out_x3,
      in2 => mux1_y_net_x4,
      in3 => dvalid_x3,
      bus_out => concatenate_y_net_x20
    );

  col_sel: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 17,
      x_width => 19,
      y_width => 12
    )
    port map (
      x => slice3_y_net,
      y => col_sel_y_net
    );

  concat: entity work.concat_566f280c69
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => inverter2_op_net,
      in1 => row_sel_y_net,
      in2 => col_sel_y_net,
      y => concat_y_net
    );

  constant_x0: entity work.constant_06590e4008
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x0
    );

  delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 19
    )
    port map (
      ce => ce_1_sg_x657,
      clk => clk_1_sg_x657,
      d => concat_y_net,
      en => '1',
      rst => '1',
      q => delay1_q_net
    );

  delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 19
    )
    port map (
      ce => ce_1_sg_x657,
      clk => clk_1_sg_x657,
      d => slice3_y_net,
      en => '1',
      rst => '1',
      q => delay2_q_net
    );

  delay3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x657,
      clk => clk_1_sg_x657,
      d(0) => logical3_y_net,
      en => '1',
      rst => '1',
      q(0) => delay3_q_net_x0
    );

  delay6: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x657,
      clk => clk_1_sg_x657,
      d(0) => delay3_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay6_q_net_x0
    );

  edge_detect1_83b7cdb414: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x657,
      clk_1 => clk_1_sg_x657,
      in_x0 => buffer_y_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  edge_detect_6f91a5a955: entity work.edge_detect1_entity_75cedd2450
    port map (
      ce_1 => ce_1_sg_x657,
      clk_1 => clk_1_sg_x657,
      in_x0 => register2_q_net_x0,
      out_x0 => edge_op_y_net_x1
    );

  first: entity work.xlregister
    generic map (
      d_width => 16,
      init_value => b"0000000000000000"
    )
    port map (
      ce => ce_1_sg_x657,
      clk => clk_1_sg_x657,
      d => mux6_y_net_x1,
      en(0) => logical1_y_net,
      rst => "0",
      q => first_q_net
    );

  inverter1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x657,
      clk => clk_1_sg_x657,
      clr => '0',
      ip(0) => slice1_y_net,
      op(0) => inverter1_op_net
    );

  inverter2: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x657,
      clk => clk_1_sg_x657,
      clr => '0',
      ip(0) => buffer_y_net_x0,
      op(0) => inverter2_op_net
    );

  inverter7: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x657,
      clk => clk_1_sg_x657,
      clr => '0',
      ip(0) => convert_ready_dout_net_x0,
      op(0) => inverter7_op_net
    );

  logical: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => slice1_y_net,
      d1(0) => delay_valid_q_net_x0,
      y(0) => logical_y_net
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter1_op_net,
      d1(0) => delay_valid_q_net_x0,
      y(0) => logical1_y_net
    );

  logical12: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x657,
      clk => clk_1_sg_x657,
      clr => '0',
      d0(0) => inverter7_op_net,
      d1(0) => convert_cal_fail_dout_net_x0,
      y(0) => logical12_y_net_x2
    );

  logical3: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_valid_q_net_x0,
      d1(0) => slice1_y_net,
      y(0) => logical3_y_net
    );

  logical6: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register4_q_net,
      d1(0) => logical3_y_net,
      y(0) => logical6_y_net
    );

  mux1: entity work.mux_bfe1d4f686
    port map (
      ce => ce_1_sg_x657,
      clk => clk_1_sg_x657,
      clr => '0',
      d0 => second_q_net,
      d1 => first_q_net,
      sel(0) => delay3_q_net_x0,
      y => mux1_y_net_x0
    );

  mux2: entity work.mux_58c87f2f80
    port map (
      ce => ce_1_sg_x657,
      clk => clk_1_sg_x657,
      clr => '0',
      d0 => delay1_q_net,
      d1 => delay2_q_net,
      sel(0) => delay3_q_net_x0,
      y => mux2_y_net_x0
    );

  qdr_5ce551e581: entity work.qdr_entity_5ce551e581
    port map (
      address => mux2_y_net_x0,
      be => constant_op_net_x0,
      c09f12_01_qdr_ct_qdr_ack => c09f12_01_qdr_ct_qdr_ack_net_x1,
      c09f12_01_qdr_ct_qdr_cal_fail => c09f12_01_qdr_ct_qdr_cal_fail_net_x1,
      c09f12_01_qdr_ct_qdr_data_out => c09f12_01_qdr_ct_qdr_data_out_net_x1,
      c09f12_01_qdr_ct_qdr_phy_ready => c09f12_01_qdr_ct_qdr_phy_ready_net_x1,
      ce_1 => ce_1_sg_x657,
      clk_1 => clk_1_sg_x657,
      data_in => mux1_y_net_x0,
      rd_en => delay3_q_net_x0,
      wr_en => delay6_q_net_x0,
      cal_fail => convert_cal_fail_dout_net_x0,
      convert_address_x0 => convert_address_dout_net_x1,
      convert_be_x0 => convert_be_dout_net_x1,
      convert_data_in_x0 => convert_data_in_dout_net_x1,
      convert_rd_en_x0 => convert_rd_en_dout_net_x1,
      convert_wr_en_x0 => convert_wr_en_dout_net_x1,
      data_out => extract_parity_b_net_x1,
      data_valid => logical1_y_net_x1,
      phy_ready => convert_ready_dout_net_x0
    );

  register2: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x657,
      clk => clk_1_sg_x657,
      d(0) => post_sync_delay_q_net_x0,
      en(0) => post_sync_delay_q_net_x0,
      rst(0) => logical6_y_net,
      q(0) => register2_q_net_x0
    );

  register4: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x657,
      clk => clk_1_sg_x657,
      d(0) => edge_op_y_net_x0,
      en(0) => edge_op_y_net_x0,
      rst(0) => logical6_y_net,
      q(0) => register4_q_net
    );

  reorder_02db5289ec: entity work.reorder_entity_02db5289ec
    port map (
      ce_1 => ce_1_sg_x657,
      clk_1 => clk_1_sg_x657,
      din0 => mux1_y_net_x3,
      en => delay1_q_net_x2,
      sync => delay_q_net_x2,
      dout0 => mux6_y_net_x1,
      sync_out => post_sync_delay_q_net_x0,
      valid => delay_valid_q_net_x0
    );

  row_sel: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 5,
      x_width => 19,
      y_width => 6
    )
    port map (
      x => slice3_y_net,
      y => row_sel_y_net
    );

  second: entity work.xlregister
    generic map (
      d_width => 16,
      init_value => b"0000000000000000"
    )
    port map (
      ce => ce_1_sg_x657,
      clk => clk_1_sg_x657,
      d => mux6_y_net_x1,
      en(0) => logical_y_net,
      rst => "0",
      q => second_q_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 20,
      y_width => 1
    )
    port map (
      x => addr_op_net,
      y(0) => slice1_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 19,
      x_width => 20,
      y_width => 19
    )
    port map (
      x => addr_op_net,
      y => slice3_y_net
    );

  sync_delay_1cfb55c2a5: entity work.sync_delay_entity_1cfb55c2a5
    port map (
      ce_1 => ce_1_sg_x657,
      clk_1 => clk_1_sg_x657,
      in_x0 => edge_op_y_net_x1,
      out_x0 => mux_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/quantisation/bus_create2"

entity bus_create2_entity_b94cc2359f is
  port (
    in1: in std_logic_vector(7 downto 0); 
    in2: in std_logic_vector(7 downto 0); 
    bus_out: out std_logic_vector(15 downto 0)
  );
end bus_create2_entity_b94cc2359f;

architecture structural of bus_create2_entity_b94cc2359f is
  signal concat_y_net_x1: std_logic_vector(7 downto 0);
  signal concat_y_net_x2: std_logic_vector(7 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(7 downto 0);

begin
  concat_y_net_x1 <= in1;
  concat_y_net_x2 <= in2;
  bus_out <= concatenate_y_net_x1;

  concatenate: entity work.concat_8e53793314
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x1
    );

  reinterpret1: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x1,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x2,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/quantisation/bus_expand3"

entity bus_expand3_entity_825300c8f2 is
  port (
    bus_in: in std_logic_vector(63 downto 0); 
    lsb_out1: out std_logic_vector(15 downto 0); 
    msb_out4: out std_logic_vector(15 downto 0); 
    out2: out std_logic_vector(15 downto 0); 
    out3: out std_logic_vector(15 downto 0)
  );
end bus_expand3_entity_825300c8f2;

architecture structural of bus_expand3_entity_825300c8f2 is
  signal delay46_q_net_x0: std_logic_vector(63 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(15 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(15 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(15 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(15 downto 0);
  signal slice1_y_net: std_logic_vector(15 downto 0);
  signal slice2_y_net: std_logic_vector(15 downto 0);
  signal slice3_y_net: std_logic_vector(15 downto 0);
  signal slice4_y_net: std_logic_vector(15 downto 0);

begin
  delay46_q_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out4 <= reinterpret4_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;

  reinterpret1: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_151459306d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => delay46_q_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 31,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => delay46_q_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 32,
      new_msb => 47,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => delay46_q_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 48,
      new_msb => 63,
      x_width => 64,
      y_width => 16
    )
    port map (
      x => delay46_q_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/quantisation/quant/complex_mult_simple_full"

entity complex_mult_simple_full_entity_b8d4cf41a3 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    i1: in std_logic_vector(15 downto 0); 
    i2: in std_logic_vector(30 downto 0); 
    r1: in std_logic_vector(15 downto 0); 
    r2: in std_logic_vector(30 downto 0); 
    imag: out std_logic_vector(47 downto 0); 
    real_x0: out std_logic_vector(47 downto 0)
  );
end complex_mult_simple_full_entity_b8d4cf41a3;

architecture structural of complex_mult_simple_full_entity_b8d4cf41a3 is
  signal ce_1_sg_x658: std_logic;
  signal clk_1_sg_x658: std_logic;
  signal force_im_output_port_net_x1: std_logic_vector(30 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(30 downto 0);
  signal i1i2_p_net: std_logic_vector(46 downto 0);
  signal i1r2_p_net: std_logic_vector(46 downto 0);
  signal imag_sum_s_net_x0: std_logic_vector(47 downto 0);
  signal r1i2_p_net: std_logic_vector(46 downto 0);
  signal r1r2_p_net: std_logic_vector(46 downto 0);
  signal real_sum_s_net_x0: std_logic_vector(47 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(15 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(15 downto 0);

begin
  ce_1_sg_x658 <= ce_1;
  clk_1_sg_x658 <= clk_1;
  reinterpret3_output_port_net_x1 <= i1;
  force_im_output_port_net_x1 <= i2;
  reinterpret4_output_port_net_x1 <= r1;
  force_re_output_port_net_x1 <= r2;
  imag <= imag_sum_s_net_x0;
  real_x0 <= real_sum_s_net_x0;

  i1i2: entity work.mult_08763981bc
    port map (
      a => reinterpret3_output_port_net_x1,
      b => force_im_output_port_net_x1,
      ce => ce_1_sg_x658,
      clk => clk_1_sg_x658,
      clr => '0',
      p => i1i2_p_net
    );

  i1r2: entity work.mult_08763981bc
    port map (
      a => reinterpret3_output_port_net_x1,
      b => force_re_output_port_net_x1,
      ce => ce_1_sg_x658,
      clk => clk_1_sg_x658,
      clr => '0',
      p => i1r2_p_net
    );

  imag_sum: entity work.addsub_c1a1687803
    port map (
      a => i1r2_p_net,
      b => r1i2_p_net,
      ce => ce_1_sg_x658,
      clk => clk_1_sg_x658,
      clr => '0',
      s => imag_sum_s_net_x0
    );

  r1i2: entity work.mult_08763981bc
    port map (
      a => reinterpret4_output_port_net_x1,
      b => force_im_output_port_net_x1,
      ce => ce_1_sg_x658,
      clk => clk_1_sg_x658,
      clr => '0',
      p => r1i2_p_net
    );

  r1r2: entity work.mult_08763981bc
    port map (
      a => reinterpret4_output_port_net_x1,
      b => force_re_output_port_net_x1,
      ce => ce_1_sg_x658,
      clk => clk_1_sg_x658,
      clr => '0',
      p => r1r2_p_net
    );

  real_sum: entity work.addsub_31c0c7c8b5
    port map (
      a => r1r2_p_net,
      b => i1i2_p_net,
      ce => ce_1_sg_x658,
      clk => clk_1_sg_x658,
      clr => '0',
      s => real_sum_s_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/quantisation/quant/convert_of0/convert"

entity convert_entity_c9a192b6cd is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(47 downto 0); 
    out_x0: out std_logic_vector(3 downto 0)
  );
end convert_entity_c9a192b6cd;

architecture structural of convert_entity_c9a192b6cd is
  signal adder_s_net_x0: std_logic_vector(3 downto 0);
  signal almost_half_op_net: std_logic_vector(18 downto 0);
  signal bit_y_net: std_logic;
  signal ce_1_sg_x660: std_logic;
  signal clk_1_sg_x660: std_logic;
  signal concat_y_net: std_logic_vector(48 downto 0);
  signal constant_op_net: std_logic;
  signal force1_output_port_net: std_logic_vector(48 downto 0);
  signal force2_output_port_net: std_logic_vector(18 downto 0);
  signal real_sum_s_net_x1: std_logic_vector(47 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(47 downto 0);
  signal tweak_op_y_net: std_logic;

begin
  ce_1_sg_x660 <= ce_1;
  clk_1_sg_x660 <= clk_1;
  real_sum_s_net_x1 <= in_x0;
  out_x0 <= adder_s_net_x0;

  adder: entity work.xladdsub_c09f12_01
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 19,
      a_width => 49,
      b_arith => xlUnsigned,
      b_bin_pt => 19,
      b_width => 19,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 50,
      core_name0 => "addsb_11_0_6791698c7be255e7",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 50,
      latency => 2,
      overflow => 2,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 3,
      s_width => 4
    )
    port map (
      a => force1_output_port_net,
      b => force2_output_port_net,
      ce => ce_1_sg_x660,
      clk => clk_1_sg_x660,
      clr => '0',
      en => "1",
      s => adder_s_net_x0
    );

  almost_half: entity work.constant_b6bf25629b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => almost_half_op_net
    );

  bit: entity work.xlslice
    generic map (
      new_lsb => 15,
      new_msb => 15,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x1,
      y(0) => bit_y_net
    );

  concat: entity work.concat_b6b0f55f17
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret_output_port_net,
      in1(0) => tweak_op_y_net,
      y => concat_y_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  force1: entity work.reinterpret_e155c4bb93
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net,
      output_port => force1_output_port_net
    );

  force2: entity work.reinterpret_d2180c9169
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => almost_half_op_net,
      output_port => force2_output_port_net
    );

  reinterpret: entity work.reinterpret_72d35fae55
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => real_sum_s_net_x1,
      output_port => reinterpret_output_port_net
    );

  tweak_op: entity work.logical_938d99ac11
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => bit_y_net,
      d1(0) => constant_op_net,
      y(0) => tweak_op_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/quantisation/quant/convert_of0"

entity convert_of0_entity_7fe80d503c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(47 downto 0); 
    dout: out std_logic_vector(3 downto 0); 
    of_x0: out std_logic
  );
end convert_of0_entity_7fe80d503c;

architecture structural of convert_of0_entity_7fe80d503c is
  signal adder_s_net_x1: std_logic_vector(3 downto 0);
  signal all_0s_y_net: std_logic;
  signal all_1s_y_net: std_logic;
  signal and_y_net_x0: std_logic;
  signal ce_1_sg_x661: std_logic;
  signal clk_1_sg_x661: std_logic;
  signal invert10_op_net: std_logic;
  signal invert11_op_net: std_logic;
  signal invert12_op_net: std_logic;
  signal invert13_op_net: std_logic;
  signal invert14_op_net: std_logic;
  signal invert15_op_net: std_logic;
  signal invert16_op_net: std_logic;
  signal invert17_op_net: std_logic;
  signal invert18_op_net: std_logic;
  signal invert19_op_net: std_logic;
  signal invert1_op_net: std_logic;
  signal invert20_op_net: std_logic;
  signal invert21_op_net: std_logic;
  signal invert22_op_net: std_logic;
  signal invert23_op_net: std_logic;
  signal invert24_op_net: std_logic;
  signal invert25_op_net: std_logic;
  signal invert26_op_net: std_logic;
  signal invert27_op_net: std_logic;
  signal invert28_op_net: std_logic;
  signal invert29_op_net: std_logic;
  signal invert2_op_net: std_logic;
  signal invert30_op_net: std_logic;
  signal invert31_op_net: std_logic;
  signal invert3_op_net: std_logic;
  signal invert4_op_net: std_logic;
  signal invert5_op_net: std_logic;
  signal invert6_op_net: std_logic;
  signal invert7_op_net: std_logic;
  signal invert8_op_net: std_logic;
  signal invert9_op_net: std_logic;
  signal real_sum_s_net_x2: std_logic_vector(47 downto 0);
  signal slice10_y_net: std_logic;
  signal slice11_y_net: std_logic;
  signal slice12_y_net: std_logic;
  signal slice13_y_net: std_logic;
  signal slice14_y_net: std_logic;
  signal slice15_y_net: std_logic;
  signal slice16_y_net: std_logic;
  signal slice17_y_net: std_logic;
  signal slice18_y_net: std_logic;
  signal slice19_y_net: std_logic;
  signal slice1_y_net: std_logic;
  signal slice20_y_net: std_logic;
  signal slice21_y_net: std_logic;
  signal slice22_y_net: std_logic;
  signal slice23_y_net: std_logic;
  signal slice24_y_net: std_logic;
  signal slice25_y_net: std_logic;
  signal slice26_y_net: std_logic;
  signal slice27_y_net: std_logic;
  signal slice28_y_net: std_logic;
  signal slice29_y_net: std_logic;
  signal slice2_y_net: std_logic;
  signal slice30_y_net: std_logic;
  signal slice31_y_net: std_logic;
  signal slice3_y_net: std_logic;
  signal slice4_y_net: std_logic;
  signal slice5_y_net: std_logic;
  signal slice6_y_net: std_logic;
  signal slice7_y_net: std_logic;
  signal slice8_y_net: std_logic;
  signal slice9_y_net: std_logic;

begin
  ce_1_sg_x661 <= ce_1;
  clk_1_sg_x661 <= clk_1;
  real_sum_s_net_x2 <= din;
  dout <= adder_s_net_x1;
  of_x0 <= and_y_net_x0;

  all_0s: entity work.logical_b2983b6154
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      d0(0) => invert1_op_net,
      d1(0) => invert2_op_net,
      d10(0) => invert11_op_net,
      d11(0) => invert12_op_net,
      d12(0) => invert13_op_net,
      d13(0) => invert14_op_net,
      d14(0) => invert15_op_net,
      d15(0) => invert16_op_net,
      d16(0) => invert17_op_net,
      d17(0) => invert18_op_net,
      d18(0) => invert19_op_net,
      d19(0) => invert20_op_net,
      d2(0) => invert3_op_net,
      d20(0) => invert21_op_net,
      d21(0) => invert22_op_net,
      d22(0) => invert23_op_net,
      d23(0) => invert24_op_net,
      d24(0) => invert25_op_net,
      d25(0) => invert26_op_net,
      d26(0) => invert27_op_net,
      d27(0) => invert28_op_net,
      d28(0) => invert29_op_net,
      d29(0) => invert30_op_net,
      d3(0) => invert4_op_net,
      d30(0) => invert31_op_net,
      d4(0) => invert5_op_net,
      d5(0) => invert6_op_net,
      d6(0) => invert7_op_net,
      d7(0) => invert8_op_net,
      d8(0) => invert9_op_net,
      d9(0) => invert10_op_net,
      y(0) => all_0s_y_net
    );

  all_1s: entity work.logical_b2983b6154
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      d0(0) => slice1_y_net,
      d1(0) => slice2_y_net,
      d10(0) => slice11_y_net,
      d11(0) => slice12_y_net,
      d12(0) => slice13_y_net,
      d13(0) => slice14_y_net,
      d14(0) => slice15_y_net,
      d15(0) => slice16_y_net,
      d16(0) => slice17_y_net,
      d17(0) => slice18_y_net,
      d18(0) => slice19_y_net,
      d19(0) => slice20_y_net,
      d2(0) => slice3_y_net,
      d20(0) => slice21_y_net,
      d21(0) => slice22_y_net,
      d22(0) => slice23_y_net,
      d23(0) => slice24_y_net,
      d24(0) => slice25_y_net,
      d25(0) => slice26_y_net,
      d26(0) => slice27_y_net,
      d27(0) => slice28_y_net,
      d28(0) => slice29_y_net,
      d29(0) => slice30_y_net,
      d3(0) => slice4_y_net,
      d30(0) => slice31_y_net,
      d4(0) => slice5_y_net,
      d5(0) => slice6_y_net,
      d6(0) => slice7_y_net,
      d7(0) => slice8_y_net,
      d8(0) => slice9_y_net,
      d9(0) => slice10_y_net,
      y(0) => all_1s_y_net
    );

  and_x0: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => all_0s_y_net,
      d1(0) => all_1s_y_net,
      y(0) => and_y_net_x0
    );

  convert_c9a192b6cd: entity work.convert_entity_c9a192b6cd
    port map (
      ce_1 => ce_1_sg_x661,
      clk_1 => clk_1_sg_x661,
      in_x0 => real_sum_s_net_x2,
      out_x0 => adder_s_net_x1
    );

  invert1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice1_y_net,
      op(0) => invert1_op_net
    );

  invert10: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice10_y_net,
      op(0) => invert10_op_net
    );

  invert11: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice11_y_net,
      op(0) => invert11_op_net
    );

  invert12: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice12_y_net,
      op(0) => invert12_op_net
    );

  invert13: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice13_y_net,
      op(0) => invert13_op_net
    );

  invert14: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice14_y_net,
      op(0) => invert14_op_net
    );

  invert15: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice15_y_net,
      op(0) => invert15_op_net
    );

  invert16: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice16_y_net,
      op(0) => invert16_op_net
    );

  invert17: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice17_y_net,
      op(0) => invert17_op_net
    );

  invert18: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice18_y_net,
      op(0) => invert18_op_net
    );

  invert19: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice19_y_net,
      op(0) => invert19_op_net
    );

  invert2: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice2_y_net,
      op(0) => invert2_op_net
    );

  invert20: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice20_y_net,
      op(0) => invert20_op_net
    );

  invert21: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice21_y_net,
      op(0) => invert21_op_net
    );

  invert22: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice22_y_net,
      op(0) => invert22_op_net
    );

  invert23: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice23_y_net,
      op(0) => invert23_op_net
    );

  invert24: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice24_y_net,
      op(0) => invert24_op_net
    );

  invert25: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice25_y_net,
      op(0) => invert25_op_net
    );

  invert26: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice26_y_net,
      op(0) => invert26_op_net
    );

  invert27: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice27_y_net,
      op(0) => invert27_op_net
    );

  invert28: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice28_y_net,
      op(0) => invert28_op_net
    );

  invert29: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice29_y_net,
      op(0) => invert29_op_net
    );

  invert3: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice3_y_net,
      op(0) => invert3_op_net
    );

  invert30: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice30_y_net,
      op(0) => invert30_op_net
    );

  invert31: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice31_y_net,
      op(0) => invert31_op_net
    );

  invert4: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice4_y_net,
      op(0) => invert4_op_net
    );

  invert5: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice5_y_net,
      op(0) => invert5_op_net
    );

  invert6: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice6_y_net,
      op(0) => invert6_op_net
    );

  invert7: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice7_y_net,
      op(0) => invert7_op_net
    );

  invert8: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice8_y_net,
      op(0) => invert8_op_net
    );

  invert9: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x661,
      clk => clk_1_sg_x661,
      clr => '0',
      ip(0) => slice9_y_net,
      op(0) => invert9_op_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 47,
      new_msb => 47,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice1_y_net
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 38,
      new_msb => 38,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice10_y_net
    );

  slice11: entity work.xlslice
    generic map (
      new_lsb => 37,
      new_msb => 37,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice11_y_net
    );

  slice12: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 36,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice12_y_net
    );

  slice13: entity work.xlslice
    generic map (
      new_lsb => 35,
      new_msb => 35,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice13_y_net
    );

  slice14: entity work.xlslice
    generic map (
      new_lsb => 34,
      new_msb => 34,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice14_y_net
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 33,
      new_msb => 33,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 32,
      new_msb => 32,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice16_y_net
    );

  slice17: entity work.xlslice
    generic map (
      new_lsb => 31,
      new_msb => 31,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice17_y_net
    );

  slice18: entity work.xlslice
    generic map (
      new_lsb => 30,
      new_msb => 30,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice18_y_net
    );

  slice19: entity work.xlslice
    generic map (
      new_lsb => 29,
      new_msb => 29,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice19_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 46,
      new_msb => 46,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice2_y_net
    );

  slice20: entity work.xlslice
    generic map (
      new_lsb => 28,
      new_msb => 28,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice20_y_net
    );

  slice21: entity work.xlslice
    generic map (
      new_lsb => 27,
      new_msb => 27,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice21_y_net
    );

  slice22: entity work.xlslice
    generic map (
      new_lsb => 26,
      new_msb => 26,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice22_y_net
    );

  slice23: entity work.xlslice
    generic map (
      new_lsb => 25,
      new_msb => 25,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice23_y_net
    );

  slice24: entity work.xlslice
    generic map (
      new_lsb => 24,
      new_msb => 24,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice24_y_net
    );

  slice25: entity work.xlslice
    generic map (
      new_lsb => 23,
      new_msb => 23,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice25_y_net
    );

  slice26: entity work.xlslice
    generic map (
      new_lsb => 22,
      new_msb => 22,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice26_y_net
    );

  slice27: entity work.xlslice
    generic map (
      new_lsb => 21,
      new_msb => 21,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice27_y_net
    );

  slice28: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 20,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice28_y_net
    );

  slice29: entity work.xlslice
    generic map (
      new_lsb => 19,
      new_msb => 19,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice29_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 45,
      new_msb => 45,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice3_y_net
    );

  slice30: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 18,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice30_y_net
    );

  slice31: entity work.xlslice
    generic map (
      new_lsb => 17,
      new_msb => 17,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice31_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 44,
      new_msb => 44,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 43,
      new_msb => 43,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 42,
      new_msb => 42,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 41,
      new_msb => 41,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 40,
      new_msb => 40,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 39,
      new_msb => 39,
      x_width => 48,
      y_width => 1
    )
    port map (
      x => real_sum_s_net_x2,
      y(0) => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/quantisation/quant/ri_to_c"

entity ri_to_c_entity_b0914dff9c is
  port (
    im: in std_logic_vector(3 downto 0); 
    re: in std_logic_vector(3 downto 0); 
    c: out std_logic_vector(7 downto 0)
  );
end ri_to_c_entity_b0914dff9c;

architecture structural of ri_to_c_entity_b0914dff9c is
  signal concat_y_net_x2: std_logic_vector(7 downto 0);
  signal force_im_output_port_net: std_logic_vector(3 downto 0);
  signal force_re_output_port_net: std_logic_vector(3 downto 0);
  signal mux1_y_net_x0: std_logic_vector(3 downto 0);
  signal mux_y_net_x0: std_logic_vector(3 downto 0);

begin
  mux1_y_net_x0 <= im;
  mux_y_net_x0 <= re;
  c <= concat_y_net_x2;

  concat: entity work.concat_1a070f1f35
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => force_re_output_port_net,
      in1 => force_im_output_port_net,
      y => concat_y_net_x2
    );

  force_im: entity work.reinterpret_df53fd8fe7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux1_y_net_x0,
      output_port => force_im_output_port_net
    );

  force_re: entity work.reinterpret_df53fd8fe7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux_y_net_x0,
      output_port => force_re_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/quantisation/quant"

entity quant_entity_63fa21c236 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din0: in std_logic_vector(61 downto 0); 
    din1: in std_logic_vector(61 downto 0); 
    dv: in std_logic; 
    imag_in0: in std_logic_vector(15 downto 0); 
    imag_in1: in std_logic_vector(15 downto 0); 
    real_in0: in std_logic_vector(15 downto 0); 
    real_in1: in std_logic_vector(15 downto 0); 
    sync_in: in std_logic; 
    dout0: out std_logic_vector(7 downto 0); 
    dout1: out std_logic_vector(7 downto 0); 
    dv_out: out std_logic; 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end quant_entity_63fa21c236;

architecture structural of quant_entity_63fa21c236 is
  signal adder_s_net_x1: std_logic_vector(3 downto 0);
  signal adder_s_net_x2: std_logic_vector(3 downto 0);
  signal adder_s_net_x3: std_logic_vector(3 downto 0);
  signal adder_s_net_x4: std_logic_vector(3 downto 0);
  signal and_y_net_x0: std_logic;
  signal and_y_net_x1: std_logic;
  signal and_y_net_x2: std_logic;
  signal and_y_net_x3: std_logic;
  signal ce_1_sg_x668: std_logic;
  signal clk_1_sg_x668: std_logic;
  signal concat_y_net_x4: std_logic_vector(7 downto 0);
  signal concat_y_net_x5: std_logic_vector(7 downto 0);
  signal constant1_op_net: std_logic_vector(47 downto 0);
  signal constant2_op_net: std_logic_vector(47 downto 0);
  signal constant3_op_net: std_logic_vector(47 downto 0);
  signal constant4_op_net: std_logic_vector(3 downto 0);
  signal constant5_op_net: std_logic_vector(3 downto 0);
  signal constant6_op_net: std_logic_vector(3 downto 0);
  signal constant7_op_net: std_logic_vector(3 downto 0);
  signal constant8_op_net: std_logic_vector(47 downto 0);
  signal delay13_q_net: std_logic;
  signal delay14_q_net: std_logic;
  signal delay16_q_net_x1: std_logic;
  signal delay1_q_net: std_logic;
  signal delay2_q_net: std_logic;
  signal delay43_q_net_x0: std_logic;
  signal delay45_q_net_x0: std_logic;
  signal delay6_q_net_x1: std_logic;
  signal force_im_output_port_net_x1: std_logic_vector(30 downto 0);
  signal force_im_output_port_net_x2: std_logic_vector(30 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(30 downto 0);
  signal force_re_output_port_net_x2: std_logic_vector(30 downto 0);
  signal imag_sum_s_net_x2: std_logic_vector(47 downto 0);
  signal imag_sum_s_net_x3: std_logic_vector(47 downto 0);
  signal logical_y_net_x2: std_logic;
  signal mux1_y_net_x0: std_logic_vector(3 downto 0);
  signal mux2_y_net_x0: std_logic_vector(3 downto 0);
  signal mux3_y_net_x0: std_logic_vector(3 downto 0);
  signal mux_y_net_x0: std_logic_vector(3 downto 0);
  signal real_sum_s_net_x2: std_logic_vector(47 downto 0);
  signal real_sum_s_net_x3: std_logic_vector(47 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(61 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(15 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(61 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(15 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(15 downto 0);
  signal relational1_op_net: std_logic;
  signal relational2_op_net: std_logic;
  signal relational3_op_net: std_logic;
  signal relational4_op_net: std_logic;

begin
  ce_1_sg_x668 <= ce_1;
  clk_1_sg_x668 <= clk_1;
  reinterpret2_output_port_net_x4 <= din0;
  reinterpret1_output_port_net_x4 <= din1;
  delay45_q_net_x0 <= dv;
  reinterpret3_output_port_net_x2 <= imag_in0;
  reinterpret1_output_port_net_x3 <= imag_in1;
  reinterpret4_output_port_net_x2 <= real_in0;
  reinterpret2_output_port_net_x3 <= real_in1;
  delay43_q_net_x0 <= sync_in;
  dout0 <= concat_y_net_x4;
  dout1 <= concat_y_net_x5;
  dv_out <= delay16_q_net_x1;
  of_x0 <= logical_y_net_x2;
  sync_out <= delay6_q_net_x1;

  c_to_ri1_34c6a32ddc: entity work.c_to_ri_entity_6fb343188d
    port map (
      c => reinterpret1_output_port_net_x4,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  c_to_ri4_71b4d5906d: entity work.c_to_ri_entity_6fb343188d
    port map (
      c => reinterpret2_output_port_net_x4,
      im => force_im_output_port_net_x2,
      re => force_re_output_port_net_x2
    );

  complex_mult_simple_full1_b949328f47: entity work.complex_mult_simple_full_entity_b8d4cf41a3
    port map (
      ce_1 => ce_1_sg_x668,
      clk_1 => clk_1_sg_x668,
      i1 => reinterpret1_output_port_net_x3,
      i2 => force_im_output_port_net_x1,
      r1 => reinterpret2_output_port_net_x3,
      r2 => force_re_output_port_net_x1,
      imag => imag_sum_s_net_x3,
      real_x0 => real_sum_s_net_x3
    );

  complex_mult_simple_full_b8d4cf41a3: entity work.complex_mult_simple_full_entity_b8d4cf41a3
    port map (
      ce_1 => ce_1_sg_x668,
      clk_1 => clk_1_sg_x668,
      i1 => reinterpret3_output_port_net_x2,
      i2 => force_im_output_port_net_x2,
      r1 => reinterpret4_output_port_net_x2,
      r2 => force_re_output_port_net_x2,
      imag => imag_sum_s_net_x2,
      real_x0 => real_sum_s_net_x2
    );

  constant1: entity work.constant_e99b17db38
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_e99b17db38
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_e99b17db38
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant3_op_net
    );

  constant4: entity work.constant_a629aefb53
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant4_op_net
    );

  constant5: entity work.constant_a629aefb53
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant5_op_net
    );

  constant6: entity work.constant_a629aefb53
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant6_op_net
    );

  constant7: entity work.constant_a629aefb53
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant7_op_net
    );

  constant8: entity work.constant_e99b17db38
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant8_op_net
    );

  convert_of0_7fe80d503c: entity work.convert_of0_entity_7fe80d503c
    port map (
      ce_1 => ce_1_sg_x668,
      clk_1 => clk_1_sg_x668,
      din => real_sum_s_net_x2,
      dout => adder_s_net_x1,
      of_x0 => and_y_net_x0
    );

  convert_of1_32cbcac732: entity work.convert_of0_entity_7fe80d503c
    port map (
      ce_1 => ce_1_sg_x668,
      clk_1 => clk_1_sg_x668,
      din => imag_sum_s_net_x2,
      dout => adder_s_net_x2,
      of_x0 => and_y_net_x1
    );

  convert_of2_ffebd21dfd: entity work.convert_of0_entity_7fe80d503c
    port map (
      ce_1 => ce_1_sg_x668,
      clk_1 => clk_1_sg_x668,
      din => real_sum_s_net_x3,
      dout => adder_s_net_x3,
      of_x0 => and_y_net_x2
    );

  convert_of3_e72d05c2e8: entity work.convert_of0_entity_7fe80d503c
    port map (
      ce_1 => ce_1_sg_x668,
      clk_1 => clk_1_sg_x668,
      din => imag_sum_s_net_x3,
      dout => adder_s_net_x4,
      of_x0 => and_y_net_x3
    );

  delay1: entity work.delay_14a6a51cbc
    port map (
      ce => ce_1_sg_x668,
      clk => clk_1_sg_x668,
      clr => '0',
      d(0) => delay43_q_net_x0,
      q(0) => delay1_q_net
    );

  delay13: entity work.delay_14a6a51cbc
    port map (
      ce => ce_1_sg_x668,
      clk => clk_1_sg_x668,
      clr => '0',
      d(0) => delay45_q_net_x0,
      q(0) => delay13_q_net
    );

  delay14: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x668,
      clk => clk_1_sg_x668,
      clr => '0',
      d(0) => delay13_q_net,
      q(0) => delay14_q_net
    );

  delay16: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x668,
      clk => clk_1_sg_x668,
      clr => '0',
      d(0) => delay14_q_net,
      q(0) => delay16_q_net_x1
    );

  delay2: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x668,
      clk => clk_1_sg_x668,
      clr => '0',
      d(0) => delay1_q_net,
      q(0) => delay2_q_net
    );

  delay6: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x668,
      clk => clk_1_sg_x668,
      clr => '0',
      d(0) => delay2_q_net,
      q(0) => delay6_q_net_x1
    );

  logical: entity work.logical_a6d07705dd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => and_y_net_x0,
      d1(0) => and_y_net_x1,
      d2(0) => and_y_net_x2,
      d3(0) => and_y_net_x3,
      y(0) => logical_y_net_x2
    );

  mux: entity work.mux_ec62f2b06a
    port map (
      ce => ce_1_sg_x668,
      clk => clk_1_sg_x668,
      clr => '0',
      d0 => adder_s_net_x1,
      d1 => constant4_op_net,
      sel(0) => relational1_op_net,
      y => mux_y_net_x0
    );

  mux1: entity work.mux_ec62f2b06a
    port map (
      ce => ce_1_sg_x668,
      clk => clk_1_sg_x668,
      clr => '0',
      d0 => adder_s_net_x2,
      d1 => constant5_op_net,
      sel(0) => relational2_op_net,
      y => mux1_y_net_x0
    );

  mux2: entity work.mux_ec62f2b06a
    port map (
      ce => ce_1_sg_x668,
      clk => clk_1_sg_x668,
      clr => '0',
      d0 => adder_s_net_x3,
      d1 => constant6_op_net,
      sel(0) => relational3_op_net,
      y => mux2_y_net_x0
    );

  mux3: entity work.mux_ec62f2b06a
    port map (
      ce => ce_1_sg_x668,
      clk => clk_1_sg_x668,
      clr => '0',
      d0 => adder_s_net_x4,
      d1 => constant7_op_net,
      sel(0) => relational4_op_net,
      y => mux3_y_net_x0
    );

  relational1: entity work.relational_ada779c3b0
    port map (
      a => real_sum_s_net_x2,
      b => constant8_op_net,
      ce => ce_1_sg_x668,
      clk => clk_1_sg_x668,
      clr => '0',
      op(0) => relational1_op_net
    );

  relational2: entity work.relational_ada779c3b0
    port map (
      a => imag_sum_s_net_x2,
      b => constant1_op_net,
      ce => ce_1_sg_x668,
      clk => clk_1_sg_x668,
      clr => '0',
      op(0) => relational2_op_net
    );

  relational3: entity work.relational_ada779c3b0
    port map (
      a => real_sum_s_net_x3,
      b => constant2_op_net,
      ce => ce_1_sg_x668,
      clk => clk_1_sg_x668,
      clr => '0',
      op(0) => relational3_op_net
    );

  relational4: entity work.relational_ada779c3b0
    port map (
      a => imag_sum_s_net_x3,
      b => constant3_op_net,
      ce => ce_1_sg_x668,
      clk => clk_1_sg_x668,
      clr => '0',
      op(0) => relational4_op_net
    );

  ri_to_c1_de24955597: entity work.ri_to_c_entity_b0914dff9c
    port map (
      im => mux3_y_net_x0,
      re => mux2_y_net_x0,
      c => concat_y_net_x5
    );

  ri_to_c_b0914dff9c: entity work.ri_to_c_entity_b0914dff9c
    port map (
      im => mux1_y_net_x0,
      re => mux_y_net_x0,
      c => concat_y_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/quantisation"

entity quantisation_entity_112ce4d84a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data: in std_logic_vector(123 downto 0); 
    dv: in std_logic; 
    eq_bus: in std_logic_vector(63 downto 0); 
    sync: in std_logic; 
    quant_data: out std_logic_vector(15 downto 0); 
    quant_dv: out std_logic; 
    quant_of: out std_logic; 
    sync_out: out std_logic
  );
end quantisation_entity_112ce4d84a;

architecture structural of quantisation_entity_112ce4d84a is
  signal ce_1_sg_x669: std_logic;
  signal clk_1_sg_x669: std_logic;
  signal concat_y_net_x4: std_logic_vector(7 downto 0);
  signal concat_y_net_x5: std_logic_vector(7 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(15 downto 0);
  signal delay16_q_net_x2: std_logic;
  signal delay43_q_net_x1: std_logic;
  signal delay44_q_net_x1: std_logic_vector(123 downto 0);
  signal delay45_q_net_x1: std_logic;
  signal delay46_q_net_x1: std_logic_vector(63 downto 0);
  signal delay6_q_net_x2: std_logic;
  signal logical_y_net_x3: std_logic;
  signal reinterpret1_output_port_net_x3: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(61 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(15 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(61 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(15 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(15 downto 0);

begin
  ce_1_sg_x669 <= ce_1;
  clk_1_sg_x669 <= clk_1;
  delay44_q_net_x1 <= data;
  delay45_q_net_x1 <= dv;
  delay46_q_net_x1 <= eq_bus;
  delay43_q_net_x1 <= sync;
  quant_data <= concatenate_y_net_x2;
  quant_dv <= delay16_q_net_x2;
  quant_of <= logical_y_net_x3;
  sync_out <= delay6_q_net_x2;

  bus_create2_b94cc2359f: entity work.bus_create2_entity_b94cc2359f
    port map (
      in1 => concat_y_net_x4,
      in2 => concat_y_net_x5,
      bus_out => concatenate_y_net_x2
    );

  bus_expand3_825300c8f2: entity work.bus_expand3_entity_825300c8f2
    port map (
      bus_in => delay46_q_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x3,
      msb_out4 => reinterpret4_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x3,
      out3 => reinterpret3_output_port_net_x2
    );

  expand_data_in_6408d99121: entity work.expand_data_in_entity_d5d71b9bb1
    port map (
      bus_in => delay44_q_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x4,
      msb_out2 => reinterpret2_output_port_net_x4
    );

  quant_63fa21c236: entity work.quant_entity_63fa21c236
    port map (
      ce_1 => ce_1_sg_x669,
      clk_1 => clk_1_sg_x669,
      din0 => reinterpret2_output_port_net_x4,
      din1 => reinterpret1_output_port_net_x4,
      dv => delay45_q_net_x1,
      imag_in0 => reinterpret3_output_port_net_x2,
      imag_in1 => reinterpret1_output_port_net_x3,
      real_in0 => reinterpret4_output_port_net_x2,
      real_in1 => reinterpret2_output_port_net_x3,
      sync_in => delay43_q_net_x1,
      dout0 => concat_y_net_x4,
      dout1 => concat_y_net_x5,
      dv_out => delay16_q_net_x2,
      of_x0 => logical_y_net_x3,
      sync_out => delay6_q_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/rcs/user"

entity user_entity_924243a28a is
  port (
    reg_out: in std_logic_vector(31 downto 0); 
    convert_x0: out std_logic_vector(31 downto 0)
  );
end user_entity_924243a28a;

architecture structural of user_entity_924243a28a is
  signal convert_dout_net_x0: std_logic_vector(31 downto 0);
  signal user_val_op_net_x0: std_logic_vector(31 downto 0);

begin
  user_val_op_net_x0 <= reg_out;
  convert_x0 <= convert_dout_net_x0;

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 32,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => '1',
      clk => '1',
      clr => '0',
      din => user_val_op_net_x0,
      en => "1",
      dout => convert_dout_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/rcs"

entity rcs_entity_fb62b436e0 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    app: out std_logic_vector(31 downto 0); 
    lib: out std_logic_vector(31 downto 0); 
    user: out std_logic_vector(31 downto 0)
  );
end rcs_entity_fb62b436e0;

architecture structural of rcs_entity_fb62b436e0 is
  signal app_dirty_op_net: std_logic;
  signal app_info1_y_net: std_logic_vector(30 downto 0);
  signal app_info_y_net: std_logic_vector(30 downto 0);
  signal app_rcs_type_op_net: std_logic;
  signal app_reserved_op_net: std_logic;
  signal app_revision_op_net: std_logic_vector(27 downto 0);
  signal app_timestamp_op_net: std_logic_vector(30 downto 0);
  signal app_type_op_net: std_logic;
  signal ce_1_sg_x672: std_logic;
  signal clk_1_sg_x672: std_logic;
  signal concat1_y_net_x0: std_logic_vector(31 downto 0);
  signal concat_y_net_x0: std_logic_vector(31 downto 0);
  signal convert_dout_net_x3: std_logic_vector(31 downto 0);
  signal convert_dout_net_x4: std_logic_vector(31 downto 0);
  signal convert_dout_net_x5: std_logic_vector(31 downto 0);
  signal lib_dirty_op_net: std_logic;
  signal lib_rcs_type_op_net: std_logic;
  signal lib_reserved_op_net: std_logic;
  signal lib_revision_op_net: std_logic_vector(27 downto 0);
  signal lib_timestamp_op_net: std_logic_vector(30 downto 0);
  signal lib_type_op_net: std_logic;
  signal mux1_y_net: std_logic_vector(30 downto 0);
  signal mux_y_net: std_logic_vector(30 downto 0);
  signal user_val_op_net_x0: std_logic_vector(31 downto 0);

begin
  ce_1_sg_x672 <= ce_1;
  clk_1_sg_x672 <= clk_1;
  app <= convert_dout_net_x3;
  lib <= convert_dout_net_x4;
  user <= convert_dout_net_x5;

  app_0224193379: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x672,
      clk_1 => clk_1_sg_x672,
      reg_out => concat_y_net_x0,
      convert_x0 => convert_dout_net_x3
    );

  app_dirty: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => app_dirty_op_net
    );

  app_info: entity work.concat_09ca9faec0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => app_rcs_type_op_net,
      in1(0) => app_reserved_op_net,
      in2(0) => app_dirty_op_net,
      in3 => app_revision_op_net,
      y => app_info_y_net
    );

  app_info1: entity work.concat_09ca9faec0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => lib_rcs_type_op_net,
      in1(0) => lib_reserved_op_net,
      in2(0) => lib_dirty_op_net,
      in3 => lib_revision_op_net,
      y => app_info1_y_net
    );

  app_rcs_type: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => app_rcs_type_op_net
    );

  app_reserved: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => app_reserved_op_net
    );

  app_revision: entity work.constant_98b461a391
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => app_revision_op_net
    );

  app_timestamp: entity work.constant_e82da56f1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => app_timestamp_op_net
    );

  app_type: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => app_type_op_net
    );

  concat: entity work.concat_c24e4e888e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => app_type_op_net,
      in1 => mux_y_net,
      y => concat_y_net_x0
    );

  concat1: entity work.concat_c24e4e888e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => lib_type_op_net,
      in1 => mux1_y_net,
      y => concat1_y_net_x0
    );

  lib_90dec1a45d: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x672,
      clk_1 => clk_1_sg_x672,
      reg_out => concat1_y_net_x0,
      convert_x0 => convert_dout_net_x4
    );

  lib_dirty: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => lib_dirty_op_net
    );

  lib_rcs_type: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => lib_rcs_type_op_net
    );

  lib_reserved: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => lib_reserved_op_net
    );

  lib_revision: entity work.constant_98b461a391
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => lib_revision_op_net
    );

  lib_timestamp: entity work.constant_1e1ea8370a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => lib_timestamp_op_net
    );

  lib_type: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => lib_type_op_net
    );

  mux: entity work.mux_7448b060f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => app_info_y_net,
      d1 => app_timestamp_op_net,
      sel(0) => app_type_op_net,
      y => mux_y_net
    );

  mux1: entity work.mux_7448b060f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => app_info1_y_net,
      d1 => lib_timestamp_op_net,
      sel(0) => lib_type_op_net,
      y => mux1_y_net
    );

  user_924243a28a: entity work.user_entity_924243a28a
    port map (
      reg_out => user_val_op_net_x0,
      convert_x0 => convert_dout_net_x5
    );

  user_val: entity work.constant_ebdfb0074f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => user_val_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/repack_for_snap/bus_create2"

entity bus_create2_entity_8009be622f is
  port (
    in1: in std_logic; 
    in2: in std_logic_vector(15 downto 0); 
    in3: in std_logic; 
    bus_out: out std_logic_vector(17 downto 0)
  );
end bus_create2_entity_8009be622f;

architecture structural of bus_create2_entity_8009be622f is
  signal concatenate_y_net_x20: std_logic_vector(17 downto 0);
  signal delay1_q_net_x3: std_logic;
  signal delay_q_net_x3: std_logic;
  signal mux1_y_net_x4: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net: std_logic;
  signal reinterpret2_output_port_net: std_logic_vector(15 downto 0);
  signal reinterpret3_output_port_net: std_logic;

begin
  delay_q_net_x3 <= in1;
  mux1_y_net_x4 <= in2;
  delay1_q_net_x3 <= in3;
  bus_out <= concatenate_y_net_x20;

  concatenate: entity work.concat_7d415c13b1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2(0) => reinterpret3_output_port_net,
      y => concatenate_y_net_x20
    );

  reinterpret1: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => delay_q_net_x3,
      output_port(0) => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_ddc3ebdd7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux1_y_net_x4,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => delay1_q_net_x3,
      output_port(0) => reinterpret3_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/repack_for_snap"

entity repack_for_snap_entity_435cb8b557 is
  port (
    data_in: in std_logic_vector(15 downto 0); 
    dv_in: in std_logic; 
    sync_in: in std_logic; 
    snap_16bit: out std_logic_vector(17 downto 0)
  );
end repack_for_snap_entity_435cb8b557;

architecture structural of repack_for_snap_entity_435cb8b557 is
  signal concatenate_y_net_x21: std_logic_vector(17 downto 0);
  signal delay1_q_net_x4: std_logic;
  signal delay_q_net_x4: std_logic;
  signal mux1_y_net_x5: std_logic_vector(15 downto 0);

begin
  mux1_y_net_x5 <= data_in;
  delay1_q_net_x4 <= dv_in;
  delay_q_net_x4 <= sync_in;
  snap_16bit <= concatenate_y_net_x21;

  bus_create2_8009be622f: entity work.bus_create2_entity_8009be622f
    port map (
      in1 => delay_q_net_x4,
      in2 => mux1_y_net_x5,
      in3 => delay1_q_net_x4,
      bus_out => concatenate_y_net_x21
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/snap_debug/addr"

entity addr_entity_e4463d4a0b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    reg_out: in std_logic_vector(10 downto 0); 
    convert_x0: out std_logic_vector(31 downto 0)
  );
end addr_entity_e4463d4a0b;

architecture structural of addr_entity_e4463d4a0b is
  signal ce_1_sg_x673: std_logic;
  signal clk_1_sg_x673: std_logic;
  signal convert_dout_net_x0: std_logic_vector(31 downto 0);
  signal register1_q_net_x0: std_logic_vector(10 downto 0);

begin
  ce_1_sg_x673 <= ce_1;
  clk_1_sg_x673 <= clk_1;
  register1_q_net_x0 <= reg_out;
  convert_x0 <= convert_dout_net_x0;

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 11,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x673,
      clk => clk_1_sg_x673,
      clr => '0',
      din => register1_q_net_x0,
      en => "1",
      dout => convert_dout_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/snap_debug/bram/calc_add"

entity calc_add_entity_0b96421a51 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(10 downto 0); 
    out_x0: out std_logic_vector(10 downto 0)
  );
end calc_add_entity_0b96421a51;

architecture structural of calc_add_entity_0b96421a51 is
  signal add_sub_s_net: std_logic;
  signal ce_1_sg_x674: std_logic;
  signal clk_1_sg_x674: std_logic;
  signal concat_y_net: std_logic_vector(10 downto 0);
  signal const_op_net: std_logic;
  signal convert_addr_dout_net: std_logic_vector(10 downto 0);
  signal enable_y_net_x0: std_logic_vector(10 downto 0);
  signal lsw_y_net: std_logic;
  signal manipulate_op_net: std_logic;
  signal msw_y_net: std_logic_vector(9 downto 0);
  signal mux_y_net_x0: std_logic_vector(10 downto 0);

begin
  ce_1_sg_x674 <= ce_1;
  clk_1_sg_x674 <= clk_1;
  enable_y_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x0;

  add_sub: entity work.addsub_c13097e33e
    port map (
      a(0) => const_op_net,
      b(0) => lsw_y_net,
      ce => ce_1_sg_x674,
      clk => clk_1_sg_x674,
      clr => '0',
      s(0) => add_sub_s_net
    );

  concat: entity work.concat_83d07cc341
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => msw_y_net,
      in1(0) => add_sub_s_net,
      y => concat_y_net
    );

  const: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => const_op_net
    );

  convert_addr: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 11,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 11,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x674,
      clk => clk_1_sg_x674,
      clr => '0',
      din => enable_y_net_x0,
      en => "1",
      dout => convert_addr_dout_net
    );

  lsw: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 11,
      y_width => 1
    )
    port map (
      x => convert_addr_dout_net,
      y(0) => lsw_y_net
    );

  manipulate: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => manipulate_op_net
    );

  msw: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 10,
      x_width => 11,
      y_width => 10
    )
    port map (
      x => convert_addr_dout_net,
      y => msw_y_net
    );

  mux: entity work.mux_eb6266ebdd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => convert_addr_dout_net,
      d1 => concat_y_net,
      sel(0) => manipulate_op_net,
      y => mux_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/snap_debug/bram"

entity bram_entity_663324a750 is
  port (
    addr: in std_logic_vector(10 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_in: in std_logic_vector(127 downto 0); 
    we: in std_logic; 
    convert_addr_x0: out std_logic_vector(10 downto 0); 
    convert_din1_x0: out std_logic_vector(31 downto 0); 
    convert_we_x0: out std_logic
  );
end bram_entity_663324a750;

architecture structural of bram_entity_663324a750 is
  signal ce_1_sg_x675: std_logic;
  signal clk_1_sg_x675: std_logic;
  signal convert_addr_dout_net_x0: std_logic_vector(10 downto 0);
  signal convert_din1_dout_net_x0: std_logic_vector(31 downto 0);
  signal convert_din_dout_net: std_logic_vector(31 downto 0);
  signal convert_we_dout_net_x0: std_logic;
  signal enable_y_net_x1: std_logic_vector(10 downto 0);
  signal logical1_y_net_x0: std_logic;
  signal mux_y_net_x0: std_logic_vector(10 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(127 downto 0);

begin
  enable_y_net_x1 <= addr;
  ce_1_sg_x675 <= ce_1;
  clk_1_sg_x675 <= clk_1;
  reinterpret_output_port_net_x0 <= data_in;
  logical1_y_net_x0 <= we;
  convert_addr_x0 <= convert_addr_dout_net_x0;
  convert_din1_x0 <= convert_din1_dout_net_x0;
  convert_we_x0 <= convert_we_dout_net_x0;

  calc_add_0b96421a51: entity work.calc_add_entity_0b96421a51
    port map (
      ce_1 => ce_1_sg_x675,
      clk_1 => clk_1_sg_x675,
      in_x0 => enable_y_net_x1,
      out_x0 => mux_y_net_x0
    );

  convert_addr: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 11,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 11,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x675,
      clk => clk_1_sg_x675,
      clr => '0',
      din => mux_y_net_x0,
      en => "1",
      dout => convert_addr_dout_net_x0
    );

  convert_din: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 128,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x675,
      clk => clk_1_sg_x675,
      clr => '0',
      din => reinterpret_output_port_net_x0,
      en => "1",
      dout => convert_din_dout_net
    );

  convert_din1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 32,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x675,
      clk => clk_1_sg_x675,
      clr => '0',
      din => convert_din_dout_net,
      en => "1",
      dout => convert_din1_dout_net_x0
    );

  convert_we: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x675,
      clk => clk_1_sg_x675,
      clr => '0',
      din(0) => logical1_y_net_x0,
      en => "1",
      dout(0) => convert_we_dout_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/snap_debug/freeze_cntr"

entity freeze_cntr_entity_237822418c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    en: in std_logic; 
    rst: in std_logic; 
    addr: out std_logic_vector(10 downto 0); 
    we: out std_logic
  );
end freeze_cntr_entity_237822418c;

architecture structural of freeze_cntr_entity_237822418c is
  signal ce_1_sg_x676: std_logic;
  signal clk_1_sg_x676: std_logic;
  signal counter3_op_net: std_logic_vector(11 downto 0);
  signal enable1_y_net: std_logic;
  signal enable_y_net_x2: std_logic_vector(10 downto 0);
  signal inverter1_op_net: std_logic;
  signal inverter_op_net: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical5_y_net: std_logic;
  signal mux1_y_net_x0: std_logic;
  signal register_q_net_x0: std_logic;

begin
  ce_1_sg_x676 <= ce_1;
  clk_1_sg_x676 <= clk_1;
  mux1_y_net_x0 <= en;
  register_q_net_x0 <= rst;
  addr <= enable_y_net_x2;
  we <= logical1_y_net_x1;

  counter3: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_ecb560ca58503876",
      op_arith => xlUnsigned,
      op_width => 12
    )
    port map (
      ce => ce_1_sg_x676,
      clk => clk_1_sg_x676,
      clr => '0',
      en(0) => logical5_y_net,
      rst(0) => register_q_net_x0,
      op => counter3_op_net
    );

  enable: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 10,
      x_width => 12,
      y_width => 11
    )
    port map (
      x => counter3_op_net,
      y => enable_y_net_x2
    );

  enable1: entity work.xlslice
    generic map (
      new_lsb => 11,
      new_msb => 11,
      x_width => 12,
      y_width => 1
    )
    port map (
      x => counter3_op_net,
      y(0) => enable1_y_net
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x676,
      clk => clk_1_sg_x676,
      clr => '0',
      ip(0) => register_q_net_x0,
      op(0) => inverter_op_net
    );

  inverter1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x676,
      clk => clk_1_sg_x676,
      clr => '0',
      ip(0) => enable1_y_net,
      op(0) => inverter1_op_net
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => logical5_y_net,
      y(0) => logical1_y_net_x1
    );

  logical5: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => mux1_y_net_x0,
      d1(0) => inverter1_op_net,
      y(0) => logical5_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/snap_debug"

entity snap_debug_entity_e25ad94b28 is
  port (
    c09f12_01_snap_debug_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(127 downto 0); 
    trig: in std_logic; 
    we: in std_logic; 
    addr: out std_logic_vector(31 downto 0); 
    bram: out std_logic_vector(10 downto 0); 
    bram_x0: out std_logic_vector(31 downto 0); 
    bram_x1: out std_logic
  );
end snap_debug_entity_e25ad94b28;

architecture structural of snap_debug_entity_e25ad94b28 is
  signal c09f12_01_snap_debug_ctrl_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal ce_1_sg_x678: std_logic;
  signal clk_1_sg_x678: std_logic;
  signal constant1_op_net: std_logic;
  signal constant2_op_net: std_logic;
  signal constant_op_net: std_logic;
  signal convert_addr_dout_net_x1: std_logic_vector(10 downto 0);
  signal convert_din1_dout_net_x1: std_logic_vector(31 downto 0);
  signal convert_dout_net_x1: std_logic_vector(31 downto 0);
  signal convert_we_dout_net_x1: std_logic;
  signal enable_y_net_x0: std_logic;
  signal enable_y_net_x2: std_logic_vector(10 downto 0);
  signal inverter_op_net: std_logic;
  signal logical1_y_net: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical_y_net_x0: std_logic;
  signal mux1_y_net_x0: std_logic;
  signal mux2_y_net: std_logic;
  signal register1_q_net_x0: std_logic_vector(10 downto 0);
  signal register_q_net_x0: std_logic;
  signal reinterpret2_output_port_net_x7: std_logic_vector(127 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(127 downto 0);
  signal slice1_y_net_x7: std_logic;
  signal slice3_y_net_x7: std_logic;
  signal trig1_y_net: std_logic;
  signal valid_y_net: std_logic;

begin
  c09f12_01_snap_debug_ctrl_user_data_out_net_x0 <= c09f12_01_snap_debug_ctrl_user_data_out;
  ce_1_sg_x678 <= ce_1;
  clk_1_sg_x678 <= clk_1;
  reinterpret2_output_port_net_x7 <= din;
  slice1_y_net_x7 <= trig;
  slice3_y_net_x7 <= we;
  addr <= convert_dout_net_x1;
  bram <= convert_addr_dout_net_x1;
  bram_x0 <= convert_din1_dout_net_x1;
  bram_x1 <= convert_we_dout_net_x1;

  addr_e4463d4a0b: entity work.addr_entity_e4463d4a0b
    port map (
      ce_1 => ce_1_sg_x678,
      clk_1 => clk_1_sg_x678,
      reg_out => register1_q_net_x0,
      convert_x0 => convert_dout_net_x1
    );

  bram_663324a750: entity work.bram_entity_663324a750
    port map (
      addr => enable_y_net_x2,
      ce_1 => ce_1_sg_x678,
      clk_1 => clk_1_sg_x678,
      data_in => reinterpret_output_port_net_x0,
      we => logical1_y_net_x1,
      convert_addr_x0 => convert_addr_dout_net_x1,
      convert_din1_x0 => convert_din1_dout_net_x1,
      convert_we_x0 => convert_we_dout_net_x1
    );

  constant1: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant1_op_net
    );

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  enable: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => c09f12_01_snap_debug_ctrl_user_data_out_net_x0,
      y(0) => enable_y_net_x0
    );

  freeze_cntr_237822418c: entity work.freeze_cntr_entity_237822418c
    port map (
      ce_1 => ce_1_sg_x678,
      clk_1 => clk_1_sg_x678,
      en => mux1_y_net_x0,
      rst => register_q_net_x0,
      addr => enable_y_net_x2,
      we => logical1_y_net_x1
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x678,
      clk => clk_1_sg_x678,
      clr => '0',
      ip(0) => logical_y_net_x0,
      op(0) => inverter_op_net
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => mux2_y_net,
      d1(0) => inverter_op_net,
      y(0) => logical1_y_net
    );

  mux1: entity work.mux_d99e59b6d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => slice3_y_net_x7,
      d1(0) => constant2_op_net,
      sel(0) => valid_y_net,
      y(0) => mux1_y_net_x0
    );

  mux2: entity work.mux_d99e59b6d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => slice1_y_net_x7,
      d1(0) => constant1_op_net,
      sel(0) => trig1_y_net,
      y(0) => mux2_y_net
    );

  posedge_1a086dc6b6: entity work.posedge_entity_8c9b4fc2fb
    port map (
      ce_1 => ce_1_sg_x678,
      clk_1 => clk_1_sg_x678,
      in_x0 => enable_y_net_x0,
      out_x0 => logical_y_net_x0
    );

  register1: entity work.xlregister
    generic map (
      d_width => 11,
      init_value => b"00000000000"
    )
    port map (
      ce => ce_1_sg_x678,
      clk => clk_1_sg_x678,
      d => enable_y_net_x2,
      en(0) => logical1_y_net_x1,
      rst(0) => logical_y_net_x0,
      q => register1_q_net_x0
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x678,
      clk => clk_1_sg_x678,
      d(0) => constant_op_net,
      en(0) => logical_y_net_x0,
      rst(0) => logical1_y_net,
      q(0) => register_q_net_x0
    );

  reinterpret: entity work.reinterpret_28b9ecc6fc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret2_output_port_net_x7,
      output_port => reinterpret_output_port_net_x0
    );

  trig1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => c09f12_01_snap_debug_ctrl_user_data_out_net_x0,
      y(0) => trig1_y_net
    );

  valid: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => c09f12_01_snap_debug_ctrl_user_data_out_net_x0,
      y(0) => valid_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/timing/rst_gen"

entity rst_gen_entity_a459e59885 is
  port (
    arm: in std_logic; 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(64 downto 0); 
    pps_in: in std_logic; 
    dout: out std_logic_vector(64 downto 0); 
    mrst: out std_logic
  );
end rst_gen_entity_a459e59885;

architecture structural of rst_gen_entity_a459e59885 is
  signal ce_1_sg_x679: std_logic;
  signal clk_1_sg_x679: std_logic;
  signal concat_y_net_x0: std_logic_vector(64 downto 0);
  signal constant_op_net: std_logic_vector(3 downto 0);
  signal counter_op_net: std_logic_vector(3 downto 0);
  signal delay3_q_net_x0: std_logic_vector(64 downto 0);
  signal edge_op_y_net_x1: std_logic;
  signal logical5_y_net_x1: std_logic;
  signal logical_y_net: std_logic;
  signal relational_op_net_x0: std_logic;

begin
  edge_op_y_net_x1 <= arm;
  ce_1_sg_x679 <= ce_1;
  clk_1_sg_x679 <= clk_1;
  concat_y_net_x0 <= din;
  logical5_y_net_x1 <= pps_in;
  dout <= delay3_q_net_x0;
  mrst <= relational_op_net_x0;

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_14e5b6d5c91ed436",
      op_arith => xlUnsigned,
      op_width => 4
    )
    port map (
      ce => ce_1_sg_x679,
      clk => clk_1_sg_x679,
      clr => '0',
      en(0) => logical_y_net,
      rst(0) => edge_op_y_net_x1,
      op => counter_op_net
    );

  delay3: entity work.delay_15f5a81b1f
    port map (
      ce => ce_1_sg_x679,
      clk => clk_1_sg_x679,
      clr => '0',
      d => concat_y_net_x0,
      q => delay3_q_net_x0
    );

  logical: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical5_y_net_x1,
      d1(0) => relational_op_net_x0,
      y(0) => logical_y_net
    );

  relational: entity work.relational_297b184c8e
    port map (
      a => counter_op_net,
      b => constant_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/timing/sync_gen"

entity sync_gen_entity_4666f37e63 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    rst: in std_logic; 
    sync_period: in std_logic_vector(30 downto 0); 
    sync: out std_logic
  );
end sync_gen_entity_4666f37e63;

architecture structural of sync_gen_entity_4666f37e63 is
  signal ce_1_sg_x682: std_logic;
  signal clk_1_sg_x682: std_logic;
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal edge_op_y_net_x1: std_logic;
  signal logical1_y_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal relational_op_net_x0: std_logic;
  signal relational_op_net_x2: std_logic;
  signal slice_y_net_x0: std_logic_vector(30 downto 0);
  signal sync_count_op_net: std_logic_vector(30 downto 0);

begin
  ce_1_sg_x682 <= ce_1;
  clk_1_sg_x682 <= clk_1;
  relational_op_net_x2 <= rst;
  slice_y_net_x0 <= sync_period;
  sync <= logical1_y_net_x0;

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x682,
      clk => clk_1_sg_x682,
      d(0) => relational_op_net_x2,
      en => '1',
      rst => '1',
      q(0) => delay_q_net
    );

  edge_detect1_17d2e1c55a: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x682,
      clk_1 => clk_1_sg_x682,
      in_x0 => relational_op_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  edge_detect2_3eb30ed69c: entity work.edge_detect1_entity_75cedd2450
    port map (
      ce_1 => ce_1_sg_x682,
      clk_1 => clk_1_sg_x682,
      in_x0 => relational_op_net_x2,
      out_x0 => edge_op_y_net_x1
    );

  logical: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x682,
      clk => clk_1_sg_x682,
      clr => '0',
      d0(0) => delay_q_net,
      d1(0) => edge_op_y_net_x0,
      y(0) => logical_y_net
    );

  logical1: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => edge_op_y_net_x1,
      d1(0) => edge_op_y_net_x0,
      y(0) => logical1_y_net_x0
    );

  relational: entity work.relational_a0704033ef
    port map (
      a => sync_count_op_net,
      b => slice_y_net_x0,
      ce => ce_1_sg_x682,
      clk => clk_1_sg_x682,
      clr => '0',
      op(0) => relational_op_net_x0
    );

  sync_count: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_85571b722fff644c",
      op_arith => xlUnsigned,
      op_width => 31
    )
    port map (
      ce => ce_1_sg_x682,
      clk => clk_1_sg_x682,
      clr => '0',
      en => "1",
      rst(0) => logical_y_net,
      op => sync_count_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/timing"

entity timing_entity_75b27e8515 is
  port (
    arm: in std_logic; 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_in: in std_logic_vector(64 downto 0); 
    pps_in: in std_logic; 
    sync_period: in std_logic_vector(30 downto 0); 
    armed: out std_logic; 
    data_out: out std_logic_vector(64 downto 0); 
    sync: out std_logic
  );
end timing_entity_75b27e8515;

architecture structural of timing_entity_75b27e8515 is
  signal ce_1_sg_x683: std_logic;
  signal clk_1_sg_x683: std_logic;
  signal concat_y_net_x1: std_logic_vector(64 downto 0);
  signal delay1_q_net_x4: std_logic;
  signal delay2_q_net_x1: std_logic_vector(64 downto 0);
  signal delay3_q_net_x0: std_logic_vector(64 downto 0);
  signal delay_q_net_x0: std_logic;
  signal edge_op_y_net_x2: std_logic;
  signal logical1_y_net_x0: std_logic;
  signal logical5_y_net_x2: std_logic;
  signal relational_op_net_x2: std_logic;
  signal slice_y_net_x0: std_logic_vector(30 downto 0);
  signal sync_period_constant_op_net_x0: std_logic_vector(30 downto 0);

begin
  edge_op_y_net_x2 <= arm;
  ce_1_sg_x683 <= ce_1;
  clk_1_sg_x683 <= clk_1;
  concat_y_net_x1 <= data_in;
  logical5_y_net_x2 <= pps_in;
  sync_period_constant_op_net_x0 <= sync_period;
  armed <= delay_q_net_x0;
  data_out <= delay2_q_net_x1;
  sync <= delay1_q_net_x4;

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x683,
      clk => clk_1_sg_x683,
      clr => '0',
      d(0) => relational_op_net_x2,
      q(0) => delay_q_net_x0
    );

  delay1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x683,
      clk => clk_1_sg_x683,
      clr => '0',
      d(0) => logical1_y_net_x0,
      q(0) => delay1_q_net_x4
    );

  delay2: entity work.delay_15f5a81b1f
    port map (
      ce => ce_1_sg_x683,
      clk => clk_1_sg_x683,
      clr => '0',
      d => delay3_q_net_x0,
      q => delay2_q_net_x1
    );

  rst_gen_a459e59885: entity work.rst_gen_entity_a459e59885
    port map (
      arm => edge_op_y_net_x2,
      ce_1 => ce_1_sg_x683,
      clk_1 => clk_1_sg_x683,
      din => concat_y_net_x1,
      pps_in => logical5_y_net_x2,
      dout => delay3_q_net_x0,
      mrst => relational_op_net_x2
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 30,
      x_width => 31,
      y_width => 31
    )
    port map (
      x => sync_period_constant_op_net_x0,
      y => slice_y_net_x0
    );

  sync_gen_4666f37e63: entity work.sync_gen_entity_4666f37e63
    port map (
      ce_1 => ce_1_sg_x683,
      clk_1 => clk_1_sg_x683,
      rst => relational_op_net_x2,
      sync_period => slice_y_net_x0,
      sync => logical1_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/trig0/Subsystem1"

entity subsystem1_entity_761d3d4af3 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(7 downto 0); 
    thresh: in std_logic_vector(15 downto 0); 
    trig: out std_logic
  );
end subsystem1_entity_761d3d4af3;

architecture structural of subsystem1_entity_761d3d4af3 is
  signal ce_1_sg_x684: std_logic;
  signal clk_1_sg_x684: std_logic;
  signal mult_p_net_x0: std_logic_vector(15 downto 0);
  signal mult_p_net_x1: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(7 downto 0);
  signal relational_op_net_x0: std_logic;

begin
  ce_1_sg_x684 <= ce_1;
  clk_1_sg_x684 <= clk_1;
  reinterpret1_output_port_net_x0 <= din;
  mult_p_net_x1 <= thresh;
  trig <= relational_op_net_x0;

  mult: entity work.mult_1f4d330bcc
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret1_output_port_net_x0,
      ce => ce_1_sg_x684,
      clk => clk_1_sg_x684,
      clr => '0',
      p => mult_p_net_x0
    );

  relational: entity work.relational_6e942c7926
    port map (
      a => mult_p_net_x0,
      b => mult_p_net_x1,
      ce => ce_1_sg_x684,
      clk => clk_1_sg_x684,
      clr => '0',
      op(0) => relational_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/trig0/decat1"

entity decat1_entity_b0939b337a is
  port (
    i1: in std_logic_vector(31 downto 0); 
    o1: out std_logic_vector(7 downto 0); 
    o2: out std_logic_vector(7 downto 0); 
    o3: out std_logic_vector(7 downto 0); 
    o4: out std_logic_vector(7 downto 0)
  );
end decat1_entity_b0939b337a;

architecture structural of decat1_entity_b0939b337a is
  signal reinterpret1_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(31 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(7 downto 0);
  signal slice15_y_net: std_logic_vector(7 downto 0);
  signal slice16_y_net: std_logic_vector(7 downto 0);
  signal slice17_y_net: std_logic_vector(7 downto 0);
  signal slice9_y_net: std_logic_vector(7 downto 0);

begin
  reinterpret2_output_port_net_x5 <= i1;
  o1 <= reinterpret2_output_port_net_x1;
  o2 <= reinterpret1_output_port_net_x1;
  o3 <= reinterpret3_output_port_net_x1;
  o4 <= reinterpret4_output_port_net_x1;

  reinterpret1: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice16_y_net,
      output_port => reinterpret1_output_port_net_x1
    );

  reinterpret2: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice17_y_net,
      output_port => reinterpret2_output_port_net_x1
    );

  reinterpret3: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice15_y_net,
      output_port => reinterpret3_output_port_net_x1
    );

  reinterpret4: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice9_y_net,
      output_port => reinterpret4_output_port_net_x1
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 15,
      x_width => 32,
      y_width => 8
    )
    port map (
      x => reinterpret2_output_port_net_x5,
      y => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 23,
      x_width => 32,
      y_width => 8
    )
    port map (
      x => reinterpret2_output_port_net_x5,
      y => slice16_y_net
    );

  slice17: entity work.xlslice
    generic map (
      new_lsb => 24,
      new_msb => 31,
      x_width => 32,
      y_width => 8
    )
    port map (
      x => reinterpret2_output_port_net_x5,
      y => slice17_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 7,
      x_width => 32,
      y_width => 8
    )
    port map (
      x => reinterpret2_output_port_net_x5,
      y => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/trig0"

entity trig0_entity_def9f75207 is
  port (
    adc_data: in std_logic_vector(31 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    synci: in std_logic_vector(32 downto 0); 
    trig_pnt: in std_logic_vector(31 downto 0); 
    data: out std_logic_vector(31 downto 0); 
    synco: out std_logic_vector(32 downto 0); 
    trig: out std_logic
  );
end trig0_entity_def9f75207;

architecture structural of trig0_entity_def9f75207 is
  signal ce_1_sg_x688: std_logic;
  signal clk_1_sg_x688: std_logic;
  signal concat6_y_net_x0: std_logic_vector(32 downto 0);
  signal delay1_q_net_x1: std_logic_vector(31 downto 0);
  signal delay2_q_net_x1: std_logic_vector(32 downto 0);
  signal delay35_q_net_x0: std_logic_vector(31 downto 0);
  signal logical1_y_net_x2: std_logic;
  signal mult_p_net_x4: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(31 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(7 downto 0);
  signal relational_op_net_x0: std_logic;
  signal relational_op_net_x1: std_logic;
  signal relational_op_net_x2: std_logic;
  signal relational_op_net_x3: std_logic;
  signal slice3_y_net: std_logic_vector(7 downto 0);

begin
  reinterpret2_output_port_net_x6 <= adc_data;
  ce_1_sg_x688 <= ce_1;
  clk_1_sg_x688 <= clk_1;
  concat6_y_net_x0 <= synci;
  delay35_q_net_x0 <= trig_pnt;
  data <= delay1_q_net_x1;
  synco <= delay2_q_net_x1;
  trig <= logical1_y_net_x2;

  decat1_b0939b337a: entity work.decat1_entity_b0939b337a
    port map (
      i1 => reinterpret2_output_port_net_x6,
      o1 => reinterpret2_output_port_net_x1,
      o2 => reinterpret1_output_port_net_x1,
      o3 => reinterpret3_output_port_net_x1,
      o4 => reinterpret4_output_port_net_x1
    );

  delay1: entity work.xldelay
    generic map (
      latency => 5,
      reg_retiming => 0,
      reset => 0,
      width => 32
    )
    port map (
      ce => ce_1_sg_x688,
      clk => clk_1_sg_x688,
      d => reinterpret2_output_port_net_x6,
      en => '1',
      rst => '1',
      q => delay1_q_net_x1
    );

  delay2: entity work.xldelay
    generic map (
      latency => 5,
      reg_retiming => 0,
      reset => 0,
      width => 33
    )
    port map (
      ce => ce_1_sg_x688,
      clk => clk_1_sg_x688,
      d => concat6_y_net_x0,
      en => '1',
      rst => '1',
      q => delay2_q_net_x1
    );

  logical1: entity work.logical_1cef476837
    port map (
      ce => ce_1_sg_x688,
      clk => clk_1_sg_x688,
      clr => '0',
      d0(0) => relational_op_net_x3,
      d1(0) => relational_op_net_x0,
      d2(0) => relational_op_net_x1,
      d3(0) => relational_op_net_x2,
      y(0) => logical1_y_net_x2
    );

  mult: entity work.mult_1f4d330bcc
    port map (
      a => reinterpret4_output_port_net,
      b => reinterpret4_output_port_net,
      ce => ce_1_sg_x688,
      clk => clk_1_sg_x688,
      clr => '0',
      p => mult_p_net_x4
    );

  reinterpret4: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret4_output_port_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 7,
      x_width => 32,
      y_width => 8
    )
    port map (
      x => delay35_q_net_x0,
      y => slice3_y_net
    );

  subsystem1_761d3d4af3: entity work.subsystem1_entity_761d3d4af3
    port map (
      ce_1 => ce_1_sg_x688,
      clk_1 => clk_1_sg_x688,
      din => reinterpret1_output_port_net_x1,
      thresh => mult_p_net_x4,
      trig => relational_op_net_x0
    );

  subsystem2_976f81216f: entity work.subsystem1_entity_761d3d4af3
    port map (
      ce_1 => ce_1_sg_x688,
      clk_1 => clk_1_sg_x688,
      din => reinterpret3_output_port_net_x1,
      thresh => mult_p_net_x4,
      trig => relational_op_net_x1
    );

  subsystem3_6c171c7ce2: entity work.subsystem1_entity_761d3d4af3
    port map (
      ce_1 => ce_1_sg_x688,
      clk_1 => clk_1_sg_x688,
      din => reinterpret4_output_port_net_x1,
      thresh => mult_p_net_x4,
      trig => relational_op_net_x2
    );

  subsystem5_1be93d09ae: entity work.subsystem1_entity_761d3d4af3
    port map (
      ce_1 => ce_1_sg_x688,
      clk_1 => clk_1_sg_x688,
      din => reinterpret2_output_port_net_x1,
      thresh => mult_p_net_x4,
      trig => relational_op_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/trig1"

entity trig1_entity_891d75ae5b is
  port (
    adc_data: in std_logic_vector(31 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    trig_pnt: in std_logic_vector(31 downto 0); 
    data: out std_logic_vector(31 downto 0); 
    trig: out std_logic
  );
end trig1_entity_891d75ae5b;

architecture structural of trig1_entity_891d75ae5b is
  signal ce_1_sg_x693: std_logic;
  signal clk_1_sg_x693: std_logic;
  signal delay1_q_net_x1: std_logic_vector(31 downto 0);
  signal delay35_q_net_x1: std_logic_vector(31 downto 0);
  signal logical1_y_net_x2: std_logic;
  signal mult_p_net_x4: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(7 downto 0);
  signal relational_op_net_x0: std_logic;
  signal relational_op_net_x1: std_logic;
  signal relational_op_net_x2: std_logic;
  signal relational_op_net_x3: std_logic;
  signal slice3_y_net: std_logic_vector(7 downto 0);

begin
  reinterpret1_output_port_net_x7 <= adc_data;
  ce_1_sg_x693 <= ce_1;
  clk_1_sg_x693 <= clk_1;
  delay35_q_net_x1 <= trig_pnt;
  data <= delay1_q_net_x1;
  trig <= logical1_y_net_x2;

  decat1_2d3ffff654: entity work.decat1_entity_b0939b337a
    port map (
      i1 => reinterpret1_output_port_net_x7,
      o1 => reinterpret2_output_port_net_x1,
      o2 => reinterpret1_output_port_net_x1,
      o3 => reinterpret3_output_port_net_x1,
      o4 => reinterpret4_output_port_net_x1
    );

  delay1: entity work.xldelay
    generic map (
      latency => 5,
      reg_retiming => 0,
      reset => 0,
      width => 32
    )
    port map (
      ce => ce_1_sg_x693,
      clk => clk_1_sg_x693,
      d => reinterpret1_output_port_net_x7,
      en => '1',
      rst => '1',
      q => delay1_q_net_x1
    );

  logical1: entity work.logical_1cef476837
    port map (
      ce => ce_1_sg_x693,
      clk => clk_1_sg_x693,
      clr => '0',
      d0(0) => relational_op_net_x3,
      d1(0) => relational_op_net_x0,
      d2(0) => relational_op_net_x1,
      d3(0) => relational_op_net_x2,
      y(0) => logical1_y_net_x2
    );

  mult: entity work.mult_1f4d330bcc
    port map (
      a => reinterpret4_output_port_net,
      b => reinterpret4_output_port_net,
      ce => ce_1_sg_x693,
      clk => clk_1_sg_x693,
      clr => '0',
      p => mult_p_net_x4
    );

  reinterpret4: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret4_output_port_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 7,
      x_width => 32,
      y_width => 8
    )
    port map (
      x => delay35_q_net_x1,
      y => slice3_y_net
    );

  subsystem1_462e93dec5: entity work.subsystem1_entity_761d3d4af3
    port map (
      ce_1 => ce_1_sg_x693,
      clk_1 => clk_1_sg_x693,
      din => reinterpret1_output_port_net_x1,
      thresh => mult_p_net_x4,
      trig => relational_op_net_x0
    );

  subsystem2_27bc6f4f76: entity work.subsystem1_entity_761d3d4af3
    port map (
      ce_1 => ce_1_sg_x693,
      clk_1 => clk_1_sg_x693,
      din => reinterpret3_output_port_net_x1,
      thresh => mult_p_net_x4,
      trig => relational_op_net_x1
    );

  subsystem3_1aa1690e7f: entity work.subsystem1_entity_761d3d4af3
    port map (
      ce_1 => ce_1_sg_x693,
      clk_1 => clk_1_sg_x693,
      din => reinterpret4_output_port_net_x1,
      thresh => mult_p_net_x4,
      trig => relational_op_net_x2
    );

  subsystem5_a1210e6dd0: entity work.subsystem1_entity_761d3d4af3
    port map (
      ce_1 => ce_1_sg_x693,
      clk_1 => clk_1_sg_x693,
      din => reinterpret2_output_port_net_x1,
      thresh => mult_p_net_x4,
      trig => relational_op_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/xaui_pack0/neg_edge_delay"

entity neg_edge_delay_entity_668f7e6187 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end neg_edge_delay_entity_668f7e6187;

architecture structural of neg_edge_delay_entity_668f7e6187 is
  signal ce_1_sg_x703: std_logic;
  signal clk_1_sg_x703: std_logic;
  signal constant5_op_net: std_logic_vector(2 downto 0);
  signal counter3_op_net: std_logic_vector(2 downto 0);
  signal register0_q_net_x1: std_logic;
  signal relational5_op_net_x0: std_logic;

begin
  ce_1_sg_x703 <= ce_1;
  clk_1_sg_x703 <= clk_1;
  register0_q_net_x1 <= in_x0;
  out_x0 <= relational5_op_net_x0;

  constant5: entity work.constant_4e64dfaf34
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant5_op_net
    );

  counter3: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_514048f9c72a30b1",
      op_arith => xlUnsigned,
      op_width => 3
    )
    port map (
      ce => ce_1_sg_x703,
      clk => clk_1_sg_x703,
      clr => '0',
      en(0) => relational5_op_net_x0,
      rst(0) => register0_q_net_x1,
      op => counter3_op_net
    );

  relational5: entity work.relational_47b317dab6
    port map (
      a => counter3_op_net,
      b => constant5_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational5_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/xaui_pack0/oob_decode"

entity oob_decode_entity_1e541f49c9 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    oob_in: in std_logic_vector(7 downto 0); 
    valid_in: in std_logic; 
    eof: out std_logic; 
    header: out std_logic; 
    packet_data: out std_logic
  );
end oob_decode_entity_1e541f49c9;

architecture structural of oob_decode_entity_1e541f49c9 is
  signal ce_1_sg_x704: std_logic;
  signal clk_1_sg_x704: std_logic;
  signal inverter1_op_net: std_logic;
  signal inverter5_op_net: std_logic;
  signal logical1_y_net_x0: std_logic;
  signal logical2_y_net_x2: std_logic;
  signal logical3_y_net_x1: std_logic;
  signal logical_y_net_x0: std_logic;
  signal register0_q_net_x1: std_logic_vector(7 downto 0);
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic;
  signal slice6_y_net: std_logic;

begin
  ce_1_sg_x704 <= ce_1;
  clk_1_sg_x704 <= clk_1;
  register0_q_net_x1 <= oob_in;
  logical_y_net_x0 <= valid_in;
  eof <= logical2_y_net_x2;
  header <= logical3_y_net_x1;
  packet_data <= logical1_y_net_x0;

  inverter1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x704,
      clk => clk_1_sg_x704,
      clr => '0',
      ip(0) => slice2_y_net,
      op(0) => inverter1_op_net
    );

  inverter5: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x704,
      clk => clk_1_sg_x704,
      clr => '0',
      ip(0) => slice6_y_net,
      op(0) => inverter5_op_net
    );

  logical1: entity work.logical_954ee29728
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter5_op_net,
      d1(0) => logical_y_net_x0,
      d2(0) => inverter1_op_net,
      y(0) => logical1_y_net_x0
    );

  logical2: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => slice1_y_net,
      d1(0) => logical_y_net_x0,
      y(0) => logical2_y_net_x2
    );

  logical3: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => slice2_y_net,
      d1(0) => logical_y_net_x0,
      y(0) => logical3_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => register0_q_net_x1,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => register0_q_net_x1,
      y(0) => slice2_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => register0_q_net_x1,
      y(0) => slice6_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01/xaui_pack0"

entity xaui_pack0_entity_ebab7cc6d0 is
  port (
    base_ip: in std_logic_vector(31 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(63 downto 0); 
    linkdown_in: in std_logic; 
    oob: in std_logic_vector(7 downto 0); 
    valid_in: in std_logic; 
    dest_ip: out std_logic_vector(31 downto 0); 
    discard: out std_logic; 
    dout: out std_logic_vector(63 downto 0); 
    eof: out std_logic; 
    valid_out: out std_logic
  );
end xaui_pack0_entity_ebab7cc6d0;

architecture structural of xaui_pack0_entity_ebab7cc6d0 is
  signal ce_1_sg_x705: std_logic;
  signal clk_1_sg_x705: std_logic;
  signal concat6_y_net_x0: std_logic_vector(31 downto 0);
  signal constant2_op_net: std_logic_vector(6 downto 0);
  signal convert_dout_net: std_logic;
  signal delay37_q_net_x0: std_logic_vector(31 downto 0);
  signal inverter1_op_net: std_logic;
  signal inverter_op_net: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical1_y_net_x2: std_logic;
  signal logical2_y_net_x0: std_logic;
  signal logical2_y_net_x2: std_logic;
  signal logical3_y_net_x1: std_logic;
  signal logical_y_net_x0: std_logic;
  signal mux1_y_net_x0: std_logic_vector(63 downto 0);
  signal payload_cnt_op_net: std_logic_vector(6 downto 0);
  signal register0_q_net_x10: std_logic;
  signal register0_q_net_x12: std_logic;
  signal register0_q_net_x13: std_logic_vector(63 downto 0);
  signal register0_q_net_x14: std_logic_vector(7 downto 0);
  signal register0_q_net_x15: std_logic;
  signal register0_q_net_x16: std_logic;
  signal register0_q_net_x17: std_logic_vector(63 downto 0);
  signal register0_q_net_x18: std_logic_vector(31 downto 0);
  signal register0_q_net_x19: std_logic;
  signal register0_q_net_x4: std_logic_vector(63 downto 0);
  signal register0_q_net_x5: std_logic;
  signal register0_q_net_x8: std_logic;
  signal register0_q_net_x9: std_logic;
  signal register1_q_net: std_logic_vector(63 downto 0);
  signal register5_q_net_x1: std_logic;
  signal register_q_net: std_logic_vector(3 downto 0);
  signal relational1_op_net: std_logic;
  signal relational5_op_net_x0: std_logic;
  signal slice11_y_net: std_logic_vector(28 downto 0);
  signal slice4_y_net: std_logic_vector(3 downto 0);
  signal slice7_y_net: std_logic_vector(2 downto 0);

begin
  delay37_q_net_x0 <= base_ip;
  ce_1_sg_x705 <= ce_1;
  clk_1_sg_x705 <= clk_1;
  register0_q_net_x13 <= din;
  register0_q_net_x16 <= linkdown_in;
  register0_q_net_x14 <= oob;
  register0_q_net_x15 <= valid_in;
  dest_ip <= register0_q_net_x18;
  discard <= register5_q_net_x1;
  dout <= register0_q_net_x17;
  eof <= logical1_y_net_x2;
  valid_out <= register0_q_net_x19;

  concat6: entity work.concat_397b8dc5c3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => slice11_y_net,
      in1 => slice7_y_net,
      y => concat6_y_net_x0
    );

  constant2: entity work.constant_473db002f8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x705,
      clk => clk_1_sg_x705,
      clr => '0',
      din(0) => register0_q_net_x9,
      en => "1",
      dout(0) => convert_dout_net
    );

  delay10_550f6ae361: entity work.delay3_entity_1a1c4e6264
    port map (
      ce_1 => ce_1_sg_x705,
      clk_1 => clk_1_sg_x705,
      d => mux1_y_net_x0,
      q => register0_q_net_x17
    );

  delay11_12d6774927: entity work.delay10_entity_8181a66134
    port map (
      ce_1 => ce_1_sg_x705,
      clk_1 => clk_1_sg_x705,
      d => concat6_y_net_x0,
      q => register0_q_net_x18
    );

  delay1_a10eb1dda2: entity work.delay11_entity_c2a06abd76
    port map (
      ce_1 => ce_1_sg_x705,
      clk_1 => clk_1_sg_x705,
      d => logical2_y_net_x0,
      q => register0_q_net_x5
    );

  delay2_0f506f8e22: entity work.delay11_entity_c2a06abd76
    port map (
      ce_1 => ce_1_sg_x705,
      clk_1 => clk_1_sg_x705,
      d => logical2_y_net_x2,
      q => register0_q_net_x8
    );

  delay3_abdffc720d: entity work.delay11_entity_c2a06abd76
    port map (
      ce_1 => ce_1_sg_x705,
      clk_1 => clk_1_sg_x705,
      d => logical3_y_net_x1,
      q => register0_q_net_x9
    );

  delay4_4321f85336: entity work.delay11_entity_c2a06abd76
    port map (
      ce_1 => ce_1_sg_x705,
      clk_1 => clk_1_sg_x705,
      d => logical2_y_net_x2,
      q => register0_q_net_x10
    );

  delay6_d627d8a13a: entity work.delay11_entity_c2a06abd76
    port map (
      ce_1 => ce_1_sg_x705,
      clk_1 => clk_1_sg_x705,
      d => register0_q_net_x5,
      q => register0_q_net_x19
    );

  delay7_96d4554068: entity work.delay11_entity_c2a06abd76
    port map (
      ce_1 => ce_1_sg_x705,
      clk_1 => clk_1_sg_x705,
      d => register0_q_net_x8,
      q => register0_q_net_x12
    );

  delay_d38b8a8bd4: entity work.delay3_entity_1a1c4e6264
    port map (
      ce_1 => ce_1_sg_x705,
      clk_1 => clk_1_sg_x705,
      d => register0_q_net_x13,
      q => register0_q_net_x4
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x705,
      clk => clk_1_sg_x705,
      clr => '0',
      ip(0) => relational5_op_net_x0,
      op(0) => inverter_op_net
    );

  inverter1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x705,
      clk => clk_1_sg_x705,
      clr => '0',
      ip(0) => register5_q_net_x1,
      op(0) => inverter1_op_net
    );

  logical: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register0_q_net_x15,
      d1(0) => inverter_op_net,
      y(0) => logical_y_net_x0
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register0_q_net_x12,
      d1(0) => inverter1_op_net,
      y(0) => logical1_y_net_x2
    );

  logical2: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical3_y_net_x1,
      d1(0) => logical1_y_net_x1,
      y(0) => logical2_y_net_x0
    );

  mux1: entity work.mux_dc8b84fd59
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => register0_q_net_x4,
      d1 => register1_q_net,
      sel(0) => convert_dout_net,
      y => mux1_y_net_x0
    );

  neg_edge_delay_668f7e6187: entity work.neg_edge_delay_entity_668f7e6187
    port map (
      ce_1 => ce_1_sg_x705,
      clk_1 => clk_1_sg_x705,
      in_x0 => register0_q_net_x16,
      out_x0 => relational5_op_net_x0
    );

  oob_decode_1e541f49c9: entity work.oob_decode_entity_1e541f49c9
    port map (
      ce_1 => ce_1_sg_x705,
      clk_1 => clk_1_sg_x705,
      oob_in => register0_q_net_x14,
      valid_in => logical_y_net_x0,
      eof => logical2_y_net_x2,
      header => logical3_y_net_x1,
      packet_data => logical1_y_net_x1
    );

  payload_cnt: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_aeada998ec385fcd",
      op_arith => xlUnsigned,
      op_width => 7
    )
    port map (
      ce => ce_1_sg_x705,
      clk => clk_1_sg_x705,
      clr => '0',
      en(0) => logical1_y_net_x1,
      rst(0) => logical3_y_net_x1,
      op => payload_cnt_op_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 64,
      init_value => b"0000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x705,
      clk => clk_1_sg_x705,
      d => register0_q_net_x13,
      en(0) => logical3_y_net_x1,
      rst => "0",
      q => register1_q_net
    );

  register5: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x705,
      clk => clk_1_sg_x705,
      d(0) => relational1_op_net,
      en(0) => register0_q_net_x10,
      rst => "0",
      q(0) => register5_q_net_x1
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 4,
      init_value => b"0000"
    )
    port map (
      ce => ce_1_sg_x705,
      clk => clk_1_sg_x705,
      d => slice4_y_net,
      en(0) => logical3_y_net_x1,
      rst => "0",
      q => register_q_net
    );

  relational1: entity work.relational_23065a6aa3
    port map (
      a => payload_cnt_op_net,
      b => constant2_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

  slice11: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 31,
      x_width => 32,
      y_width => 29
    )
    port map (
      x => delay37_q_net_x0,
      y => slice11_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 24,
      new_msb => 27,
      x_width => 64,
      y_width => 4
    )
    port map (
      x => register0_q_net_x13,
      y => slice4_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 3,
      x_width => 4,
      y_width => 3
    )
    port map (
      x => register_q_net,
      y => slice7_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "c09f12_01"

entity c09f12_01 is
  port (
    c09f12_01_a0_fd0_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_a0_fd1_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_a1_fd0_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_a1_fd1_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_adc_ctrl0_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_adc_ctrl1_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_adc_snap0_bram_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_adc_snap0_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_adc_snap0_trig_offset_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_adc_snap1_bram_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_adc_snap1_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_adc_snap1_trig_offset_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_board_id_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_coarse_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_coarse_delay0_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_coarse_delay1_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_control_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_eq0_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_eq1_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_fine_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_gbe0_led_rx: in std_logic; 
    c09f12_01_gbe0_led_tx: in std_logic; 
    c09f12_01_gbe0_led_up: in std_logic; 
    c09f12_01_gbe0_rx_bad_frame: in std_logic; 
    c09f12_01_gbe0_rx_data: in std_logic_vector(63 downto 0); 
    c09f12_01_gbe0_rx_end_of_frame: in std_logic; 
    c09f12_01_gbe0_rx_overrun: in std_logic; 
    c09f12_01_gbe0_rx_source_ip: in std_logic_vector(31 downto 0); 
    c09f12_01_gbe0_rx_source_port: in std_logic_vector(15 downto 0); 
    c09f12_01_gbe0_rx_valid: in std_logic; 
    c09f12_01_gbe0_tx_afull: in std_logic; 
    c09f12_01_gbe0_tx_overflow: in std_logic; 
    c09f12_01_gbe_ip0_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_gbe_port_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_katadc0_user_data_valid: in std_logic; 
    c09f12_01_katadc0_user_datai0: in std_logic_vector(7 downto 0); 
    c09f12_01_katadc0_user_datai1: in std_logic_vector(7 downto 0); 
    c09f12_01_katadc0_user_datai2: in std_logic_vector(7 downto 0); 
    c09f12_01_katadc0_user_datai3: in std_logic_vector(7 downto 0); 
    c09f12_01_katadc0_user_dataq0: in std_logic_vector(7 downto 0); 
    c09f12_01_katadc0_user_dataq1: in std_logic_vector(7 downto 0); 
    c09f12_01_katadc0_user_dataq2: in std_logic_vector(7 downto 0); 
    c09f12_01_katadc0_user_dataq3: in std_logic_vector(7 downto 0); 
    c09f12_01_katadc0_user_outofrange0: in std_logic; 
    c09f12_01_katadc0_user_outofrange1: in std_logic; 
    c09f12_01_katadc0_user_sync0: in std_logic; 
    c09f12_01_katadc0_user_sync1: in std_logic; 
    c09f12_01_katadc0_user_sync2: in std_logic; 
    c09f12_01_katadc0_user_sync3: in std_logic; 
    c09f12_01_ld_time_lsw0_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_ld_time_lsw1_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_ld_time_msw0_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_ld_time_msw1_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_qdr_ct_qdr_ack: in std_logic; 
    c09f12_01_qdr_ct_qdr_cal_fail: in std_logic; 
    c09f12_01_qdr_ct_qdr_data_out: in std_logic_vector(35 downto 0); 
    c09f12_01_qdr_ct_qdr_phy_ready: in std_logic; 
    c09f12_01_snap_debug_bram_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_snap_debug_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    c09f12_01_trig_level_user_data_out: in std_logic_vector(31 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    c09f12_01_adc_snap0_bram_addr: out std_logic_vector(9 downto 0); 
    c09f12_01_adc_snap0_bram_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_adc_snap0_bram_we: out std_logic; 
    c09f12_01_adc_snap0_status_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_adc_snap0_tr_en_cnt_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_adc_snap0_val_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_adc_snap1_bram_addr: out std_logic_vector(9 downto 0); 
    c09f12_01_adc_snap1_bram_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_adc_snap1_bram_we: out std_logic; 
    c09f12_01_adc_snap1_status_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_adc_snap1_tr_en_cnt_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_adc_snap1_val_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_adc_sum_sq0_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_adc_sum_sq1_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_clk_frequency_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_delay_tr_status0_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_delay_tr_status1_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_eq0_addr: out std_logic_vector(11 downto 0); 
    c09f12_01_eq0_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_eq0_we: out std_logic; 
    c09f12_01_eq1_addr: out std_logic_vector(11 downto 0); 
    c09f12_01_eq1_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_eq1_we: out std_logic; 
    c09f12_01_fstatus0_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_fstatus1_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_gbe0_rst: out std_logic; 
    c09f12_01_gbe0_rx_ack: out std_logic; 
    c09f12_01_gbe0_rx_overrun_ack: out std_logic; 
    c09f12_01_gbe0_tx_data: out std_logic_vector(63 downto 0); 
    c09f12_01_gbe0_tx_dest_ip: out std_logic_vector(31 downto 0); 
    c09f12_01_gbe0_tx_dest_port: out std_logic_vector(15 downto 0); 
    c09f12_01_gbe0_tx_end_of_frame: out std_logic; 
    c09f12_01_gbe0_tx_valid: out std_logic; 
    c09f12_01_gbe_tx_cnt0_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_gbe_tx_err_cnt0_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_katadc0_gain_load: out std_logic; 
    c09f12_01_katadc0_gain_value: out std_logic_vector(13 downto 0); 
    c09f12_01_leds_roach_gpioa0_gateway: out std_logic; 
    c09f12_01_leds_roach_gpioa1_gateway: out std_logic; 
    c09f12_01_leds_roach_gpioa2_gateway: out std_logic; 
    c09f12_01_leds_roach_gpioa3_gateway: out std_logic; 
    c09f12_01_leds_roach_gpioa4_gateway: out std_logic; 
    c09f12_01_leds_roach_gpioa5_gateway: out std_logic; 
    c09f12_01_leds_roach_gpioa6_gateway: out std_logic; 
    c09f12_01_leds_roach_gpioa7_gateway: out std_logic; 
    c09f12_01_leds_roach_gpioa_oe_gateway: out std_logic; 
    c09f12_01_leds_roach_led0_gateway: out std_logic; 
    c09f12_01_leds_roach_led1_gateway: out std_logic; 
    c09f12_01_leds_roach_led2_gateway: out std_logic; 
    c09f12_01_leds_roach_led3_gateway: out std_logic; 
    c09f12_01_mcount_lsw_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_mcount_msw_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_pps_count_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_qdr_ct_qdr_address: out std_logic_vector(31 downto 0); 
    c09f12_01_qdr_ct_qdr_be: out std_logic_vector(3 downto 0); 
    c09f12_01_qdr_ct_qdr_data_in: out std_logic_vector(35 downto 0); 
    c09f12_01_qdr_ct_qdr_rd_en: out std_logic; 
    c09f12_01_qdr_ct_qdr_wr_en: out std_logic; 
    c09f12_01_rcs_app_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_rcs_lib_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_rcs_user_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_snap_debug_addr_user_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_snap_debug_bram_addr: out std_logic_vector(10 downto 0); 
    c09f12_01_snap_debug_bram_data_in: out std_logic_vector(31 downto 0); 
    c09f12_01_snap_debug_bram_we: out std_logic; 
    gateway_out: out std_logic; 
    gateway_out1: out std_logic_vector(25 downto 0); 
    gateway_out1_x0: out std_logic_vector(25 downto 0); 
    gateway_out1_x1: out std_logic_vector(25 downto 0); 
    gateway_out1_x2: out std_logic_vector(25 downto 0); 
    gateway_out1_x3: out std_logic_vector(25 downto 0); 
    gateway_out1_x4: out std_logic_vector(25 downto 0); 
    gateway_out1_x5: out std_logic_vector(25 downto 0); 
    gateway_out1_x6: out std_logic_vector(25 downto 0); 
    gateway_out2: out std_logic; 
    gateway_out2_x0: out std_logic; 
    gateway_out2_x1: out std_logic; 
    gateway_out2_x2: out std_logic; 
    gateway_out2_x3: out std_logic; 
    gateway_out2_x4: out std_logic; 
    gateway_out2_x5: out std_logic; 
    gateway_out2_x6: out std_logic; 
    gateway_out_x0: out std_logic; 
    gateway_out_x1: out std_logic; 
    gateway_out_x2: out std_logic; 
    gateway_out_x3: out std_logic; 
    gateway_out_x4: out std_logic; 
    gateway_out_x5: out std_logic; 
    gateway_out_x6: out std_logic; 
    gateway_t1: out std_logic_vector(7 downto 0); 
    gateway_t1_x0: out std_logic_vector(7 downto 0); 
    gateway_t1_x1: out std_logic_vector(7 downto 0); 
    gateway_t1_x2: out std_logic_vector(7 downto 0); 
    gateway_t1_x3: out std_logic_vector(7 downto 0); 
    gateway_t1_x4: out std_logic_vector(7 downto 0); 
    gateway_t1_x5: out std_logic_vector(7 downto 0); 
    gateway_t1_x6: out std_logic_vector(7 downto 0); 
    gateway_t2: out std_logic; 
    gateway_t2_x0: out std_logic; 
    gateway_t2_x1: out std_logic; 
    gateway_t2_x2: out std_logic; 
    gateway_t2_x3: out std_logic; 
    gateway_t2_x4: out std_logic; 
    gateway_t2_x5: out std_logic; 
    gateway_t2_x6: out std_logic; 
    gateway_t3: out std_logic_vector(8 downto 0); 
    gateway_t3_x0: out std_logic_vector(8 downto 0); 
    gateway_t3_x1: out std_logic_vector(8 downto 0); 
    gateway_t3_x2: out std_logic_vector(8 downto 0); 
    gateway_t3_x3: out std_logic_vector(8 downto 0); 
    gateway_t3_x4: out std_logic_vector(8 downto 0); 
    gateway_t3_x5: out std_logic_vector(8 downto 0); 
    gateway_t3_x6: out std_logic_vector(8 downto 0)
  );
end c09f12_01;

architecture structural of c09f12_01 is
  attribute core_generation_info: string;
  attribute core_generation_info of structural : architecture is "c09f12_01,sysgen_core,{clock_period=5.00000000,clocking=Clock_Enables,compilation=NGC_Netlist,sample_periods=1.00000000000,testbench=0,total_blocks=14359,xilinx_accumulator_block=2,xilinx_adder_subtracter_block=192,xilinx_arithmetic_relational_operator_block=143,xilinx_assert_block=6,xilinx_binary_shift_operator_block=26,xilinx_bit_slice_extractor_block=1362,xilinx_bitbasher_block=2,xilinx_bus_concatenator_block=401,xilinx_bus_multiplexer_block=276,xilinx_constant_block_block=764,xilinx_counter_block=218,xilinx_delay_block=709,xilinx_disregard_subsystem_for_generation_block=10,xilinx_dsp48e_block=52,xilinx_dual_port_random_access_memory_block=10,xilinx_fast_fourier_transform_7_0_block=2,xilinx_gateway_in_block=79,xilinx_gateway_out_block=204,xilinx_input_scaler_block=116,xilinx_inverter_block=571,xilinx_logical_block_block=662,xilinx_multiplier_block=126,xilinx_negate_block_block=14,xilinx_register_block=214,xilinx_single_port_random_access_memory_block=53,xilinx_single_port_read_only_memory_block=79,xilinx_system_generator_block=1,xilinx_type_converter_block=536,xilinx_type_reinterpreter_block=1370,xilinx_wavescope_block=8,}";

  signal addsub1_s_net: std_logic_vector(14 downto 0);
  signal addsub_s_net: std_logic_vector(14 downto 0);
  signal arm10_y_net: std_logic;
  signal arm11_y_net: std_logic;
  signal arm12_y_net_x0: std_logic;
  signal arm14_y_net_x0: std_logic_vector(2 downto 0);
  signal arm1_y_net_x0: std_logic;
  signal arm2_y_net_x0: std_logic;
  signal arm3_y_net_x0: std_logic;
  signal arm4_y_net: std_logic;
  signal arm5_y_net: std_logic;
  signal arm6_y_net: std_logic;
  signal arm8_y_net_x0: std_logic;
  signal arm9_y_net_x0: std_logic;
  signal c09f12_01_a0_fd0_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_a0_fd1_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_a1_fd0_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_a1_fd1_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_ctrl0_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_ctrl1_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_snap0_bram_addr_net: std_logic_vector(9 downto 0);
  signal c09f12_01_adc_snap0_bram_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_snap0_bram_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_snap0_bram_we_net: std_logic;
  signal c09f12_01_adc_snap0_ctrl_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_snap0_status_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_snap0_tr_en_cnt_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_snap0_trig_offset_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_snap0_val_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_snap1_bram_addr_net: std_logic_vector(9 downto 0);
  signal c09f12_01_adc_snap1_bram_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_snap1_bram_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_snap1_bram_we_net: std_logic;
  signal c09f12_01_adc_snap1_ctrl_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_snap1_status_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_snap1_tr_en_cnt_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_snap1_trig_offset_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_snap1_val_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_sum_sq0_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_adc_sum_sq1_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_board_id_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_clk_frequency_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_coarse_ctrl_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_coarse_delay0_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_coarse_delay1_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_control_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_delay_tr_status0_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_delay_tr_status1_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_eq0_addr_net: std_logic_vector(11 downto 0);
  signal c09f12_01_eq0_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_eq0_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_eq0_we_net: std_logic;
  signal c09f12_01_eq1_addr_net: std_logic_vector(11 downto 0);
  signal c09f12_01_eq1_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_eq1_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_eq1_we_net: std_logic;
  signal c09f12_01_fine_ctrl_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_fstatus0_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_fstatus1_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_gbe0_led_rx_net: std_logic;
  signal c09f12_01_gbe0_led_tx_net: std_logic;
  signal c09f12_01_gbe0_led_up_net: std_logic;
  signal c09f12_01_gbe0_rst_net: std_logic;
  signal c09f12_01_gbe0_rx_ack_net: std_logic;
  signal c09f12_01_gbe0_rx_bad_frame_net: std_logic;
  signal c09f12_01_gbe0_rx_data_net: std_logic_vector(63 downto 0);
  signal c09f12_01_gbe0_rx_end_of_frame_net: std_logic;
  signal c09f12_01_gbe0_rx_overrun_ack_net: std_logic;
  signal c09f12_01_gbe0_rx_overrun_net: std_logic;
  signal c09f12_01_gbe0_rx_source_ip_net: std_logic_vector(31 downto 0);
  signal c09f12_01_gbe0_rx_source_port_net: std_logic_vector(15 downto 0);
  signal c09f12_01_gbe0_rx_valid_net: std_logic;
  signal c09f12_01_gbe0_tx_afull_net: std_logic;
  signal c09f12_01_gbe0_tx_data_net: std_logic_vector(63 downto 0);
  signal c09f12_01_gbe0_tx_dest_ip_net: std_logic_vector(31 downto 0);
  signal c09f12_01_gbe0_tx_dest_port_net: std_logic_vector(15 downto 0);
  signal c09f12_01_gbe0_tx_end_of_frame_net: std_logic;
  signal c09f12_01_gbe0_tx_overflow_net: std_logic;
  signal c09f12_01_gbe0_tx_valid_net: std_logic;
  signal c09f12_01_gbe_ip0_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_gbe_port_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_gbe_tx_cnt0_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_gbe_tx_err_cnt0_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_katadc0_gain_load_net: std_logic;
  signal c09f12_01_katadc0_gain_value_net: std_logic_vector(13 downto 0);
  signal c09f12_01_katadc0_user_data_valid_net: std_logic;
  signal c09f12_01_katadc0_user_datai0_net: std_logic_vector(7 downto 0);
  signal c09f12_01_katadc0_user_datai1_net: std_logic_vector(7 downto 0);
  signal c09f12_01_katadc0_user_datai2_net: std_logic_vector(7 downto 0);
  signal c09f12_01_katadc0_user_datai3_net: std_logic_vector(7 downto 0);
  signal c09f12_01_katadc0_user_dataq0_net: std_logic_vector(7 downto 0);
  signal c09f12_01_katadc0_user_dataq1_net: std_logic_vector(7 downto 0);
  signal c09f12_01_katadc0_user_dataq2_net: std_logic_vector(7 downto 0);
  signal c09f12_01_katadc0_user_dataq3_net: std_logic_vector(7 downto 0);
  signal c09f12_01_katadc0_user_outofrange0_net: std_logic;
  signal c09f12_01_katadc0_user_outofrange1_net: std_logic;
  signal c09f12_01_katadc0_user_sync0_net: std_logic;
  signal c09f12_01_katadc0_user_sync1_net: std_logic;
  signal c09f12_01_katadc0_user_sync2_net: std_logic;
  signal c09f12_01_katadc0_user_sync3_net: std_logic;
  signal c09f12_01_ld_time_lsw0_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_ld_time_lsw1_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_ld_time_msw0_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_ld_time_msw1_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_leds_roach_gpioa0_gateway_net: std_logic;
  signal c09f12_01_leds_roach_gpioa1_gateway_net: std_logic;
  signal c09f12_01_leds_roach_gpioa2_gateway_net: std_logic;
  signal c09f12_01_leds_roach_gpioa3_gateway_net: std_logic;
  signal c09f12_01_leds_roach_gpioa4_gateway_net: std_logic;
  signal c09f12_01_leds_roach_gpioa5_gateway_net: std_logic;
  signal c09f12_01_leds_roach_gpioa6_gateway_net: std_logic;
  signal c09f12_01_leds_roach_gpioa7_gateway_net: std_logic;
  signal c09f12_01_leds_roach_gpioa_oe_gateway_net: std_logic;
  signal c09f12_01_leds_roach_led0_gateway_net: std_logic;
  signal c09f12_01_leds_roach_led1_gateway_net: std_logic;
  signal c09f12_01_leds_roach_led2_gateway_net: std_logic;
  signal c09f12_01_leds_roach_led3_gateway_net: std_logic;
  signal c09f12_01_mcount_lsw_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_mcount_msw_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_pps_count_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_qdr_ct_qdr_ack_net: std_logic;
  signal c09f12_01_qdr_ct_qdr_address_net: std_logic_vector(31 downto 0);
  signal c09f12_01_qdr_ct_qdr_be_net: std_logic_vector(3 downto 0);
  signal c09f12_01_qdr_ct_qdr_cal_fail_net: std_logic;
  signal c09f12_01_qdr_ct_qdr_data_in_net: std_logic_vector(35 downto 0);
  signal c09f12_01_qdr_ct_qdr_data_out_net: std_logic_vector(35 downto 0);
  signal c09f12_01_qdr_ct_qdr_phy_ready_net: std_logic;
  signal c09f12_01_qdr_ct_qdr_rd_en_net: std_logic;
  signal c09f12_01_qdr_ct_qdr_wr_en_net: std_logic;
  signal c09f12_01_rcs_app_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_rcs_lib_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_rcs_user_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_snap_debug_addr_user_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_snap_debug_bram_addr_net: std_logic_vector(10 downto 0);
  signal c09f12_01_snap_debug_bram_data_in_net: std_logic_vector(31 downto 0);
  signal c09f12_01_snap_debug_bram_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_snap_debug_bram_we_net: std_logic;
  signal c09f12_01_snap_debug_ctrl_user_data_out_net: std_logic_vector(31 downto 0);
  signal c09f12_01_trig_level_user_data_out_net: std_logic_vector(31 downto 0);
  signal ce_1_sg_x706: std_logic;
  signal clk_1_sg_x706: std_logic;
  signal clock_op_net_x3: std_logic_vector(63 downto 0);
  signal concat13_y_net_x1: std_logic_vector(31 downto 0);
  signal concat13_y_net_x2: std_logic_vector(31 downto 0);
  signal concat13_y_net_x3: std_logic_vector(31 downto 0);
  signal concat1_y_net_x4: std_logic_vector(78 downto 0);
  signal concat1_y_net_x5: std_logic_vector(31 downto 0);
  signal concat21_y_net_x0: std_logic_vector(31 downto 0);
  signal concat22_y_net_x3: std_logic_vector(78 downto 0);
  signal concat2_y_net_x3: std_logic_vector(47 downto 0);
  signal concat6_y_net_x0: std_logic_vector(32 downto 0);
  signal concat9_y_net_x4: std_logic_vector(47 downto 0);
  signal concat_y_net_x1: std_logic_vector(64 downto 0);
  signal concatenate_y_net_x0: std_logic_vector(63 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(129 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(129 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x20: std_logic_vector(65 downto 0);
  signal concatenate_y_net_x21: std_logic_vector(73 downto 0);
  signal concatenate_y_net_x22: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x23: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x24: std_logic_vector(73 downto 0);
  signal concatenate_y_net_x25: std_logic_vector(73 downto 0);
  signal concatenate_y_net_x26: std_logic_vector(129 downto 0);
  signal concatenate_y_net_x27: std_logic_vector(17 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(123 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(15 downto 0);
  signal constant14_op_net_x0: std_logic;
  signal constant15_op_net_x1: std_logic;
  signal constant17_op_net_x1: std_logic;
  signal constant1_op_net_x3: std_logic;
  signal constant20_op_net: std_logic;
  signal constant23_op_net_x1: std_logic;
  signal constant24_op_net_x0: std_logic;
  signal constant37_op_net: std_logic_vector(31 downto 0);
  signal constant3_op_net_x2: std_logic;
  signal constant41_op_net_x0: std_logic_vector(31 downto 0);
  signal constant46_op_net_x0: std_logic;
  signal constant5_op_net: std_logic_vector(31 downto 0);
  signal constant8_op_net_x0: std_logic_vector(31 downto 0);
  signal convert1_dout_net_x1: std_logic_vector(31 downto 0);
  signal convert1_dout_net_x2: std_logic_vector(31 downto 0);
  signal counter1_op_net: std_logic_vector(31 downto 0);
  signal counter3_op_net: std_logic_vector(30 downto 0);
  signal counter8_op_net_x3: std_logic_vector(11 downto 0);
  signal delay12_q_net: std_logic;
  signal delay14_q_net_x1: std_logic_vector(123 downto 0);
  signal delay15_q_net_x2: std_logic;
  signal delay16_q_net_x1: std_logic;
  signal delay16_q_net_x2: std_logic;
  signal delay17_q_net: std_logic_vector(31 downto 0);
  signal delay18_q_net: std_logic_vector(31 downto 0);
  signal delay19_q_net: std_logic_vector(31 downto 0);
  signal delay1_q_net: std_logic;
  signal delay1_q_net_x0: std_logic;
  signal delay1_q_net_x1: std_logic_vector(123 downto 0);
  signal delay1_q_net_x4: std_logic;
  signal delay1_q_net_x5: std_logic;
  signal delay1_q_net_x6: std_logic;
  signal delay1_q_net_x7: std_logic_vector(31 downto 0);
  signal delay1_q_net_x8: std_logic_vector(31 downto 0);
  signal delay20_q_net: std_logic_vector(31 downto 0);
  signal delay21_q_net_x1: std_logic_vector(19 downto 0);
  signal delay22_q_net_x2: std_logic;
  signal delay24_q_net_x1: std_logic_vector(71 downto 0);
  signal delay25_q_net: std_logic_vector(31 downto 0);
  signal delay26_q_net: std_logic_vector(31 downto 0);
  signal delay27_q_net: std_logic_vector(31 downto 0);
  signal delay28_q_net: std_logic_vector(31 downto 0);
  signal delay29_q_net: std_logic_vector(31 downto 0);
  signal delay2_q_net_x1: std_logic;
  signal delay2_q_net_x2: std_logic;
  signal delay2_q_net_x3: std_logic_vector(64 downto 0);
  signal delay2_q_net_x4: std_logic_vector(32 downto 0);
  signal delay30_q_net: std_logic_vector(31 downto 0);
  signal delay32_q_net: std_logic_vector(31 downto 0);
  signal delay35_q_net_x1: std_logic_vector(31 downto 0);
  signal delay36_q_net_x0: std_logic_vector(31 downto 0);
  signal delay37_q_net_x0: std_logic_vector(31 downto 0);
  signal delay39_q_net: std_logic_vector(31 downto 0);
  signal delay3_q_net_x1: std_logic;
  signal delay40_q_net: std_logic_vector(31 downto 0);
  signal delay41_q_net: std_logic_vector(31 downto 0);
  signal delay42_q_net_x0: std_logic_vector(31 downto 0);
  signal delay43_q_net_x1: std_logic;
  signal delay44_q_net_x1: std_logic_vector(123 downto 0);
  signal delay45_q_net_x1: std_logic;
  signal delay46_q_net_x1: std_logic_vector(63 downto 0);
  signal delay4_q_net_x3: std_logic;
  signal delay5_q_net_x2: std_logic;
  signal delay6_q_net_x0: std_logic_vector(19 downto 0);
  signal delay6_q_net_x2: std_logic;
  signal delay6_q_net_x7: std_logic;
  signal delay8_q_net: std_logic_vector(123 downto 0);
  signal delay_q_net_x0: std_logic;
  signal delay_q_net_x4: std_logic;
  signal delay_sync_q_net_x12: std_logic;
  signal dvalid_x3: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal edge_op_y_net_x1: std_logic;
  signal edge_op_y_net_x2: std_logic;
  signal edge_op_y_net_x3: std_logic;
  signal edge_op_y_net_x4: std_logic;
  signal edge_op_y_net_x5: std_logic;
  signal edge_op_y_net_x6: std_logic;
  signal fstatcbits0_op_net_x0: std_logic_vector(4 downto 0);
  signal fstatcbits1_op_net_x0: std_logic_vector(4 downto 0);
  signal fstatfbits0_op_net_x0: std_logic_vector(4 downto 0);
  signal fstatfbits1_op_net_x0: std_logic_vector(4 downto 0);
  signal gateway_out1_net: std_logic_vector(25 downto 0);
  signal gateway_out1_x0_net: std_logic_vector(25 downto 0);
  signal gateway_out1_x1_net: std_logic_vector(25 downto 0);
  signal gateway_out1_x2_net: std_logic_vector(25 downto 0);
  signal gateway_out1_x3_net: std_logic_vector(25 downto 0);
  signal gateway_out1_x4_net: std_logic_vector(25 downto 0);
  signal gateway_out1_x5_net: std_logic_vector(25 downto 0);
  signal gateway_out1_x6_net: std_logic_vector(25 downto 0);
  signal gateway_out2_net: std_logic;
  signal gateway_out2_x0_net: std_logic;
  signal gateway_out2_x1_net: std_logic;
  signal gateway_out2_x2_net: std_logic;
  signal gateway_out2_x3_net: std_logic;
  signal gateway_out2_x4_net: std_logic;
  signal gateway_out2_x5_net: std_logic;
  signal gateway_out2_x6_net: std_logic;
  signal gateway_out_net: std_logic;
  signal gateway_out_x0_net: std_logic;
  signal gateway_out_x1_net: std_logic;
  signal gateway_out_x2_net: std_logic;
  signal gateway_out_x3_net: std_logic;
  signal gateway_out_x4_net: std_logic;
  signal gateway_out_x5_net: std_logic;
  signal gateway_out_x6_net: std_logic;
  signal gateway_t1_net: std_logic_vector(7 downto 0);
  signal gateway_t1_x0_net: std_logic_vector(7 downto 0);
  signal gateway_t1_x1_net: std_logic_vector(7 downto 0);
  signal gateway_t1_x2_net: std_logic_vector(7 downto 0);
  signal gateway_t1_x3_net: std_logic_vector(7 downto 0);
  signal gateway_t1_x4_net: std_logic_vector(7 downto 0);
  signal gateway_t1_x5_net: std_logic_vector(7 downto 0);
  signal gateway_t1_x6_net: std_logic_vector(7 downto 0);
  signal gateway_t2_net: std_logic;
  signal gateway_t2_x0_net: std_logic;
  signal gateway_t2_x1_net: std_logic;
  signal gateway_t2_x2_net: std_logic;
  signal gateway_t2_x3_net: std_logic;
  signal gateway_t2_x4_net: std_logic;
  signal gateway_t2_x5_net: std_logic;
  signal gateway_t2_x6_net: std_logic;
  signal gateway_t3_net: std_logic_vector(8 downto 0);
  signal gateway_t3_x0_net: std_logic_vector(8 downto 0);
  signal gateway_t3_x1_net: std_logic_vector(8 downto 0);
  signal gateway_t3_x2_net: std_logic_vector(8 downto 0);
  signal gateway_t3_x3_net: std_logic_vector(8 downto 0);
  signal gateway_t3_x4_net: std_logic_vector(8 downto 0);
  signal gateway_t3_x5_net: std_logic_vector(8 downto 0);
  signal gateway_t3_x6_net: std_logic_vector(8 downto 0);
  signal inverter1_op_net: std_logic;
  signal inverter2_op_net: std_logic;
  signal inverter3_op_net_x0: std_logic;
  signal inverter4_op_net: std_logic;
  signal inverter5_op_net_x0: std_logic;
  signal inverter6_op_net: std_logic;
  signal inverter_op_net_x1: std_logic;
  signal logical10_y_net_x1: std_logic;
  signal logical11_y_net: std_logic;
  signal logical12_y_net_x2: std_logic;
  signal logical12_y_net_x3: std_logic;
  signal logical14_y_net_x19: std_logic;
  signal logical17_y_net_x2: std_logic;
  signal logical1_y_net_x0: std_logic;
  signal logical1_y_net_x2: std_logic;
  signal logical1_y_net_x3: std_logic;
  signal logical1_y_net_x4: std_logic;
  signal logical21_y_net_x1: std_logic;
  signal logical2_y_net_x3: std_logic;
  signal logical3_y_net_x0: std_logic;
  signal logical4_y_net_x2: std_logic;
  signal logical5_y_net_x2: std_logic;
  signal logical6_y_net: std_logic;
  signal logical7_y_net_x0: std_logic;
  signal logical8_y_net_x1: std_logic;
  signal logical9_y_net: std_logic;
  signal logical_y_net_x3: std_logic;
  signal man_sync1_y_net_x0: std_logic;
  signal mux1_y_net_x4: std_logic_vector(63 downto 0);
  signal mux1_y_net_x5: std_logic_vector(15 downto 0);
  signal mux3_y_net_x1: std_logic_vector(63 downto 0);
  signal mux_y_net_x2: std_logic_vector(1 downto 0);
  signal oob_out_x2: std_logic_vector(7 downto 0);
  signal payload_cnt1_op_net_x1: std_logic_vector(31 downto 0);
  signal payload_cnt_op_net_x1: std_logic_vector(31 downto 0);
  signal pkt_out_x2: std_logic_vector(63 downto 0);
  signal register0_q_net_x1: std_logic;
  signal register0_q_net_x13: std_logic_vector(63 downto 0);
  signal register0_q_net_x14: std_logic_vector(7 downto 0);
  signal register0_q_net_x15: std_logic;
  signal register0_q_net_x16: std_logic;
  signal register0_q_net_x17: std_logic_vector(63 downto 0);
  signal register0_q_net_x18: std_logic_vector(63 downto 0);
  signal register0_q_net_x19: std_logic_vector(31 downto 0);
  signal register0_q_net_x2: std_logic;
  signal register0_q_net_x20: std_logic;
  signal register0_q_net_x7: std_logic_vector(31 downto 0);
  signal register0_q_net_x9: std_logic;
  signal register19_q_net_x0: std_logic_vector(31 downto 0);
  signal register1_q_net_x0: std_logic;
  signal register1_q_net_x1: std_logic;
  signal register1_q_net_x2: std_logic;
  signal register2_q_net_x0: std_logic;
  signal register3_q_net_x0: std_logic_vector(3 downto 0);
  signal register4_q_net_x0: std_logic;
  signal register5_q_net_x1: std_logic;
  signal register5_q_net_x2: std_logic;
  signal register7_q_net_x0: std_logic;
  signal register7_q_net_x1: std_logic;
  signal reinterpret0_0_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret0_1_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret0_2_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret0_3_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret1_0_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret1_1_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret1_2_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret1_3_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net_x7: std_logic_vector(127 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(7 downto 0);
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;
  signal slice10_y_net: std_logic_vector(15 downto 0);
  signal slice11_y_net_x1: std_logic;
  signal slice12_y_net: std_logic_vector(15 downto 0);
  signal slice13_y_net_x1: std_logic;
  signal slice14_y_net: std_logic_vector(14 downto 0);
  signal slice15_y_net: std_logic_vector(15 downto 0);
  signal slice16_y_net: std_logic_vector(31 downto 0);
  signal slice17_y_net_x1: std_logic;
  signal slice18_y_net_x1: std_logic;
  signal slice19_y_net_x1: std_logic_vector(5 downto 0);
  signal slice1_y_net: std_logic_vector(15 downto 0);
  signal slice1_y_net_x2: std_logic;
  signal slice1_y_net_x7: std_logic;
  signal slice21_y_net_x3: std_logic_vector(9 downto 0);
  signal slice29_y_net: std_logic;
  signal slice2_y_net: std_logic_vector(15 downto 0);
  signal slice2_y_net_x5: std_logic;
  signal slice30_y_net_x0: std_logic_vector(5 downto 0);
  signal slice33_y_net: std_logic;
  signal slice34_y_net_x0: std_logic_vector(5 downto 0);
  signal slice35_y_net: std_logic;
  signal slice36_y_net: std_logic;
  signal slice38_y_net: std_logic_vector(14 downto 0);
  signal slice3_y_net: std_logic_vector(15 downto 0);
  signal slice3_y_net_x0: std_logic;
  signal slice3_y_net_x7: std_logic;
  signal slice40_y_net: std_logic;
  signal slice45_y_net: std_logic;
  signal slice4_y_net: std_logic_vector(15 downto 0);
  signal slice6_y_net_x20: std_logic_vector(9 downto 0);
  signal slice73_y_net: std_logic_vector(15 downto 0);
  signal slice78_y_net: std_logic;
  signal slice7_y_net: std_logic_vector(15 downto 0);
  signal slice8_y_net: std_logic_vector(15 downto 0);
  signal slice9_y_net_x0: std_logic_vector(31 downto 0);
  signal slice_y_net_x0: std_logic_vector(31 downto 0);
  signal slice_y_net_x1: std_logic;
  signal sync_out_x3: std_logic;
  signal sync_period_constant_op_net_x0: std_logic_vector(30 downto 0);
  signal valid_out_x3: std_logic;

begin
  c09f12_01_a0_fd0_user_data_out_net <= c09f12_01_a0_fd0_user_data_out;
  c09f12_01_a0_fd1_user_data_out_net <= c09f12_01_a0_fd1_user_data_out;
  c09f12_01_a1_fd0_user_data_out_net <= c09f12_01_a1_fd0_user_data_out;
  c09f12_01_a1_fd1_user_data_out_net <= c09f12_01_a1_fd1_user_data_out;
  c09f12_01_adc_ctrl0_user_data_out_net <= c09f12_01_adc_ctrl0_user_data_out;
  c09f12_01_adc_ctrl1_user_data_out_net <= c09f12_01_adc_ctrl1_user_data_out;
  c09f12_01_adc_snap0_bram_data_out_net <= c09f12_01_adc_snap0_bram_data_out;
  c09f12_01_adc_snap0_ctrl_user_data_out_net <= c09f12_01_adc_snap0_ctrl_user_data_out;
  c09f12_01_adc_snap0_trig_offset_user_data_out_net <= c09f12_01_adc_snap0_trig_offset_user_data_out;
  c09f12_01_adc_snap1_bram_data_out_net <= c09f12_01_adc_snap1_bram_data_out;
  c09f12_01_adc_snap1_ctrl_user_data_out_net <= c09f12_01_adc_snap1_ctrl_user_data_out;
  c09f12_01_adc_snap1_trig_offset_user_data_out_net <= c09f12_01_adc_snap1_trig_offset_user_data_out;
  c09f12_01_board_id_user_data_out_net <= c09f12_01_board_id_user_data_out;
  c09f12_01_coarse_ctrl_user_data_out_net <= c09f12_01_coarse_ctrl_user_data_out;
  c09f12_01_coarse_delay0_user_data_out_net <= c09f12_01_coarse_delay0_user_data_out;
  c09f12_01_coarse_delay1_user_data_out_net <= c09f12_01_coarse_delay1_user_data_out;
  c09f12_01_control_user_data_out_net <= c09f12_01_control_user_data_out;
  c09f12_01_eq0_data_out_net <= c09f12_01_eq0_data_out;
  c09f12_01_eq1_data_out_net <= c09f12_01_eq1_data_out;
  c09f12_01_fine_ctrl_user_data_out_net <= c09f12_01_fine_ctrl_user_data_out;
  c09f12_01_gbe0_led_rx_net <= c09f12_01_gbe0_led_rx;
  c09f12_01_gbe0_led_tx_net <= c09f12_01_gbe0_led_tx;
  c09f12_01_gbe0_led_up_net <= c09f12_01_gbe0_led_up;
  c09f12_01_gbe0_rx_bad_frame_net <= c09f12_01_gbe0_rx_bad_frame;
  c09f12_01_gbe0_rx_data_net <= c09f12_01_gbe0_rx_data;
  c09f12_01_gbe0_rx_end_of_frame_net <= c09f12_01_gbe0_rx_end_of_frame;
  c09f12_01_gbe0_rx_overrun_net <= c09f12_01_gbe0_rx_overrun;
  c09f12_01_gbe0_rx_source_ip_net <= c09f12_01_gbe0_rx_source_ip;
  c09f12_01_gbe0_rx_source_port_net <= c09f12_01_gbe0_rx_source_port;
  c09f12_01_gbe0_rx_valid_net <= c09f12_01_gbe0_rx_valid;
  c09f12_01_gbe0_tx_afull_net <= c09f12_01_gbe0_tx_afull;
  c09f12_01_gbe0_tx_overflow_net <= c09f12_01_gbe0_tx_overflow;
  c09f12_01_gbe_ip0_user_data_out_net <= c09f12_01_gbe_ip0_user_data_out;
  c09f12_01_gbe_port_user_data_out_net <= c09f12_01_gbe_port_user_data_out;
  c09f12_01_katadc0_user_data_valid_net <= c09f12_01_katadc0_user_data_valid;
  c09f12_01_katadc0_user_datai0_net <= c09f12_01_katadc0_user_datai0;
  c09f12_01_katadc0_user_datai1_net <= c09f12_01_katadc0_user_datai1;
  c09f12_01_katadc0_user_datai2_net <= c09f12_01_katadc0_user_datai2;
  c09f12_01_katadc0_user_datai3_net <= c09f12_01_katadc0_user_datai3;
  c09f12_01_katadc0_user_dataq0_net <= c09f12_01_katadc0_user_dataq0;
  c09f12_01_katadc0_user_dataq1_net <= c09f12_01_katadc0_user_dataq1;
  c09f12_01_katadc0_user_dataq2_net <= c09f12_01_katadc0_user_dataq2;
  c09f12_01_katadc0_user_dataq3_net <= c09f12_01_katadc0_user_dataq3;
  c09f12_01_katadc0_user_outofrange0_net <= c09f12_01_katadc0_user_outofrange0;
  c09f12_01_katadc0_user_outofrange1_net <= c09f12_01_katadc0_user_outofrange1;
  c09f12_01_katadc0_user_sync0_net <= c09f12_01_katadc0_user_sync0;
  c09f12_01_katadc0_user_sync1_net <= c09f12_01_katadc0_user_sync1;
  c09f12_01_katadc0_user_sync2_net <= c09f12_01_katadc0_user_sync2;
  c09f12_01_katadc0_user_sync3_net <= c09f12_01_katadc0_user_sync3;
  c09f12_01_ld_time_lsw0_user_data_out_net <= c09f12_01_ld_time_lsw0_user_data_out;
  c09f12_01_ld_time_lsw1_user_data_out_net <= c09f12_01_ld_time_lsw1_user_data_out;
  c09f12_01_ld_time_msw0_user_data_out_net <= c09f12_01_ld_time_msw0_user_data_out;
  c09f12_01_ld_time_msw1_user_data_out_net <= c09f12_01_ld_time_msw1_user_data_out;
  c09f12_01_qdr_ct_qdr_ack_net <= c09f12_01_qdr_ct_qdr_ack;
  c09f12_01_qdr_ct_qdr_cal_fail_net <= c09f12_01_qdr_ct_qdr_cal_fail;
  c09f12_01_qdr_ct_qdr_data_out_net <= c09f12_01_qdr_ct_qdr_data_out;
  c09f12_01_qdr_ct_qdr_phy_ready_net <= c09f12_01_qdr_ct_qdr_phy_ready;
  c09f12_01_snap_debug_bram_data_out_net <= c09f12_01_snap_debug_bram_data_out;
  c09f12_01_snap_debug_ctrl_user_data_out_net <= c09f12_01_snap_debug_ctrl_user_data_out;
  c09f12_01_trig_level_user_data_out_net <= c09f12_01_trig_level_user_data_out;
  ce_1_sg_x706 <= ce_1;
  clk_1_sg_x706 <= clk_1;
  c09f12_01_adc_snap0_bram_addr <= c09f12_01_adc_snap0_bram_addr_net;
  c09f12_01_adc_snap0_bram_data_in <= c09f12_01_adc_snap0_bram_data_in_net;
  c09f12_01_adc_snap0_bram_we <= c09f12_01_adc_snap0_bram_we_net;
  c09f12_01_adc_snap0_status_user_data_in <= c09f12_01_adc_snap0_status_user_data_in_net;
  c09f12_01_adc_snap0_tr_en_cnt_user_data_in <= c09f12_01_adc_snap0_tr_en_cnt_user_data_in_net;
  c09f12_01_adc_snap0_val_user_data_in <= c09f12_01_adc_snap0_val_user_data_in_net;
  c09f12_01_adc_snap1_bram_addr <= c09f12_01_adc_snap1_bram_addr_net;
  c09f12_01_adc_snap1_bram_data_in <= c09f12_01_adc_snap1_bram_data_in_net;
  c09f12_01_adc_snap1_bram_we <= c09f12_01_adc_snap1_bram_we_net;
  c09f12_01_adc_snap1_status_user_data_in <= c09f12_01_adc_snap1_status_user_data_in_net;
  c09f12_01_adc_snap1_tr_en_cnt_user_data_in <= c09f12_01_adc_snap1_tr_en_cnt_user_data_in_net;
  c09f12_01_adc_snap1_val_user_data_in <= c09f12_01_adc_snap1_val_user_data_in_net;
  c09f12_01_adc_sum_sq0_user_data_in <= c09f12_01_adc_sum_sq0_user_data_in_net;
  c09f12_01_adc_sum_sq1_user_data_in <= c09f12_01_adc_sum_sq1_user_data_in_net;
  c09f12_01_clk_frequency_user_data_in <= c09f12_01_clk_frequency_user_data_in_net;
  c09f12_01_delay_tr_status0_user_data_in <= c09f12_01_delay_tr_status0_user_data_in_net;
  c09f12_01_delay_tr_status1_user_data_in <= c09f12_01_delay_tr_status1_user_data_in_net;
  c09f12_01_eq0_addr <= c09f12_01_eq0_addr_net;
  c09f12_01_eq0_data_in <= c09f12_01_eq0_data_in_net;
  c09f12_01_eq0_we <= c09f12_01_eq0_we_net;
  c09f12_01_eq1_addr <= c09f12_01_eq1_addr_net;
  c09f12_01_eq1_data_in <= c09f12_01_eq1_data_in_net;
  c09f12_01_eq1_we <= c09f12_01_eq1_we_net;
  c09f12_01_fstatus0_user_data_in <= c09f12_01_fstatus0_user_data_in_net;
  c09f12_01_fstatus1_user_data_in <= c09f12_01_fstatus1_user_data_in_net;
  c09f12_01_gbe0_rst <= c09f12_01_gbe0_rst_net;
  c09f12_01_gbe0_rx_ack <= c09f12_01_gbe0_rx_ack_net;
  c09f12_01_gbe0_rx_overrun_ack <= c09f12_01_gbe0_rx_overrun_ack_net;
  c09f12_01_gbe0_tx_data <= c09f12_01_gbe0_tx_data_net;
  c09f12_01_gbe0_tx_dest_ip <= c09f12_01_gbe0_tx_dest_ip_net;
  c09f12_01_gbe0_tx_dest_port <= c09f12_01_gbe0_tx_dest_port_net;
  c09f12_01_gbe0_tx_end_of_frame <= c09f12_01_gbe0_tx_end_of_frame_net;
  c09f12_01_gbe0_tx_valid <= c09f12_01_gbe0_tx_valid_net;
  c09f12_01_gbe_tx_cnt0_user_data_in <= c09f12_01_gbe_tx_cnt0_user_data_in_net;
  c09f12_01_gbe_tx_err_cnt0_user_data_in <= c09f12_01_gbe_tx_err_cnt0_user_data_in_net;
  c09f12_01_katadc0_gain_load <= c09f12_01_katadc0_gain_load_net;
  c09f12_01_katadc0_gain_value <= c09f12_01_katadc0_gain_value_net;
  c09f12_01_leds_roach_gpioa0_gateway <= c09f12_01_leds_roach_gpioa0_gateway_net;
  c09f12_01_leds_roach_gpioa1_gateway <= c09f12_01_leds_roach_gpioa1_gateway_net;
  c09f12_01_leds_roach_gpioa2_gateway <= c09f12_01_leds_roach_gpioa2_gateway_net;
  c09f12_01_leds_roach_gpioa3_gateway <= c09f12_01_leds_roach_gpioa3_gateway_net;
  c09f12_01_leds_roach_gpioa4_gateway <= c09f12_01_leds_roach_gpioa4_gateway_net;
  c09f12_01_leds_roach_gpioa5_gateway <= c09f12_01_leds_roach_gpioa5_gateway_net;
  c09f12_01_leds_roach_gpioa6_gateway <= c09f12_01_leds_roach_gpioa6_gateway_net;
  c09f12_01_leds_roach_gpioa7_gateway <= c09f12_01_leds_roach_gpioa7_gateway_net;
  c09f12_01_leds_roach_gpioa_oe_gateway <= c09f12_01_leds_roach_gpioa_oe_gateway_net;
  c09f12_01_leds_roach_led0_gateway <= c09f12_01_leds_roach_led0_gateway_net;
  c09f12_01_leds_roach_led1_gateway <= c09f12_01_leds_roach_led1_gateway_net;
  c09f12_01_leds_roach_led2_gateway <= c09f12_01_leds_roach_led2_gateway_net;
  c09f12_01_leds_roach_led3_gateway <= c09f12_01_leds_roach_led3_gateway_net;
  c09f12_01_mcount_lsw_user_data_in <= c09f12_01_mcount_lsw_user_data_in_net;
  c09f12_01_mcount_msw_user_data_in <= c09f12_01_mcount_msw_user_data_in_net;
  c09f12_01_pps_count_user_data_in <= c09f12_01_pps_count_user_data_in_net;
  c09f12_01_qdr_ct_qdr_address <= c09f12_01_qdr_ct_qdr_address_net;
  c09f12_01_qdr_ct_qdr_be <= c09f12_01_qdr_ct_qdr_be_net;
  c09f12_01_qdr_ct_qdr_data_in <= c09f12_01_qdr_ct_qdr_data_in_net;
  c09f12_01_qdr_ct_qdr_rd_en <= c09f12_01_qdr_ct_qdr_rd_en_net;
  c09f12_01_qdr_ct_qdr_wr_en <= c09f12_01_qdr_ct_qdr_wr_en_net;
  c09f12_01_rcs_app_user_data_in <= c09f12_01_rcs_app_user_data_in_net;
  c09f12_01_rcs_lib_user_data_in <= c09f12_01_rcs_lib_user_data_in_net;
  c09f12_01_rcs_user_user_data_in <= c09f12_01_rcs_user_user_data_in_net;
  c09f12_01_snap_debug_addr_user_data_in <= c09f12_01_snap_debug_addr_user_data_in_net;
  c09f12_01_snap_debug_bram_addr <= c09f12_01_snap_debug_bram_addr_net;
  c09f12_01_snap_debug_bram_data_in <= c09f12_01_snap_debug_bram_data_in_net;
  c09f12_01_snap_debug_bram_we <= c09f12_01_snap_debug_bram_we_net;
  gateway_out <= gateway_out_net;
  gateway_out1 <= gateway_out1_net;
  gateway_out1_x0 <= gateway_out1_x0_net;
  gateway_out1_x1 <= gateway_out1_x1_net;
  gateway_out1_x2 <= gateway_out1_x2_net;
  gateway_out1_x3 <= gateway_out1_x3_net;
  gateway_out1_x4 <= gateway_out1_x4_net;
  gateway_out1_x5 <= gateway_out1_x5_net;
  gateway_out1_x6 <= gateway_out1_x6_net;
  gateway_out2 <= gateway_out2_net;
  gateway_out2_x0 <= gateway_out2_x0_net;
  gateway_out2_x1 <= gateway_out2_x1_net;
  gateway_out2_x2 <= gateway_out2_x2_net;
  gateway_out2_x3 <= gateway_out2_x3_net;
  gateway_out2_x4 <= gateway_out2_x4_net;
  gateway_out2_x5 <= gateway_out2_x5_net;
  gateway_out2_x6 <= gateway_out2_x6_net;
  gateway_out_x0 <= gateway_out_x0_net;
  gateway_out_x1 <= gateway_out_x1_net;
  gateway_out_x2 <= gateway_out_x2_net;
  gateway_out_x3 <= gateway_out_x3_net;
  gateway_out_x4 <= gateway_out_x4_net;
  gateway_out_x5 <= gateway_out_x5_net;
  gateway_out_x6 <= gateway_out_x6_net;
  gateway_t1 <= gateway_t1_net;
  gateway_t1_x0 <= gateway_t1_x0_net;
  gateway_t1_x1 <= gateway_t1_x1_net;
  gateway_t1_x2 <= gateway_t1_x2_net;
  gateway_t1_x3 <= gateway_t1_x3_net;
  gateway_t1_x4 <= gateway_t1_x4_net;
  gateway_t1_x5 <= gateway_t1_x5_net;
  gateway_t1_x6 <= gateway_t1_x6_net;
  gateway_t2 <= gateway_t2_net;
  gateway_t2_x0 <= gateway_t2_x0_net;
  gateway_t2_x1 <= gateway_t2_x1_net;
  gateway_t2_x2 <= gateway_t2_x2_net;
  gateway_t2_x3 <= gateway_t2_x3_net;
  gateway_t2_x4 <= gateway_t2_x4_net;
  gateway_t2_x5 <= gateway_t2_x5_net;
  gateway_t2_x6 <= gateway_t2_x6_net;
  gateway_t3 <= gateway_t3_net;
  gateway_t3_x0 <= gateway_t3_x0_net;
  gateway_t3_x1 <= gateway_t3_x1_net;
  gateway_t3_x2 <= gateway_t3_x2_net;
  gateway_t3_x3 <= gateway_t3_x3_net;
  gateway_t3_x4 <= gateway_t3_x4_net;
  gateway_t3_x5 <= gateway_t3_x5_net;
  gateway_t3_x6 <= gateway_t3_x6_net;

  adc_snap0_e5d722f3d9: entity work.adc_snap0_entity_e5d722f3d9
    port map (
      c09f12_01_adc_snap0_ctrl_user_data_out => c09f12_01_adc_snap0_ctrl_user_data_out_net,
      c09f12_01_adc_snap0_trig_offset_user_data_out => c09f12_01_adc_snap0_trig_offset_user_data_out_net,
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      din => delay1_q_net_x7,
      stop => logical1_y_net_x2,
      trig => slice2_y_net_x5,
      vin => reinterpret1_output_port_net_x6,
      we => constant23_op_net_x1,
      bram => c09f12_01_adc_snap0_bram_addr_net,
      bram_x0 => c09f12_01_adc_snap0_bram_data_in_net,
      bram_x1 => c09f12_01_adc_snap0_bram_we_net,
      status => c09f12_01_adc_snap0_status_user_data_in_net,
      tr_en_cnt => c09f12_01_adc_snap0_tr_en_cnt_user_data_in_net,
      val => c09f12_01_adc_snap0_val_user_data_in_net
    );

  adc_snap1_3fff712eed: entity work.adc_snap1_entity_3fff712eed
    port map (
      c09f12_01_adc_snap1_ctrl_user_data_out => c09f12_01_adc_snap1_ctrl_user_data_out_net,
      c09f12_01_adc_snap1_trig_offset_user_data_out => c09f12_01_adc_snap1_trig_offset_user_data_out_net,
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      din => delay1_q_net_x8,
      stop => logical1_y_net_x3,
      trig => slice2_y_net_x5,
      vin => reinterpret1_output_port_net_x6,
      we => constant15_op_net_x1,
      bram => c09f12_01_adc_snap1_bram_addr_net,
      bram_x0 => c09f12_01_adc_snap1_bram_data_in_net,
      bram_x1 => c09f12_01_adc_snap1_bram_we_net,
      status => c09f12_01_adc_snap1_status_user_data_in_net,
      tr_en_cnt => c09f12_01_adc_snap1_tr_en_cnt_user_data_in_net,
      val => c09f12_01_adc_snap1_val_user_data_in_net
    );

  adc_sum_sq0_f3af8eb2c5: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      reg_out => convert1_dout_net_x1,
      convert_x0 => c09f12_01_adc_sum_sq0_user_data_in_net
    );

  adc_sum_sq1_b1185a146c: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      reg_out => convert1_dout_net_x2,
      convert_x0 => c09f12_01_adc_sum_sq1_user_data_in_net
    );

  addsub: entity work.xladdsub_c09f12_01
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 15,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 16,
      core_name0 => "addsb_11_0_a37a2abb0bb82ab2",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 16,
      latency => 1,
      overflow => 2,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 15
    )
    port map (
      a => slice38_y_net,
      b => mux_y_net_x2,
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      en => "1",
      s => addsub_s_net
    );

  addsub1: entity work.xladdsub_c09f12_01
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 15,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 16,
      core_name0 => "addsb_11_0_a37a2abb0bb82ab2",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 16,
      latency => 1,
      overflow => 2,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 15
    )
    port map (
      a => slice14_y_net,
      b => mux_y_net_x2,
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      en => "1",
      s => addsub1_s_net
    );

  arm1: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => delay41_q_net,
      y(0) => arm1_y_net_x0
    );

  arm10: entity work.xlslice
    generic map (
      new_lsb => 10,
      new_msb => 10,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => delay41_q_net,
      y(0) => arm10_y_net
    );

  arm11: entity work.xlslice
    generic map (
      new_lsb => 21,
      new_msb => 21,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => delay41_q_net,
      y(0) => arm11_y_net
    );

  arm12: entity work.xlslice
    generic map (
      new_lsb => 11,
      new_msb => 11,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => delay41_q_net,
      y(0) => arm12_y_net_x0
    );

  arm14: entity work.xlslice
    generic map (
      new_lsb => 25,
      new_msb => 27,
      x_width => 32,
      y_width => 3
    )
    port map (
      x => delay41_q_net,
      y => arm14_y_net_x0
    );

  arm2: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => delay41_q_net,
      y(0) => arm2_y_net_x0
    );

  arm3: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 16,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => delay41_q_net,
      y(0) => arm3_y_net_x0
    );

  arm4: entity work.xlslice
    generic map (
      new_lsb => 17,
      new_msb => 17,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => delay41_q_net,
      y(0) => arm4_y_net
    );

  arm5: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 18,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => delay41_q_net,
      y(0) => arm5_y_net
    );

  arm6: entity work.xlslice
    generic map (
      new_lsb => 19,
      new_msb => 19,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => delay41_q_net,
      y(0) => arm6_y_net
    );

  arm8: entity work.xlslice
    generic map (
      new_lsb => 9,
      new_msb => 9,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => delay41_q_net,
      y(0) => arm8_y_net_x0
    );

  arm9: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 8,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => delay41_q_net,
      y(0) => arm9_y_net_x0
    );

  bus_create11_ca7f9dbf2e: entity work.bus_create11_entity_ca7f9dbf2e
    port map (
      in1 => c09f12_01_eq0_data_out_net,
      in2 => c09f12_01_eq1_data_out_net,
      bus_out => concatenate_y_net_x0
    );

  bus_create2_26f43c2bb1: entity work.bus_create2_entity_26f43c2bb1
    port map (
      in1 => reinterpret1_0_output_port_net_x1,
      in2 => reinterpret1_1_output_port_net_x1,
      in3 => reinterpret1_2_output_port_net_x1,
      in4 => reinterpret1_3_output_port_net_x1,
      bus_out => concatenate_y_net_x1
    );

  bus_create7_57af54f9e5: entity work.bus_create7_entity_57af54f9e5
    port map (
      in1 => c09f12_01_katadc0_user_sync0_net,
      in2 => c09f12_01_katadc0_user_sync1_net,
      in3 => c09f12_01_katadc0_user_sync2_net,
      in4 => c09f12_01_katadc0_user_sync3_net,
      bus_out => concatenate_y_net_x2
    );

  bus_create9_d0a2f41ff0: entity work.bus_create2_entity_26f43c2bb1
    port map (
      in1 => reinterpret0_0_output_port_net_x1,
      in2 => reinterpret0_1_output_port_net_x1,
      in3 => reinterpret0_2_output_port_net_x1,
      in4 => reinterpret0_3_output_port_net_x1,
      bus_out => concatenate_y_net_x3
    );

  bus_expand6_289d91e26d: entity work.bus_expand6_entity_289d91e26d
    port map (
      bus_in => delay2_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x7,
      msb_out3 => slice3_y_net_x0,
      out2 => reinterpret2_output_port_net_x6
    );

  bus_expand_42329a104d: entity work.bus_expand_entity_42329a104d
    port map (
      bus_in => delay2_q_net_x4,
      lsb_out1 => reinterpret1_output_port_net_x6,
      msb_out2 => slice2_y_net_x5
    );

  calc_adc_sum_sq1_784d560211: entity work.calc_adc_sum_sq_entity_6e70db58e3
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      in1 => reinterpret2_output_port_net_x2,
      in2 => reinterpret1_output_port_net_x2,
      in3 => reinterpret3_output_port_net_x2,
      in4 => reinterpret4_output_port_net_x2,
      sum_sq => convert1_dout_net_x2
    );

  calc_adc_sum_sq_6e70db58e3: entity work.calc_adc_sum_sq_entity_6e70db58e3
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      in1 => reinterpret2_output_port_net_x1,
      in2 => reinterpret1_output_port_net_x1,
      in3 => reinterpret3_output_port_net_x1,
      in4 => reinterpret4_output_port_net_x1,
      sum_sq => convert1_dout_net_x1
    );

  cd_local_time_9ff6e19688: entity work.cd_local_time_entity_9ff6e19688
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      reset => logical14_y_net_x19,
      sync => delay1_q_net_x6,
      time_x0 => clock_op_net_x3
    );

  clk_frequency_747c20c338: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      reg_out => register19_q_net_x0,
      convert_x0 => c09f12_01_clk_frequency_user_data_in_net
    );

  coarse_a91220dfb7: entity work.coarse_entity_a91220dfb7
    port map (
      ce_1 => ce_1_sg_x706,
      channel_select => slice21_y_net_x3,
      clk_1 => clk_1_sg_x706,
      data0 => concatenate_y_net_x23,
      data1 => concatenate_y_net_x22,
      debug_chan => slice19_y_net_x1,
      debug_chansel => slice18_y_net_x1,
      debug_polsel => slice17_y_net_x1,
      fft_shift => slice6_y_net_x20,
      sync => delay_sync_q_net_x12,
      data_out => concatenate_y_net_x4,
      fft_of0 => delay2_q_net_x1,
      fft_of1 => delay3_q_net_x1,
      snap72 => concatenate_y_net_x21,
      sync_out => delay1_q_net_x0
    );

  coarse_delay_14c739abb5: entity work.coarse_delay_entity_14c739abb5
    port map (
      arm0 => slice13_y_net_x1,
      arm1 => slice11_y_net_x1,
      cd_lt => clock_op_net_x3,
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      data0 => reinterpret2_output_port_net_x6,
      data1 => reinterpret1_output_port_net_x7,
      ld_time0 => concat9_y_net_x4,
      ld_time1 => concat2_y_net_x3,
      ld_val0 => concat22_y_net_x3,
      ld_val1 => concat1_y_net_x4,
      load_now => delay6_q_net_x7,
      mrst => logical14_y_net_x19,
      sync => delay1_q_net_x6,
      data4_0 => concatenate_y_net_x23,
      data4_1 => concatenate_y_net_x22,
      sync_out => delay_sync_q_net_x12
    );

  concat: entity work.concat_cab3ba8c97
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => edge_op_y_net_x0,
      in1 => concatenate_y_net_x3,
      in2 => concatenate_y_net_x1,
      y => concat_y_net_x1
    );

  concat1: entity work.concat_d01593648d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => slice1_y_net,
      in1 => slice8_y_net,
      in2 => addsub1_s_net,
      in3 => slice15_y_net,
      in4 => slice10_y_net,
      y => concat1_y_net_x4
    );

  concat2: entity work.concat_6964870821
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => slice12_y_net,
      in1 => delay28_q_net,
      y => concat2_y_net_x3
    );

  concat21: entity work.concat_55c7ba900f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => delay_q_net_x0,
      in1 => counter3_op_net,
      y => concat21_y_net_x0
    );

  concat22: entity work.concat_d01593648d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => slice2_y_net,
      in1 => slice3_y_net,
      in2 => addsub_s_net,
      in3 => slice4_y_net,
      in4 => slice7_y_net,
      y => concat22_y_net_x3
    );

  concat6: entity work.concat_7d5080ab25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => slice3_y_net_x0,
      in1 => slice16_y_net,
      y => concat6_y_net_x0
    );

  concat9: entity work.concat_6964870821
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => slice73_y_net,
      in1 => delay19_q_net,
      y => concat9_y_net_x4
    );

  constant14: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant14_op_net_x0
    );

  constant15: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant15_op_net_x1
    );

  constant17: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant17_op_net_x1
    );

  constant20: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant20_op_net
    );

  constant23: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant23_op_net_x1
    );

  constant24: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant24_op_net_x0
    );

  constant37: entity work.constant_a1d3429a21
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant37_op_net
    );

  constant41: entity work.constant_37567836aa
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant41_op_net_x0
    );

  constant46: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant46_op_net_x0
    );

  constant5: entity work.constant_61027e1056
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant5_op_net
    );

  constant8: entity work.constant_37567836aa
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant8_op_net_x0
    );

  convert_c5755984be: entity work.convert_entity_c5755984be
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      in_x0 => register3_q_net_x0,
      out1 => mux_y_net_x2
    );

  counter1: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_ed472a6d5a5cb515",
      op_arith => xlUnsigned,
      op_width => 32
    )
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      en => "1",
      rst(0) => logical5_y_net_x2,
      op => counter1_op_net
    );

  counter3: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_904cce14b13b282e",
      op_arith => xlUnsigned,
      op_width => 31
    )
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      en(0) => logical5_y_net_x2,
      rst(0) => logical14_y_net_x19,
      op => counter3_op_net
    );

  counter8: entity work.xlcounter_free_c09f12_01
    generic map (
      core_name0 => "cntr_11_0_ecb560ca58503876",
      op_arith => xlUnsigned,
      op_width => 12
    )
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      en(0) => slice_y_net_x1,
      rst(0) => slice1_y_net_x2,
      op => counter8_op_net_x3
    );

  ct_tvg_81cd2f878e: entity work.ct_tvg_entity_81cd2f878e
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      datain => concatenate_y_net_x6,
      syncin => delay6_q_net_x2,
      tvg_en => register2_q_net_x0,
      validin => delay16_q_net_x2,
      dataout => mux1_y_net_x5,
      syncout => delay_q_net_x4,
      validout => delay1_q_net_x4
    );

  decat0_2340466183: entity work.decat0_entity_2340466183
    port map (
      in1 => concatenate_y_net_x3,
      out1 => reinterpret2_output_port_net_x1,
      out2 => reinterpret1_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1,
      out4 => reinterpret4_output_port_net_x1
    );

  decat1_c52e2d685b: entity work.decat0_entity_2340466183
    port map (
      in1 => concatenate_y_net_x1,
      out1 => reinterpret2_output_port_net_x2,
      out2 => reinterpret1_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2,
      out4 => reinterpret4_output_port_net_x2
    );

  delay1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d(0) => slice1_y_net_x2,
      q(0) => delay1_q_net
    );

  delay100_f5402d4afa: entity work.delay100_entity_f5402d4afa
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      d => arm8_y_net_x0,
      q => register1_q_net_x0
    );

  delay10_8181a66134: entity work.delay10_entity_8181a66134
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      d => register0_q_net_x19,
      q => register0_q_net_x7
    );

  delay11_c2a06abd76: entity work.delay11_entity_c2a06abd76
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      d => logical1_y_net_x4,
      q => register0_q_net_x9
    );

  delay12: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d(0) => slice_y_net_x1,
      q(0) => delay12_q_net
    );

  delay14: entity work.delay_2940aaa0cf
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => delay1_q_net_x1,
      q => delay14_q_net_x1
    );

  delay15: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d(0) => delay5_q_net_x2,
      q(0) => delay15_q_net_x2
    );

  delay16: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d(0) => delay4_q_net_x3,
      q(0) => delay16_q_net_x1
    );

  delay17: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => c09f12_01_coarse_ctrl_user_data_out_net,
      q => delay17_q_net
    );

  delay18: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => c09f12_01_ld_time_msw0_user_data_out_net,
      q => delay18_q_net
    );

  delay19: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => c09f12_01_ld_time_lsw0_user_data_out_net,
      q => delay19_q_net
    );

  delay20: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => c09f12_01_a0_fd0_user_data_out_net,
      q => delay20_q_net
    );

  delay21: entity work.delay_a5c036284d
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => delay6_q_net_x0,
      q => delay21_q_net_x1
    );

  delay22: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d(0) => delay1_q_net_x0,
      q(0) => delay22_q_net_x2
    );

  delay23_60867eb0d0: entity work.delay11_entity_c2a06abd76
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      d => register0_q_net_x20,
      q => register0_q_net_x2
    );

  delay24: entity work.delay_a8953e790b
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => concatenate_y_net_x4,
      q => delay24_q_net_x1
    );

  delay25: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => c09f12_01_coarse_delay0_user_data_out_net,
      q => delay25_q_net
    );

  delay26: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => c09f12_01_a1_fd0_user_data_out_net,
      q => delay26_q_net
    );

  delay27: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => c09f12_01_ld_time_msw1_user_data_out_net,
      q => delay27_q_net
    );

  delay28: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => c09f12_01_ld_time_lsw1_user_data_out_net,
      q => delay28_q_net
    );

  delay29: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => c09f12_01_a0_fd1_user_data_out_net,
      q => delay29_q_net
    );

  delay2_2931713490: entity work.delay100_entity_f5402d4afa
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      d => arm9_y_net_x0,
      q => register1_q_net_x1
    );

  delay30: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => c09f12_01_coarse_delay1_user_data_out_net,
      q => delay30_q_net
    );

  delay32: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => c09f12_01_a1_fd1_user_data_out_net,
      q => delay32_q_net
    );

  delay33_c908484cd5: entity work.delay11_entity_c2a06abd76
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      d => register5_q_net_x1,
      q => register0_q_net_x1
    );

  delay35: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => c09f12_01_trig_level_user_data_out_net,
      q => delay35_q_net_x1
    );

  delay36: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => c09f12_01_gbe_port_user_data_out_net,
      q => delay36_q_net_x0
    );

  delay37: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => c09f12_01_gbe_ip0_user_data_out_net,
      q => delay37_q_net_x0
    );

  delay39: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => c09f12_01_adc_ctrl0_user_data_out_net,
      q => delay39_q_net
    );

  delay3_1a1c4e6264: entity work.delay3_entity_1a1c4e6264
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      d => pkt_out_x2,
      q => register0_q_net_x13
    );

  delay40: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => c09f12_01_adc_ctrl1_user_data_out_net,
      q => delay40_q_net
    );

  delay41: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => c09f12_01_control_user_data_out_net,
      q => delay41_q_net
    );

  delay42: entity work.delay_672d2b8d1e
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => c09f12_01_board_id_user_data_out_net,
      q => delay42_q_net_x0
    );

  delay43: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d(0) => delay1_q_net,
      q(0) => delay43_q_net_x1
    );

  delay44: entity work.delay_2940aaa0cf
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => delay8_q_net,
      q => delay44_q_net_x1
    );

  delay45: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d(0) => delay12_q_net,
      q(0) => delay45_q_net_x1
    );

  delay46: entity work.delay_e2d047c154
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => concatenate_y_net_x0,
      q => delay46_q_net_x1
    );

  delay4_dd35b94c7d: entity work.delay4_entity_dd35b94c7d
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      d => oob_out_x2,
      q => register0_q_net_x14
    );

  delay5_62d9e92bef: entity work.delay11_entity_c2a06abd76
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      d => valid_out_x3,
      q => register0_q_net_x15
    );

  delay6: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      d(0) => edge_op_y_net_x1,
      en => '1',
      rst => '1',
      q(0) => delay6_q_net_x7
    );

  delay7_fd89a59433: entity work.delay11_entity_c2a06abd76
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      d => constant17_op_net_x1,
      q => register0_q_net_x16
    );

  delay8: entity work.delay_2940aaa0cf
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d => concatenate_y_net_x5,
      q => delay8_q_net
    );

  delay9_11a818bf77: entity work.delay3_entity_1a1c4e6264
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      d => register0_q_net_x18,
      q => register0_q_net_x17
    );

  delay_tr_status0_2fd3325278: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      reg_out => concat13_y_net_x3,
      convert_x0 => c09f12_01_delay_tr_status0_user_data_in_net
    );

  delay_tr_status1_61b3628fb4: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      reg_out => concat1_y_net_x5,
      convert_x0 => c09f12_01_delay_tr_status1_user_data_in_net
    );

  edge_detect1_d42863678e: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      in_x0 => logical1_y_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  edge_detect2_e15afde8cf: entity work.edge_detect1_entity_75cedd2450
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      in_x0 => logical14_y_net_x19,
      out_x0 => edge_op_y_net_x1
    );

  edge_detect3_7fdf419596: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      in_x0 => delay5_q_net_x2,
      out_x0 => edge_op_y_net_x2
    );

  edge_detect4_b874b4c164: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      in_x0 => arm3_y_net_x0,
      out_x0 => edge_op_y_net_x3
    );

  edge_detect5_6f07fcbf3d: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      in_x0 => arm2_y_net_x0,
      out_x0 => edge_op_y_net_x4
    );

  edge_detect6_0acb394efe: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      in_x0 => arm1_y_net_x0,
      out_x0 => edge_op_y_net_x5
    );

  edge_detect7_b53eb9e8ff: entity work.edge_detect_entity_cb656284f4
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      in_x0 => man_sync1_y_net_x0,
      out_x0 => edge_op_y_net_x6
    );

  eq0_4c0c77caa2: entity work.eq0_entity_4c0c77caa2
    port map (
      addr => counter8_op_net_x3,
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      data_in => constant41_op_net_x0,
      we => constant46_op_net_x0,
      convert_addr_x0 => c09f12_01_eq0_addr_net,
      convert_din1_x0 => c09f12_01_eq0_data_in_net,
      convert_we_x0 => c09f12_01_eq0_we_net
    );

  eq1_8c899296cf: entity work.eq0_entity_4c0c77caa2
    port map (
      addr => counter8_op_net_x3,
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      data_in => constant8_op_net_x0,
      we => constant24_op_net_x0,
      convert_addr_x0 => c09f12_01_eq1_addr_net,
      convert_din1_x0 => c09f12_01_eq1_data_in_net,
      convert_we_x0 => c09f12_01_eq1_we_net
    );

  fdfs_063070395a: entity work.fdfs_entity_063070395a
    port map (
      arm0 => slice13_y_net_x1,
      arm1 => slice11_y_net_x1,
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      data => delay14_q_net_x1,
      dv => delay15_q_net_x2,
      index => delay21_q_net_x1,
      ld_time0 => concat9_y_net_x4,
      ld_time1 => concat2_y_net_x3,
      ld_val0 => concat22_y_net_x3,
      ld_val1 => concat1_y_net_x4,
      load_now => delay6_q_net_x7,
      mrst => logical14_y_net_x19,
      sync => delay16_q_net_x1,
      tvg_en => register5_q_net_x2,
      window_start => edge_op_y_net_x2,
      data_out => concatenate_y_net_x5,
      dv_out => slice_y_net_x1,
      fd_status0 => concat13_y_net_x3,
      fd_status1 => concat1_y_net_x5,
      sync_out => slice1_y_net_x2
    );

  fine_d92fd9f38e: entity work.fine_entity_d92fd9f38e
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      coarse_chan_sel => slice21_y_net_x3,
      data => delay24_q_net_x1,
      mrst => logical14_y_net_x19,
      sync => delay22_q_net_x2,
      tvg_en => register4_q_net_x0,
      data_index => delay6_q_net_x0,
      data_out => delay1_q_net_x1,
      fft_dv => delay5_q_net_x2,
      fft_or0 => constant3_op_net_x2,
      fft_or1 => constant1_op_net_x3,
      snap_128bit => concatenate_y_net_x26,
      snap_buffer72 => concatenate_y_net_x24,
      snap_pfb72 => concatenate_y_net_x25,
      sync_out => delay4_q_net_x3
    );

  fstatcbits0: entity work.constant_e3e2bf8850
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => fstatcbits0_op_net_x0
    );

  fstatcbits1: entity work.constant_e3e2bf8850
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => fstatcbits1_op_net_x0
    );

  fstatfbits0: entity work.constant_7770c5583c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => fstatfbits0_op_net_x0
    );

  fstatfbits1: entity work.constant_7770c5583c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => fstatfbits1_op_net_x0
    );

  fstatus0_4bc9dfbca6: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      reg_out => concat13_y_net_x1,
      convert_x0 => c09f12_01_fstatus0_user_data_in_net
    );

  fstatus1_9e03235355: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      reg_out => concat13_y_net_x2,
      convert_x0 => c09f12_01_fstatus1_user_data_in_net
    );

  gbe0_a4d9102883: entity work.gbe0_entity_a4d9102883
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      rst => logical3_y_net_x0,
      rx_ack => constant14_op_net_x0,
      tx_data => register0_q_net_x17,
      tx_dest_ip => register0_q_net_x7,
      tx_dest_port => delay36_q_net_x0,
      tx_end_of_frame => register0_q_net_x9,
      tx_valid => logical2_y_net_x3,
      convert_rst_x0 => c09f12_01_gbe0_rst_net,
      convert_rx_ack_x0 => c09f12_01_gbe0_rx_ack_net,
      convert_rx_overrun_ack_x0 => c09f12_01_gbe0_rx_overrun_ack_net,
      convert_tx_data_x0 => c09f12_01_gbe0_tx_data_net,
      convert_tx_dest_ip_x0 => c09f12_01_gbe0_tx_dest_ip_net,
      convert_tx_end_of_frame_x0 => c09f12_01_gbe0_tx_end_of_frame_net,
      convert_tx_port_x0 => c09f12_01_gbe0_tx_dest_port_net,
      convert_tx_valid_x0 => c09f12_01_gbe0_tx_valid_net
    );

  gbe_err_4ff5b5b3bc: entity work.gbe_err_entity_4ff5b5b3bc
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      discard => register0_q_net_x1,
      eof => register0_q_net_x9,
      rst => edge_op_y_net_x4,
      valid => logical2_y_net_x3,
      err_cnt => payload_cnt1_op_net_x1,
      tx_cnt => payload_cnt_op_net_x1
    );

  gbe_tx_cnt0_48aed4a82e: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      reg_out => payload_cnt_op_net_x1,
      convert_x0 => c09f12_01_gbe_tx_cnt0_user_data_in_net
    );

  gbe_tx_err_cnt0_b43f17e31c: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      reg_out => payload_cnt1_op_net_x1,
      convert_x0 => c09f12_01_gbe_tx_err_cnt0_user_data_in_net
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      ip(0) => c09f12_01_gbe0_led_up_net,
      op(0) => inverter_op_net_x1
    );

  inverter1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      ip(0) => register7_q_net_x0,
      op(0) => inverter1_op_net
    );

  inverter2: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      ip(0) => register7_q_net_x1,
      op(0) => inverter2_op_net
    );

  inverter3: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      ip(0) => logical10_y_net_x1,
      op(0) => inverter3_op_net_x0
    );

  inverter4: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      ip(0) => logical8_y_net_x1,
      op(0) => inverter4_op_net
    );

  inverter5: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      ip(0) => logical8_y_net_x1,
      op(0) => inverter5_op_net_x0
    );

  inverter6: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      ip(0) => logical10_y_net_x1,
      op(0) => inverter6_op_net
    );

  katadc0_180325740b: entity work.katadc0_entity_180325740b
    port map (
      atten0 => slice30_y_net_x0,
      atten1 => slice34_y_net_x0,
      c09f12_01_katadc0_user_datai0 => c09f12_01_katadc0_user_datai0_net,
      c09f12_01_katadc0_user_datai1 => c09f12_01_katadc0_user_datai1_net,
      c09f12_01_katadc0_user_datai2 => c09f12_01_katadc0_user_datai2_net,
      c09f12_01_katadc0_user_datai3 => c09f12_01_katadc0_user_datai3_net,
      c09f12_01_katadc0_user_dataq0 => c09f12_01_katadc0_user_dataq0_net,
      c09f12_01_katadc0_user_dataq1 => c09f12_01_katadc0_user_dataq1_net,
      c09f12_01_katadc0_user_dataq2 => c09f12_01_katadc0_user_dataq2_net,
      c09f12_01_katadc0_user_dataq3 => c09f12_01_katadc0_user_dataq3_net,
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      en0 => logical8_y_net_x1,
      en1 => logical10_y_net_x1,
      cast0_x0 => c09f12_01_katadc0_gain_value_net,
      cast1_x0 => c09f12_01_katadc0_gain_load_net,
      data0_0 => reinterpret0_0_output_port_net_x1,
      data0_1 => reinterpret0_1_output_port_net_x1,
      data0_2 => reinterpret0_2_output_port_net_x1,
      data0_3 => reinterpret0_3_output_port_net_x1,
      data1_0 => reinterpret1_0_output_port_net_x1,
      data1_1 => reinterpret1_1_output_port_net_x1,
      data1_2 => reinterpret1_2_output_port_net_x1,
      data1_3 => reinterpret1_3_output_port_net_x1
    );

  leds_7bfe27f09c: entity work.leds_entity_7bfe27f09c
    port map (
      adc_en0 => logical8_y_net_x1,
      adc_en1 => logical10_y_net_x1,
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      comms => logical4_y_net_x2,
      fancy_en => arm12_y_net_x0,
      or0 => logical17_y_net_x2,
      or1 => logical12_y_net_x2,
      pps => logical5_y_net_x2,
      rst => logical14_y_net_x19,
      sync_led => delay1_q_net_x6,
      warning => logical7_y_net_x0,
      roach_gpioa0 => c09f12_01_leds_roach_gpioa0_gateway_net,
      roach_gpioa1 => c09f12_01_leds_roach_gpioa1_gateway_net,
      roach_gpioa2 => c09f12_01_leds_roach_gpioa2_gateway_net,
      roach_gpioa3 => c09f12_01_leds_roach_gpioa3_gateway_net,
      roach_gpioa4 => c09f12_01_leds_roach_gpioa4_gateway_net,
      roach_gpioa5 => c09f12_01_leds_roach_gpioa5_gateway_net,
      roach_gpioa6 => c09f12_01_leds_roach_gpioa6_gateway_net,
      roach_gpioa7 => c09f12_01_leds_roach_gpioa7_gateway_net,
      roach_gpioa_oe => c09f12_01_leds_roach_gpioa_oe_gateway_net,
      roach_led0 => c09f12_01_leds_roach_led0_gateway_net,
      roach_led1 => c09f12_01_leds_roach_led1_gateway_net,
      roach_led2 => c09f12_01_leds_roach_led2_gateway_net,
      roach_led3 => c09f12_01_leds_roach_led3_gateway_net,
      subsystem => gateway_t1_net,
      subsystem_x0 => gateway_t3_net,
      subsystem_x1 => gateway_t2_net,
      subsystem_x10 => gateway_out1_x0_net,
      subsystem_x11 => gateway_t1_x1_net,
      subsystem_x12 => gateway_t3_x1_net,
      subsystem_x13 => gateway_t2_x1_net,
      subsystem_x14 => gateway_out2_x1_net,
      subsystem_x15 => gateway_out_x1_net,
      subsystem_x16 => gateway_out1_x1_net,
      subsystem_x17 => gateway_t1_x2_net,
      subsystem_x18 => gateway_t3_x2_net,
      subsystem_x19 => gateway_t2_x2_net,
      subsystem_x2 => gateway_out2_net,
      subsystem_x20 => gateway_out2_x2_net,
      subsystem_x21 => gateway_out_x2_net,
      subsystem_x22 => gateway_out1_x2_net,
      subsystem_x23 => gateway_t1_x3_net,
      subsystem_x24 => gateway_t3_x3_net,
      subsystem_x25 => gateway_t2_x3_net,
      subsystem_x26 => gateway_out2_x3_net,
      subsystem_x27 => gateway_out_x3_net,
      subsystem_x28 => gateway_out1_x3_net,
      subsystem_x29 => gateway_t1_x4_net,
      subsystem_x3 => gateway_out_net,
      subsystem_x30 => gateway_t3_x4_net,
      subsystem_x31 => gateway_t2_x4_net,
      subsystem_x32 => gateway_out2_x4_net,
      subsystem_x33 => gateway_out_x4_net,
      subsystem_x34 => gateway_out1_x4_net,
      subsystem_x35 => gateway_t1_x5_net,
      subsystem_x36 => gateway_t3_x5_net,
      subsystem_x37 => gateway_t2_x5_net,
      subsystem_x38 => gateway_out2_x5_net,
      subsystem_x39 => gateway_out_x5_net,
      subsystem_x4 => gateway_out1_net,
      subsystem_x40 => gateway_out1_x5_net,
      subsystem_x41 => gateway_t1_x6_net,
      subsystem_x42 => gateway_t3_x6_net,
      subsystem_x43 => gateway_t2_x6_net,
      subsystem_x44 => gateway_out2_x6_net,
      subsystem_x45 => gateway_out_x6_net,
      subsystem_x46 => gateway_out1_x6_net,
      subsystem_x5 => gateway_t1_x0_net,
      subsystem_x6 => gateway_t3_x0_net,
      subsystem_x7 => gateway_t2_x0_net,
      subsystem_x8 => gateway_out2_x0_net,
      subsystem_x9 => gateway_out_x0_net
    );

  logical1: entity work.logical_a6d07705dd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => slice35_y_net,
      d1(0) => slice36_y_net,
      d2(0) => slice40_y_net,
      d3(0) => slice45_y_net,
      y(0) => logical1_y_net_x0
    );

  logical10: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical9_y_net,
      d1(0) => slice33_y_net,
      y(0) => logical10_y_net_x1
    );

  logical11: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => edge_op_y_net_x0,
      d1(0) => logical14_y_net_x19,
      y(0) => logical11_y_net
    );

  logical12: entity work.logical_5773759131
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d0(0) => c09f12_01_katadc0_user_outofrange1_net,
      d1(0) => delay3_q_net_x1,
      d2(0) => constant1_op_net_x3,
      y(0) => logical12_y_net_x2
    );

  logical14: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => slice78_y_net,
      d1(0) => delay_q_net_x0,
      y(0) => logical14_y_net_x19
    );

  logical17: entity work.logical_5773759131
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d0(0) => c09f12_01_katadc0_user_outofrange0_net,
      d1(0) => delay2_q_net_x1,
      d2(0) => constant3_op_net_x2,
      y(0) => logical17_y_net_x2
    );

  logical2: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register0_q_net_x2,
      d1(0) => register1_q_net_x0,
      y(0) => logical2_y_net_x3
    );

  logical21: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => relational_op_net,
      d1(0) => relational1_op_net,
      y(0) => logical21_y_net_x1
    );

  logical3: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d0(0) => constant20_op_net,
      d1(0) => register1_q_net_x1,
      y(0) => logical3_y_net_x0
    );

  logical4: entity work.logical_444d3f5046
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d0(0) => inverter_op_net_x1,
      d1(0) => c09f12_01_gbe0_tx_overflow_net,
      y(0) => logical4_y_net_x2
    );

  logical5: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => edge_op_y_net_x6,
      d1(0) => edge_op_y_net_x0,
      y(0) => logical5_y_net_x2
    );

  logical6: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter1_op_net,
      d1(0) => arm10_y_net,
      y(0) => logical6_y_net
    );

  logical7: entity work.logical_1df98b5f16
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      d0(0) => inverter_op_net_x1,
      d1(0) => c09f12_01_gbe0_tx_overflow_net,
      d2(0) => inverter4_op_net,
      d3(0) => inverter6_op_net,
      d4(0) => logical21_y_net_x1,
      d5(0) => logical12_y_net_x3,
      y(0) => logical7_y_net_x0
    );

  logical8: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical6_y_net,
      d1(0) => slice29_y_net,
      y(0) => logical8_y_net_x1
    );

  logical9: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter2_op_net,
      d1(0) => arm10_y_net,
      y(0) => logical9_y_net
    );

  man_sync1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => delay41_q_net,
      y(0) => man_sync1_y_net_x0
    );

  mcount_lsw_20ce63de57: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      reg_out => slice_y_net_x0,
      convert_x0 => c09f12_01_mcount_lsw_user_data_in_net
    );

  mcount_msw_d32deeb8a5: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      reg_out => slice9_y_net_x0,
      convert_x0 => c09f12_01_mcount_msw_user_data_in_net
    );

  packetiser_38cd0f1979: entity work.packetiser_entity_38cd0f1979
    port map (
      antbase => delay42_q_net_x0,
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      data_x0 => mux3_y_net_x1,
      dv_x0 => delay1_q_net_x5,
      mrst => logical14_y_net_x19,
      sync => delay2_q_net_x2,
      out_oob => oob_out_x2,
      out_pkt => pkt_out_x2,
      out_valid => valid_out_x3
    );

  packetiser_tvg_contiguous_8f915d99f4: entity work.packetiser_tvg_contiguous_entity_8f915d99f4
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      din => mux1_y_net_x4,
      dv => dvalid_x3,
      sync => sync_out_x3,
      use_tvg => register1_q_net_x2,
      dout => mux3_y_net_x1,
      dv_out => delay1_q_net_x5,
      sync_out_x1 => delay2_q_net_x2
    );

  pps_count_06cc0b86fd: entity work.status_entity_7b6169195a
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      reg_out => concat21_y_net_x0,
      convert_x0 => c09f12_01_pps_count_user_data_in_net
    );

  qdr_ct_bc79c61df7: entity work.qdr_ct_entity_bc79c61df7
    port map (
      c09f12_01_qdr_ct_qdr_ack => c09f12_01_qdr_ct_qdr_ack_net,
      c09f12_01_qdr_ct_qdr_cal_fail => c09f12_01_qdr_ct_qdr_cal_fail_net,
      c09f12_01_qdr_ct_qdr_data_out => c09f12_01_qdr_ct_qdr_data_out_net,
      c09f12_01_qdr_ct_qdr_phy_ready => c09f12_01_qdr_ct_qdr_phy_ready_net,
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      d => mux1_y_net_x5,
      en => delay1_q_net_x4,
      sync => delay_q_net_x4,
      dv => dvalid_x3,
      q => mux1_y_net_x4,
      qdr => c09f12_01_qdr_ct_qdr_address_net,
      qdr_error => logical12_y_net_x3,
      qdr_x0 => c09f12_01_qdr_ct_qdr_be_net,
      qdr_x1 => c09f12_01_qdr_ct_qdr_data_in_net,
      qdr_x2 => c09f12_01_qdr_ct_qdr_rd_en_net,
      qdr_x3 => c09f12_01_qdr_ct_qdr_wr_en_net,
      snap64 => concatenate_y_net_x20,
      sync_out => sync_out_x3
    );

  quantisation_112ce4d84a: entity work.quantisation_entity_112ce4d84a
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      data => delay44_q_net_x1,
      dv => delay45_q_net_x1,
      eq_bus => delay46_q_net_x1,
      sync => delay43_q_net_x1,
      quant_data => concatenate_y_net_x6,
      quant_dv => delay16_q_net_x2,
      quant_of => logical_y_net_x3,
      sync_out => delay6_q_net_x2
    );

  rcs_fb62b436e0: entity work.rcs_entity_fb62b436e0
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      app => c09f12_01_rcs_app_user_data_in_net,
      lib => c09f12_01_rcs_lib_user_data_in_net,
      user => c09f12_01_rcs_user_user_data_in_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      d(0) => arm5_y_net,
      en(0) => edge_op_y_net_x3,
      rst => "0",
      q(0) => register1_q_net_x2
    );

  register19: entity work.xlregister
    generic map (
      d_width => 32,
      init_value => b"00000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      d => counter1_op_net,
      en(0) => logical5_y_net_x2,
      rst => "0",
      q => register19_q_net_x0
    );

  register2: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      d(0) => arm4_y_net,
      en(0) => edge_op_y_net_x3,
      rst => "0",
      q(0) => register2_q_net_x0
    );

  register3: entity work.xlregister
    generic map (
      d_width => 4,
      init_value => b"0000"
    )
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      d => concatenate_y_net_x2,
      en(0) => logical11_y_net,
      rst => "0",
      q => register3_q_net_x0
    );

  register4: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      d(0) => arm11_y_net,
      en(0) => edge_op_y_net_x3,
      rst => "0",
      q(0) => register4_q_net_x0
    );

  register5: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      d(0) => arm6_y_net,
      en(0) => edge_op_y_net_x3,
      rst => "0",
      q(0) => register5_q_net_x2
    );

  relational: entity work.relational_34fc311f5b
    port map (
      a => register19_q_net_x0,
      b => constant5_op_net,
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_f5d1a8e480
    port map (
      a => register19_q_net_x0,
      b => constant37_op_net,
      ce => ce_1_sg_x706,
      clk => clk_1_sg_x706,
      clr => '0',
      op(0) => relational1_op_net
    );

  repack_for_snap_435cb8b557: entity work.repack_for_snap_entity_435cb8b557
    port map (
      data_in => mux1_y_net_x5,
      dv_in => delay1_q_net_x4,
      sync_in => delay_q_net_x4,
      snap_16bit => concatenate_y_net_x27
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 64,
      y_width => 32
    )
    port map (
      x => clock_op_net_x3,
      y => slice_y_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 32,
      y_width => 16
    )
    port map (
      x => delay29_q_net,
      y => slice1_y_net
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 31,
      x_width => 32,
      y_width => 16
    )
    port map (
      x => delay32_q_net,
      y => slice10_y_net
    );

  slice11: entity work.xlslice
    generic map (
      new_lsb => 31,
      new_msb => 31,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => delay27_q_net,
      y(0) => slice11_y_net_x1
    );

  slice12: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 32,
      y_width => 16
    )
    port map (
      x => delay27_q_net,
      y => slice12_y_net
    );

  slice13: entity work.xlslice
    generic map (
      new_lsb => 31,
      new_msb => 31,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => delay18_q_net,
      y(0) => slice13_y_net_x1
    );

  slice14: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 14,
      x_width => 32,
      y_width => 15
    )
    port map (
      x => delay30_q_net,
      y => slice14_y_net
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 32,
      y_width => 16
    )
    port map (
      x => delay32_q_net,
      y => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 64,
      y_width => 32
    )
    port map (
      x => clock_op_net_x3,
      y => slice16_y_net
    );

  slice17: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 20,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => delay17_q_net,
      y(0) => slice17_y_net_x1
    );

  slice18: entity work.xlslice
    generic map (
      new_lsb => 21,
      new_msb => 21,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => delay17_q_net,
      y(0) => slice18_y_net_x1
    );

  slice19: entity work.xlslice
    generic map (
      new_lsb => 22,
      new_msb => 27,
      x_width => 32,
      y_width => 6
    )
    port map (
      x => delay17_q_net,
      y => slice19_y_net_x1
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 32,
      y_width => 16
    )
    port map (
      x => delay20_q_net,
      y => slice2_y_net
    );

  slice21: entity work.xlslice
    generic map (
      new_lsb => 10,
      new_msb => 19,
      x_width => 32,
      y_width => 10
    )
    port map (
      x => delay17_q_net,
      y => slice21_y_net_x3
    );

  slice29: entity work.xlslice
    generic map (
      new_lsb => 31,
      new_msb => 31,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => delay39_q_net,
      y(0) => slice29_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 31,
      x_width => 32,
      y_width => 16
    )
    port map (
      x => delay20_q_net,
      y => slice3_y_net
    );

  slice30: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 5,
      x_width => 32,
      y_width => 6
    )
    port map (
      x => delay39_q_net,
      y => slice30_y_net_x0
    );

  slice33: entity work.xlslice
    generic map (
      new_lsb => 31,
      new_msb => 31,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => delay40_q_net,
      y(0) => slice33_y_net
    );

  slice34: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 5,
      x_width => 32,
      y_width => 6
    )
    port map (
      x => delay40_q_net,
      y => slice34_y_net_x0
    );

  slice35: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x2,
      y(0) => slice35_y_net
    );

  slice36: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x2,
      y(0) => slice36_y_net
    );

  slice38: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 14,
      x_width => 32,
      y_width => 15
    )
    port map (
      x => delay25_q_net,
      y => slice38_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 32,
      y_width => 16
    )
    port map (
      x => delay26_q_net,
      y => slice4_y_net
    );

  slice40: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x2,
      y(0) => slice40_y_net
    );

  slice45: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x2,
      y(0) => slice45_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 32,
      y_width => 10
    )
    port map (
      x => delay17_q_net,
      y => slice6_y_net_x20
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 31,
      x_width => 32,
      y_width => 16
    )
    port map (
      x => delay26_q_net,
      y => slice7_y_net
    );

  slice73: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 32,
      y_width => 16
    )
    port map (
      x => delay18_q_net,
      y => slice73_y_net
    );

  slice78: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => delay41_q_net,
      y(0) => slice78_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 31,
      x_width => 32,
      y_width => 16
    )
    port map (
      x => delay29_q_net,
      y => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 32,
      new_msb => 63,
      x_width => 64,
      y_width => 32
    )
    port map (
      x => clock_op_net_x3,
      y => slice9_y_net_x0
    );

  snap_debug_e25ad94b28: entity work.snap_debug_entity_e25ad94b28
    port map (
      c09f12_01_snap_debug_ctrl_user_data_out => c09f12_01_snap_debug_ctrl_user_data_out_net,
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      din => reinterpret2_output_port_net_x7,
      trig => slice1_y_net_x7,
      we => slice3_y_net_x7,
      addr => c09f12_01_snap_debug_addr_user_data_in_net,
      bram => c09f12_01_snap_debug_bram_addr_net,
      bram_x0 => c09f12_01_snap_debug_bram_data_in_net,
      bram_x1 => c09f12_01_snap_debug_bram_we_net
    );

  subsystem1_1d30495a1f: entity work.subsystem1_entity_1d30495a1f
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      data_in => register0_q_net_x17,
      eof_in => register0_q_net_x9,
      ip_in => register0_q_net_x7,
      led_tx => c09f12_01_gbe0_led_tx_net,
      link_up => c09f12_01_gbe0_led_up_net,
      tx_full => c09f12_01_gbe0_tx_afull_net,
      tx_over => c09f12_01_gbe0_tx_overflow_net,
      valid_in => logical2_y_net_x3,
      debug_out => concatenate_y_net_x12
    );

  subsystem2_c612b0eca6: entity work.subsystem2_entity_c612b0eca6
    port map (
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      data_in => pkt_out_x2,
      link_down => constant17_op_net_x1,
      oob_in => oob_out_x2,
      we_in => valid_out_x3,
      debug_out => concatenate_y_net_x13
    );

  subsystem3_78a9a05795: entity work.subsystem_entity_2a44c7d8dc
    port map (
      adc_disabled => inverter3_op_net_x0,
      adcor => c09f12_01_katadc0_user_outofrange1_net,
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      clk_err => logical21_y_net_x1,
      clr => edge_op_y_net_x4,
      coarse_bits => fstatcbits1_op_net_x0,
      coarsefftor => delay3_q_net_x1,
      ct_err => logical12_y_net_x3,
      fine_bits => fstatfbits1_op_net_x0,
      finefftor => constant1_op_net_x3,
      quantor => logical_y_net_x3,
      sync_val => mux_y_net_x2,
      xaui_of => c09f12_01_gbe0_tx_overflow_net,
      xuai_ldn => inverter_op_net_x1,
      adc0_bad_latch => register7_q_net_x1,
      status => concat13_y_net_x2
    );

  subsystem4_878b3c265c: entity work.subsystem4_entity_878b3c265c
    port map (
      buffer_72 => concatenate_y_net_x24,
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      coarse_72 => concatenate_y_net_x21,
      ct_64 => concatenate_y_net_x20,
      fine_128 => concatenate_y_net_x26,
      finepfb_72 => concatenate_y_net_x25,
      gbetx0_128 => concatenate_y_net_x12,
      quant_16 => concatenate_y_net_x27,
      select_x0 => arm14_y_net_x0,
      xaui_128 => concatenate_y_net_x13,
      data => reinterpret2_output_port_net_x7,
      sync => slice3_y_net_x7,
      valid => slice1_y_net_x7
    );

  subsystem_2a44c7d8dc: entity work.subsystem_entity_2a44c7d8dc
    port map (
      adc_disabled => inverter5_op_net_x0,
      adcor => c09f12_01_katadc0_user_outofrange0_net,
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      clk_err => logical21_y_net_x1,
      clr => edge_op_y_net_x4,
      coarse_bits => fstatcbits0_op_net_x0,
      coarsefftor => delay2_q_net_x1,
      ct_err => logical12_y_net_x3,
      fine_bits => fstatfbits0_op_net_x0,
      finefftor => constant3_op_net_x2,
      quantor => logical_y_net_x3,
      sync_val => mux_y_net_x2,
      xaui_of => c09f12_01_gbe0_tx_overflow_net,
      xuai_ldn => inverter_op_net_x1,
      adc0_bad_latch => register7_q_net_x0,
      status => concat13_y_net_x1
    );

  sync_period_constant: entity work.constant_0904137f94
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => sync_period_constant_op_net_x0
    );

  timing_75b27e8515: entity work.timing_entity_75b27e8515
    port map (
      arm => edge_op_y_net_x5,
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      data_in => concat_y_net_x1,
      pps_in => logical5_y_net_x2,
      sync_period => sync_period_constant_op_net_x0,
      armed => delay_q_net_x0,
      data_out => delay2_q_net_x3,
      sync => delay1_q_net_x6
    );

  trig0_def9f75207: entity work.trig0_entity_def9f75207
    port map (
      adc_data => reinterpret2_output_port_net_x6,
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      synci => concat6_y_net_x0,
      trig_pnt => delay35_q_net_x1,
      data => delay1_q_net_x7,
      synco => delay2_q_net_x4,
      trig => logical1_y_net_x2
    );

  trig1_891d75ae5b: entity work.trig1_entity_891d75ae5b
    port map (
      adc_data => reinterpret1_output_port_net_x7,
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      trig_pnt => delay35_q_net_x1,
      data => delay1_q_net_x8,
      trig => logical1_y_net_x3
    );

  xaui_pack0_ebab7cc6d0: entity work.xaui_pack0_entity_ebab7cc6d0
    port map (
      base_ip => delay37_q_net_x0,
      ce_1 => ce_1_sg_x706,
      clk_1 => clk_1_sg_x706,
      din => register0_q_net_x13,
      linkdown_in => register0_q_net_x16,
      oob => register0_q_net_x14,
      valid_in => register0_q_net_x15,
      dest_ip => register0_q_net_x19,
      discard => register5_q_net_x1,
      dout => register0_q_net_x18,
      eof => logical1_y_net_x4,
      valid_out => register0_q_net_x20
    );

end structural;
